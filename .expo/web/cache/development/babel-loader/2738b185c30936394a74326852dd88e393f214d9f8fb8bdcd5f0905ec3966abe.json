{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Badge, Text } from 'react-native-paper';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PendingSyncBadge = function PendingSyncBadge(_ref) {\n  var _ref$count = _ref.count,\n    count = _ref$count === void 0 ? 0 : _ref$count,\n    _ref$showNavigate = _ref.showNavigate,\n    showNavigate = _ref$showNavigate === void 0 ? true : _ref$showNavigate;\n  var navigation = useNavigation();\n  if (count === 0) {\n    return _jsx(View, {\n      style: styles.iconContainer,\n      children: _jsx(Feather, {\n        name: \"check-circle\",\n        size: 24,\n        color: \"#4CAF50\"\n      })\n    });\n  }\n  var handlePress = function handlePress() {\n    if (showNavigate) {\n      navigation.navigate('PendingSync');\n    }\n  };\n  return _jsxs(TouchableOpacity, {\n    style: styles.iconContainer,\n    onPress: handlePress,\n    disabled: !showNavigate,\n    children: [_jsx(Feather, {\n      name: \"database\",\n      size: 24,\n      color: \"#FF9800\"\n    }), _jsx(Badge, {\n      style: styles.badge,\n      children: count > 99 ? '99+' : count\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  iconContainer: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative'\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    backgroundColor: '#FF9800'\n  }\n});\nexport default PendingSyncBadge;","map":{"version":3,"names":["React","StyleSheet","View","TouchableOpacity","Badge","Text","Feather","useNavigation","jsx","_jsx","jsxs","_jsxs","PendingSyncBadge","_ref","_ref$count","count","_ref$showNavigate","showNavigate","navigation","style","styles","iconContainer","children","name","size","color","handlePress","navigate","onPress","disabled","badge","create","width","height","justifyContent","alignItems","position","top","right","backgroundColor"],"sources":["/home/runner/workspace/src/components/PendingSyncBadge.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\nimport { Badge, Text } from 'react-native-paper';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\nconst PendingSyncBadge = ({ count = 0, showNavigate = true }) => {\n  const navigation = useNavigation();\n\n  if (count === 0) {\n    return (\n      <View style={styles.iconContainer}>\n        <Feather name=\"check-circle\" size={24} color=\"#4CAF50\" />\n      </View>\n    );\n  }\n\n  const handlePress = () => {\n    if (showNavigate) {\n      navigation.navigate('PendingSync');\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      style={styles.iconContainer}\n      onPress={handlePress}\n      disabled={!showNavigate}\n    >\n      <Feather name=\"database\" size={24} color=\"#FF9800\" />\n      <Badge style={styles.badge}>{count > 99 ? '99+' : count}</Badge>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  iconContainer: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    backgroundColor: '#FF9800',\n  },\n});\n\nexport default PendingSyncBadge;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,KAAK,EAAEC,IAAI,QAAQ,oBAAoB;AAChD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAA2C;EAAA,IAAAC,UAAA,GAAAD,IAAA,CAArCE,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,CAAC,GAAAA,UAAA;IAAAE,iBAAA,GAAAH,IAAA,CAAEI,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,IAAI,GAAAA,iBAAA;EACxD,IAAME,UAAU,GAAGX,aAAa,CAAC,CAAC;EAElC,IAAIQ,KAAK,KAAK,CAAC,EAAE;IACf,OACEN,IAAA,CAACP,IAAI;MAACiB,KAAK,EAAEC,MAAM,CAACC,aAAc;MAAAC,QAAA,EAChCb,IAAA,CAACH,OAAO;QAACiB,IAAI,EAAC,cAAc;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS,CAAE;IAAC,CACrD,CAAC;EAEX;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIT,YAAY,EAAE;MAChBC,UAAU,CAACS,QAAQ,CAAC,aAAa,CAAC;IACpC;EACF,CAAC;EAED,OACEhB,KAAA,CAACR,gBAAgB;IACfgB,KAAK,EAAEC,MAAM,CAACC,aAAc;IAC5BO,OAAO,EAAEF,WAAY;IACrBG,QAAQ,EAAE,CAACZ,YAAa;IAAAK,QAAA,GAExBb,IAAA,CAACH,OAAO;MAACiB,IAAI,EAAC,UAAU;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC;IAAS,CAAE,CAAC,EACrDhB,IAAA,CAACL,KAAK;MAACe,KAAK,EAAEC,MAAM,CAACU,KAAM;MAAAR,QAAA,EAAEP,KAAK,GAAG,EAAE,GAAG,KAAK,GAAGA;IAAK,CAAQ,CAAC;EAAA,CAChD,CAAC;AAEvB,CAAC;AAED,IAAMK,MAAM,GAAGnB,UAAU,CAAC8B,MAAM,CAAC;EAC/BV,aAAa,EAAE;IACbW,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,QAAQ,EAAE;EACZ,CAAC;EACDN,KAAK,EAAE;IACLM,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAe3B,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}