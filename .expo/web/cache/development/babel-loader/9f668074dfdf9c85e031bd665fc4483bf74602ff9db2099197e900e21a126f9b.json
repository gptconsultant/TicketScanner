{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"children\", \"containerStyle\", \"contentStyle\", \"closing\", \"direction\", \"gestureResponseDistance\", \"gestureVelocityImpact\", \"onClose\", \"onGestureBegin\", \"onGestureCanceled\", \"onGestureEnd\", \"onOpen\", \"onTransition\", \"transitionSpec\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport Color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CardAnimationContext } from \"../../utils/CardAnimationContext.js\";\nimport { getDistanceForDirection } from \"../../utils/getDistanceForDirection.js\";\nimport { getInvertedMultiplier } from \"../../utils/getInvertedMultiplier.js\";\nimport { getShadowStyle } from \"../../utils/getShadowStyle.js\";\nimport { memoize } from \"../../utils/memoize.js\";\nimport { GestureState, PanGestureHandler } from \"../GestureHandler\";\nimport { CardSheet } from \"./CardSheet.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = Platform.OS !== 'web';\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nexport var Card = function (_React$Component) {\n  function Card() {\n    var _this;\n    _classCallCheck(this, Card);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Card, [].concat(args));\n    _this.isCurrentlyMounted = false;\n    _this.isClosing = new Animated.Value(FALSE);\n    _this.inverted = new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection, _this.props.direction === 'rtl'));\n    _this.layout = {\n      width: new Animated.Value(_this.props.layout.width),\n      height: new Animated.Value(_this.props.layout.height)\n    };\n    _this.isSwiping = new Animated.Value(FALSE);\n    _this.animate = function (_ref) {\n      var closing = _ref.closing,\n        velocity = _ref.velocity;\n      var _this$props = _this.props,\n        transitionSpec = _this$props.transitionSpec,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose,\n        onTransition = _this$props.onTransition,\n        gesture = _this$props.gesture;\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n      _this.lastToValue = toValue;\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition == null ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref2) {\n        var finished = _ref2.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    };\n    _this.getAnimateToValue = function (_ref3) {\n      var closing = _ref3.closing,\n        layout = _ref3.layout,\n        gestureDirection = _ref3.gestureDirection,\n        direction = _ref3.direction,\n        preloaded = _ref3.preloaded;\n      if (!closing && !preloaded) {\n        return 0;\n      }\n      return getDistanceForDirection(layout, gestureDirection, direction === 'rtl');\n    };\n    _this.setPointerEventsEnabled = function (enabled) {\n      var _this$ref$current;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = _this.ref.current) == null ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    };\n    _this.handleStartInteraction = function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    };\n    _this.handleEndInteraction = function () {\n      if (_this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    };\n    _this.handleGestureStateChange = function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      var _this$props2 = _this.props,\n        direction = _this$props2.direction,\n        layout = _this$props2.layout,\n        onClose = _this$props2.onClose,\n        onGestureBegin = _this$props2.onGestureBegin,\n        onGestureCanceled = _this$props2.onGestureCanceled,\n        onGestureEnd = _this$props2.onGestureEnd,\n        gestureDirection = _this$props2.gestureDirection,\n        gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin == null ? void 0 : onGestureBegin();\n          break;\n        case GestureState.CANCELLED:\n        case GestureState.FAILED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled == null ? void 0 : onGestureCanceled();\n            break;\n          }\n        case GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection, direction === 'rtl') > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n                _this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd == null ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    };\n    _this.getInterpolatedStyle = memoize(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    });\n    _this.getCardAnimation = memoize(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    });\n    _this.ref = React.createRef();\n    return _this;\n  }\n  _inherits(Card, _React$Component);\n  return _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.preloaded) {\n        this.animate({\n          closing: this.props.closing\n        });\n      }\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n        gesture = _this$props3.gesture,\n        direction = _this$props3.direction,\n        layout = _this$props3.layout,\n        gestureDirection = _this$props3.gestureDirection,\n        opening = _this$props3.opening,\n        closing = _this$props3.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue(getInvertedMultiplier(gestureDirection, direction === 'rtl'));\n      }\n      var toValue = this.getAnimateToValue(this.props);\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      } else if (opening && !prevProps.opening) {\n        gesture.setValue(getDistanceForDirection(layout, gestureDirection, direction === 'rtl'));\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props$gesture;\n      (_this$props$gesture = this.props.gesture) == null ? void 0 : _this$props$gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n        direction = _this$props4.direction,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = getInvertedMultiplier(gestureDirection, direction === 'rtl');\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        styleInterpolator = _this$props5.styleInterpolator,\n        interpolationIndex = _this$props5.interpolationIndex,\n        current = _this$props5.current,\n        gesture = _this$props5.gesture,\n        next = _this$props5.next,\n        layout = _this$props5.layout,\n        insets = _this$props5.insets,\n        overlay = _this$props5.overlay,\n        overlayEnabled = _this$props5.overlayEnabled,\n        shadowEnabled = _this$props5.shadowEnabled,\n        gestureEnabled = _this$props5.gestureEnabled,\n        gestureDirection = _this$props5.gestureDirection,\n        pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n        children = _this$props5.children,\n        customContainerStyle = _this$props5.containerStyle,\n        contentStyle = _this$props5.contentStyle,\n        closing = _this$props5.closing,\n        direction = _this$props5.direction,\n        gestureResponseDistance = _this$props5.gestureResponseDistance,\n        gestureVelocityImpact = _this$props5.gestureVelocityImpact,\n        onClose = _this$props5.onClose,\n        onGestureBegin = _this$props5.onGestureBegin,\n        onGestureCanceled = _this$props5.onGestureCanceled,\n        onGestureEnd = _this$props5.onGestureEnd,\n        onOpen = _this$props5.onOpen,\n        onTransition = _this$props5.onTransition,\n        transitionSpec = _this$props5.transitionSpec,\n        rest = _objectWithoutProperties(_this$props5, _excluded);\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n      return _jsxs(CardAnimationContext.Provider, {\n        value: interpolationProps,\n        children: [_jsx(Animated.View, {\n          style: {\n            opacity: current\n          },\n          collapsable: false\n        }), _jsxs(View, _objectSpread(_objectSpread({\n          pointerEvents: \"box-none\",\n          collapsable: false\n        }, rest), {}, {\n          children: [overlayEnabled ? _jsx(View, {\n            pointerEvents: \"box-none\",\n            style: StyleSheet.absoluteFill,\n            children: overlay({\n              style: overlayStyle\n            })\n          }) : null, _jsx(Animated.View, {\n            style: [styles.container, containerStyle, customContainerStyle],\n            pointerEvents: \"box-none\",\n            children: _jsx(PanGestureHandler, _objectSpread(_objectSpread({\n              enabled: layout.width !== 0 && gestureEnabled,\n              onGestureEvent: handleGestureEvent,\n              onHandlerStateChange: this.handleGestureStateChange\n            }, this.gestureActivationCriteria()), {}, {\n              children: _jsxs(Animated.View, {\n                needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n                style: [styles.container, cardStyle],\n                children: [shadowEnabled && shadowStyle && !isTransparent ? _jsx(Animated.View, {\n                  style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowStart] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowEnd] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n                    backgroundColor: backgroundColor\n                  }, shadowStyle],\n                  pointerEvents: \"none\"\n                }) : null, _jsx(CardSheet, {\n                  ref: this.ref,\n                  enabled: pageOverflowEnabled,\n                  layout: layout,\n                  style: contentStyle,\n                  children: children\n                })]\n              })\n            }))\n          })]\n        }))]\n      });\n    }\n  }]);\n}(React.Component);\nCard.defaultProps = {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref5) {\n    var style = _ref5.style;\n    return style ? _jsx(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute'\n  },\n  shadowHorizontal: _objectSpread({\n    top: 0,\n    bottom: 0,\n    width: 3\n  }, getShadowStyle({\n    offset: {\n      width: -1,\n      height: 1\n    },\n    radius: 5,\n    opacity: 0.3\n  })),\n  shadowStart: {\n    start: 0\n  },\n  shadowEnd: {\n    end: 0\n  },\n  shadowVertical: _objectSpread({\n    start: 0,\n    end: 0,\n    height: 3\n  }, getShadowStyle({\n    offset: {\n      width: 1,\n      height: -1\n    },\n    radius: 5,\n    opacity: 0.3\n  })),\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"names":["Color","React","Animated","InteractionManager","Platform","StyleSheet","View","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","getShadowStyle","memoize","GestureState","PanGestureHandler","CardSheet","jsx","_jsx","jsxs","_jsxs","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","OS","hasOpacityStyle","style","flattenedStyle","flatten","opacity","Card","_React$Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","isCurrentlyMounted","isClosing","Value","inverted","props","gestureDirection","direction","layout","width","height","isSwiping","animate","_ref","closing","velocity","_this$props","transitionSpec","onOpen","onClose","onTransition","gesture","toValue","getAnimateToValue","_objectSpread","lastToValue","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","_ref2","finished","handleEndInteraction","forceUpdate","_ref3","preloaded","enabled","_this$ref$current","pointerEvents","ref","current","setPointerEvents","interactionHandle","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","_ref4","nativeEvent","_this$props2","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","ACTIVE","CANCELLED","FAILED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","getInterpolatedStyle","styleInterpolator","getCardAnimation","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","createRef","_inherits","_createClass","key","value","componentDidMount","componentDidUpdate","prevProps","_this$props3","opening","componentWillUnmount","_this$props$gesture","stopAnimation","gestureActivationCriteria","_this$props4","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","_this$props5","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","children","customContainerStyle","containerStyle","contentStyle","rest","_objectWithoutProperties","_excluded","interpolationProps","interpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","_StyleSheet$flatten","backgroundColor","isTransparent","alpha","Provider","collapsable","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowStart","shadowEnd","shadowVertical","shadowTop","shadowBottom","Component","defaultProps","_ref5","create","flex","position","offset","radius","end"],"sources":["/home/runner/workspace/node_modules/@react-navigation/stack/src/views/Stack/Card.tsx"],"sourcesContent":["import type { LocaleDirection } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  type StyleProp,\n  StyleSheet,\n  View,\n  type ViewProps,\n  type ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport { CardAnimationContext } from '../../utils/CardAnimationContext';\nimport { getDistanceForDirection } from '../../utils/getDistanceForDirection';\nimport { getInvertedMultiplier } from '../../utils/getInvertedMultiplier';\nimport { getShadowStyle } from '../../utils/getShadowStyle';\nimport { memoize } from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  type PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport { CardSheet, type CardSheetRef } from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  opening: boolean;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation<number>;\n  current: Animated.AnimatedInterpolation<number>;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  direction: LocaleDirection;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  preloaded: boolean;\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    if (!this.props.preloaded) {\n      this.animate({\n        closing: this.props.closing,\n      });\n    }\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { gesture, direction, layout, gestureDirection, opening, closing } =\n      this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(\n        getInvertedMultiplier(gestureDirection, direction === 'rtl')\n      );\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // The route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    } else if (opening && !prevProps.opening) {\n      // This can happen when screen somewhere below in the stack comes into focus via rearranging\n      // Also reset the animated value to make sure that the animation starts from the beginning\n      gesture.setValue(\n        getDistanceForDirection(layout, gestureDirection, direction === 'rtl')\n      );\n\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture?.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(\n      this.props.gestureDirection,\n      this.props.direction === 'rtl'\n    )\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { transitionSpec, onOpen, onClose, onTransition, gesture } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n    direction,\n    preloaded,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n    direction: LocaleDirection;\n    preloaded: boolean;\n  }) => {\n    if (!closing && !preloaded) {\n      return 0;\n    }\n\n    return getDistanceForDirection(\n      layout,\n      gestureDirection,\n      direction === 'rtl'\n    );\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.ref.current?.setPointerEvents(pointerEvents);\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      direction,\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED:\n      case GestureState.FAILED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({\n          closing: this.props.closing,\n          velocity,\n        });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection, direction === 'rtl') >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation<number>,\n      next: Animated.AnimatedInterpolation<number> | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { direction, layout, gestureDirection, gestureResponseDistance } =\n      this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n            gestureDirection === 'vertical-inverted'\n          ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n          : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(\n        gestureDirection,\n        direction === 'rtl'\n      );\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private ref = React.createRef<CardSheetRef>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      closing,\n      direction,\n      gestureResponseDistance,\n      gestureVelocityImpact,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      onOpen,\n      onTransition,\n      transitionSpec,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View\n          pointerEvents=\"box-none\"\n          // Make sure this view is not removed on the new architecture, as it causes focus loss during navigation on Android.\n          // This can happen when the view flattening results in different trees - due to `overflow` style changing in a parent.\n          collapsable={false}\n          {...rest}\n        >\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowStart]\n                        : gestureDirection === 'horizontal-inverted'\n                          ? [styles.shadowHorizontal, styles.shadowEnd]\n                          : gestureDirection === 'vertical'\n                            ? [styles.shadowVertical, styles.shadowTop]\n                            : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.ref}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    ...getShadowStyle({\n      offset: {\n        width: -1,\n        height: 1,\n      },\n      radius: 5,\n      opacity: 0.3,\n    }),\n  },\n  shadowStart: {\n    start: 0,\n  },\n  shadowEnd: {\n    end: 0,\n  },\n  shadowVertical: {\n    start: 0,\n    end: 0,\n    height: 3,\n    ...getShadowStyle({\n      offset: {\n        width: 1,\n        height: -1,\n      },\n      radius: 5,\n      opacity: 0.3,\n    }),\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}