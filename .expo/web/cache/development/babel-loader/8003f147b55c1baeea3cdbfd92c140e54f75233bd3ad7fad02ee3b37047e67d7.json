{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar mockEvents = [{\n  id: '1',\n  name: 'Summer Music Festival',\n  date: '2023-07-15T12:00:00.000Z',\n  location: 'Central Park',\n  isActive: true,\n  description: 'Annual summer music festival featuring local and international artists'\n}, {\n  id: '2',\n  name: 'Tech Conference 2023',\n  date: '2023-08-10T09:00:00.000Z',\n  location: 'Convention Center',\n  isActive: true,\n  description: 'The premier tech event of the year with keynote speakers and workshops'\n}, {\n  id: '3',\n  name: 'Food & Wine Expo',\n  date: '2023-09-05T10:00:00.000Z',\n  location: 'Waterfront Plaza',\n  isActive: true,\n  description: 'A culinary journey with tastings from top chefs and wineries'\n}, {\n  id: '4',\n  name: 'Charity Gala Dinner',\n  date: '2023-10-25T18:00:00.000Z',\n  location: 'Grand Ballroom',\n  isActive: false,\n  description: 'Annual fundraising gala supporting local community initiatives'\n}];\nvar mockGates = [{\n  id: '101',\n  eventId: '1',\n  name: 'Main Entrance',\n  description: 'Primary entrance for all ticket holders',\n  isEnabled: true\n}, {\n  id: '102',\n  eventId: '1',\n  name: 'VIP Gate',\n  description: 'Exclusive entrance for VIP ticket holders',\n  isEnabled: true\n}, {\n  id: '103',\n  eventId: '1',\n  name: 'East Gate',\n  description: 'Secondary entrance on the east side of the venue',\n  isEnabled: false\n}, {\n  id: '201',\n  eventId: '2',\n  name: 'Registration Desk',\n  description: 'Check-in for all attendees',\n  isEnabled: true\n}, {\n  id: '202',\n  eventId: '2',\n  name: 'Speakers Entrance',\n  description: 'Private entrance for speakers and staff',\n  isEnabled: true\n}, {\n  id: '301',\n  eventId: '3',\n  name: 'Main Hall',\n  description: 'Main entrance to the exhibition hall',\n  isEnabled: true\n}, {\n  id: '302',\n  eventId: '3',\n  name: 'Workshop Area',\n  description: 'Entrance to cooking demonstration area',\n  isEnabled: true\n}, {\n  id: '401',\n  eventId: '4',\n  name: 'Ballroom Entrance',\n  description: 'Main entrance to the gala venue',\n  isEnabled: false\n}];\nvar mockTickets = [{\n  id: 'T1001',\n  eventId: '1',\n  type: 'standard',\n  used: false,\n  attendeeName: 'John Doe',\n  email: 'john.doe@example.com'\n}, {\n  id: 'T1002',\n  eventId: '1',\n  type: 'vip',\n  used: false,\n  attendeeName: 'Jane Smith',\n  email: 'jane.smith@example.com'\n}, {\n  id: 'T1003',\n  eventId: '1',\n  type: 'standard',\n  used: true,\n  attendeeName: 'Bob Johnson',\n  email: 'bob.johnson@example.com'\n}, {\n  id: 'T2001',\n  eventId: '2',\n  type: 'standard',\n  used: false,\n  attendeeName: 'Alice Williams',\n  email: 'alice.williams@example.com'\n}, {\n  id: 'T2002',\n  eventId: '2',\n  type: 'vip',\n  used: false,\n  attendeeName: 'Charlie Brown',\n  email: 'charlie.brown@example.com'\n}, {\n  id: 'T3001',\n  eventId: '3',\n  type: 'standard',\n  used: false,\n  attendeeName: 'David Miller',\n  email: 'david.miller@example.com'\n}, {\n  id: 'T4001',\n  eventId: '4',\n  type: 'vip',\n  used: false,\n  attendeeName: 'Emma Davis',\n  email: 'emma.davis@example.com'\n}];\nexport var getEvents = function getEvents() {\n  return [].concat(mockEvents);\n};\nexport var getEventById = function getEventById(eventId) {\n  var event = mockEvents.find(function (event) {\n    return event.id === eventId;\n  });\n  return event ? _objectSpread({}, event) : null;\n};\nexport var getGatesByEventId = function getGatesByEventId(eventId) {\n  var gates = mockGates.filter(function (gate) {\n    return gate.eventId === eventId;\n  });\n  return gates.map(function (gate) {\n    return _objectSpread({}, gate);\n  });\n};\nexport var getGateById = function getGateById(gateId) {\n  var gate = mockGates.find(function (gate) {\n    return gate.id === gateId;\n  });\n  return gate ? _objectSpread({}, gate) : null;\n};\nexport var getTickets = function getTickets() {\n  return [].concat(mockTickets);\n};\nexport var getTicketById = function getTicketById(ticketId) {\n  var ticket = mockTickets.find(function (ticket) {\n    return ticket.id === ticketId;\n  });\n  return ticket ? _objectSpread({}, ticket) : null;\n};\nexport var getTicketsByEventId = function getTicketsByEventId(eventId) {\n  var tickets = mockTickets.filter(function (ticket) {\n    return ticket.eventId === eventId;\n  });\n  return tickets.map(function (ticket) {\n    return _objectSpread({}, ticket);\n  });\n};","map":{"version":3,"names":["mockEvents","id","name","date","location","isActive","description","mockGates","eventId","isEnabled","mockTickets","type","used","attendeeName","email","getEvents","concat","getEventById","event","find","_objectSpread","getGatesByEventId","gates","filter","gate","map","getGateById","gateId","getTickets","getTicketById","ticketId","ticket","getTicketsByEventId","tickets"],"sources":["/home/runner/workspace/src/services/mockData.js"],"sourcesContent":["/**\n * Mock data for the EventScan application\n * In a real application, this would be replaced with API calls to a backend\n */\n\n// Mock events\nconst mockEvents = [\n  {\n    id: '1',\n    name: 'Summer Music Festival',\n    date: '2023-07-15T12:00:00.000Z',\n    location: 'Central Park',\n    isActive: true,\n    description: 'Annual summer music festival featuring local and international artists'\n  },\n  {\n    id: '2',\n    name: 'Tech Conference 2023',\n    date: '2023-08-10T09:00:00.000Z',\n    location: 'Convention Center',\n    isActive: true,\n    description: 'The premier tech event of the year with keynote speakers and workshops'\n  },\n  {\n    id: '3',\n    name: 'Food & Wine Expo',\n    date: '2023-09-05T10:00:00.000Z',\n    location: 'Waterfront Plaza',\n    isActive: true,\n    description: 'A culinary journey with tastings from top chefs and wineries'\n  },\n  {\n    id: '4',\n    name: 'Charity Gala Dinner',\n    date: '2023-10-25T18:00:00.000Z',\n    location: 'Grand Ballroom',\n    isActive: false,\n    description: 'Annual fundraising gala supporting local community initiatives'\n  }\n];\n\n// Mock gates for events\nconst mockGates = [\n  // Gates for event 1 (Summer Music Festival)\n  {\n    id: '101',\n    eventId: '1',\n    name: 'Main Entrance',\n    description: 'Primary entrance for all ticket holders',\n    isEnabled: true\n  },\n  {\n    id: '102',\n    eventId: '1',\n    name: 'VIP Gate',\n    description: 'Exclusive entrance for VIP ticket holders',\n    isEnabled: true\n  },\n  {\n    id: '103',\n    eventId: '1',\n    name: 'East Gate',\n    description: 'Secondary entrance on the east side of the venue',\n    isEnabled: false\n  },\n  \n  // Gates for event 2 (Tech Conference)\n  {\n    id: '201',\n    eventId: '2',\n    name: 'Registration Desk',\n    description: 'Check-in for all attendees',\n    isEnabled: true\n  },\n  {\n    id: '202',\n    eventId: '2',\n    name: 'Speakers Entrance',\n    description: 'Private entrance for speakers and staff',\n    isEnabled: true\n  },\n  \n  // Gates for event 3 (Food & Wine Expo)\n  {\n    id: '301',\n    eventId: '3',\n    name: 'Main Hall',\n    description: 'Main entrance to the exhibition hall',\n    isEnabled: true\n  },\n  {\n    id: '302',\n    eventId: '3',\n    name: 'Workshop Area',\n    description: 'Entrance to cooking demonstration area',\n    isEnabled: true\n  },\n  \n  // Gates for event 4 (Charity Gala)\n  {\n    id: '401',\n    eventId: '4',\n    name: 'Ballroom Entrance',\n    description: 'Main entrance to the gala venue',\n    isEnabled: false\n  }\n];\n\n// Mock tickets\nconst mockTickets = [\n  // Tickets for Event 1 (Summer Music Festival)\n  {\n    id: 'T1001',\n    eventId: '1',\n    type: 'standard',\n    used: false,\n    attendeeName: 'John Doe',\n    email: 'john.doe@example.com'\n  },\n  {\n    id: 'T1002',\n    eventId: '1',\n    type: 'vip',\n    used: false,\n    attendeeName: 'Jane Smith',\n    email: 'jane.smith@example.com'\n  },\n  {\n    id: 'T1003',\n    eventId: '1',\n    type: 'standard',\n    used: true, // Already scanned\n    attendeeName: 'Bob Johnson',\n    email: 'bob.johnson@example.com'\n  },\n  \n  // Tickets for Event 2 (Tech Conference)\n  {\n    id: 'T2001',\n    eventId: '2',\n    type: 'standard',\n    used: false,\n    attendeeName: 'Alice Williams',\n    email: 'alice.williams@example.com'\n  },\n  {\n    id: 'T2002',\n    eventId: '2',\n    type: 'vip',\n    used: false,\n    attendeeName: 'Charlie Brown',\n    email: 'charlie.brown@example.com'\n  },\n  \n  // Tickets for Event 3 (Food & Wine Expo)\n  {\n    id: 'T3001',\n    eventId: '3',\n    type: 'standard',\n    used: false,\n    attendeeName: 'David Miller',\n    email: 'david.miller@example.com'\n  },\n  \n  // Tickets for Event 4 (Charity Gala)\n  {\n    id: 'T4001',\n    eventId: '4',\n    type: 'vip',\n    used: false,\n    attendeeName: 'Emma Davis',\n    email: 'emma.davis@example.com'\n  }\n];\n\n/**\n * Get all events\n * @returns {Array} - All events\n */\nexport const getEvents = () => {\n  return [...mockEvents];\n};\n\n/**\n * Get an event by ID\n * @param {string} eventId - The event ID\n * @returns {object|null} - The event or null if not found\n */\nexport const getEventById = (eventId) => {\n  const event = mockEvents.find(event => event.id === eventId);\n  return event ? { ...event } : null;\n};\n\n/**\n * Get all gates for a specific event\n * @param {string} eventId - The event ID\n * @returns {Array} - Gates for the event\n */\nexport const getGatesByEventId = (eventId) => {\n  const gates = mockGates.filter(gate => gate.eventId === eventId);\n  return gates.map(gate => ({ ...gate }));\n};\n\n/**\n * Get a gate by ID\n * @param {string} gateId - The gate ID\n * @returns {object|null} - The gate or null if not found\n */\nexport const getGateById = (gateId) => {\n  const gate = mockGates.find(gate => gate.id === gateId);\n  return gate ? { ...gate } : null;\n};\n\n/**\n * Get all tickets\n * @returns {Array} - All tickets\n */\nexport const getTickets = () => {\n  return [...mockTickets];\n};\n\n/**\n * Get a ticket by ID\n * @param {string} ticketId - The ticket ID\n * @returns {object|null} - The ticket or null if not found\n */\nexport const getTicketById = (ticketId) => {\n  const ticket = mockTickets.find(ticket => ticket.id === ticketId);\n  return ticket ? { ...ticket } : null;\n};\n\n/**\n * Get tickets for a specific event\n * @param {string} eventId - The event ID\n * @returns {Array} - Tickets for the event\n */\nexport const getTicketsByEventId = (eventId) => {\n  const tickets = mockTickets.filter(ticket => ticket.eventId === eventId);\n  return tickets.map(ticket => ({ ...ticket }));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}