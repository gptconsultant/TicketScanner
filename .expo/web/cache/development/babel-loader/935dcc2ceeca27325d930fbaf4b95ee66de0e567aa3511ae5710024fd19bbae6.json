{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport EventSelectionScreen from \"../screens/EventSelectionScreen\";\nimport GateSelectionScreen from \"../screens/GateSelectionScreen\";\nimport ScannerScreen from \"../screens/ScannerScreen\";\nimport AdminPanelScreen from \"../screens/AdminPanelScreen\";\nimport PendingSyncScreen from \"../screens/PendingSyncScreen\";\nimport ScanResultScreen from \"../screens/ScanResultScreen\";\nimport { Feather } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar ScannerStack = function ScannerStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Scanner\",\n      component: ScannerScreen,\n      options: {\n        title: 'Scan Tickets'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ScanResult\",\n      component: ScanResultScreen,\n      options: {\n        title: 'Scan Result'\n      }\n    })]\n  });\n};\nvar MainTabs = function MainTabs() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var isAdmin = (user == null ? void 0 : user.role) === 'Admin' || (user == null ? void 0 : user.role) === 'Staff';\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: '#1E88E5',\n      tabBarInactiveTintColor: 'gray'\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"ScannerTab\",\n      component: ScannerStack,\n      options: {\n        headerShown: false,\n        tabBarLabel: 'Scan',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Feather, {\n            name: \"camera\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"GateSelection\",\n      component: GateSelectionScreen,\n      options: {\n        title: 'Gate Selection',\n        tabBarLabel: 'Gates',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Feather, {\n            name: \"map-pin\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"PendingSync\",\n      component: PendingSyncScreen,\n      options: {\n        title: 'Pending Sync',\n        tabBarLabel: 'Sync',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Feather, {\n            name: \"refresh-cw\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), isAdmin && _jsx(Tab.Screen, {\n      name: \"AdminPanel\",\n      component: AdminPanelScreen,\n      options: {\n        title: 'Admin Panel',\n        tabBarLabel: 'Admin',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n            size = _ref4.size;\n          return _jsx(Feather, {\n            name: \"settings\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n};\nvar MainNavigator = function MainNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"EventSelection\",\n      component: EventSelectionScreen,\n      options: {\n        title: 'Select Event'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: MainTabs,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\nexport default MainNavigator;","map":{"version":3,"names":["React","createStackNavigator","createBottomTabNavigator","useAuth","EventSelectionScreen","GateSelectionScreen","ScannerScreen","AdminPanelScreen","PendingSyncScreen","ScanResultScreen","Feather","jsx","_jsx","jsxs","_jsxs","Stack","Tab","ScannerStack","Navigator","children","Screen","name","component","options","title","MainTabs","_useAuth","user","isAdmin","role","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","tabBarLabel","tabBarIcon","_ref","color","size","_ref2","_ref3","_ref4","MainNavigator"],"sources":["/home/runner/workspace/src/navigation/MainNavigator.js"],"sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useAuth } from '../contexts/AuthContext';\nimport EventSelectionScreen from '../screens/EventSelectionScreen';\nimport GateSelectionScreen from '../screens/GateSelectionScreen';\nimport ScannerScreen from '../screens/ScannerScreen';\nimport AdminPanelScreen from '../screens/AdminPanelScreen';\nimport PendingSyncScreen from '../screens/PendingSyncScreen';\nimport ScanResultScreen from '../screens/ScanResultScreen';\nimport { Feather } from '@expo/vector-icons';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst ScannerStack = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"Scanner\" \n        component={ScannerScreen}\n        options={{ title: 'Scan Tickets' }}\n      />\n      <Stack.Screen \n        name=\"ScanResult\" \n        component={ScanResultScreen}\n        options={{ title: 'Scan Result' }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst MainTabs = () => {\n  const { user } = useAuth();\n  const isAdmin = user?.role === 'Admin' || user?.role === 'Staff';\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: '#1E88E5',\n        tabBarInactiveTintColor: 'gray',\n      }}\n    >\n      <Tab.Screen \n        name=\"ScannerTab\" \n        component={ScannerStack}\n        options={{\n          headerShown: false,\n          tabBarLabel: 'Scan',\n          tabBarIcon: ({ color, size }) => (\n            <Feather name=\"camera\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen \n        name=\"GateSelection\" \n        component={GateSelectionScreen}\n        options={{\n          title: 'Gate Selection',\n          tabBarLabel: 'Gates',\n          tabBarIcon: ({ color, size }) => (\n            <Feather name=\"map-pin\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen \n        name=\"PendingSync\" \n        component={PendingSyncScreen}\n        options={{\n          title: 'Pending Sync',\n          tabBarLabel: 'Sync',\n          tabBarIcon: ({ color, size }) => (\n            <Feather name=\"refresh-cw\" size={size} color={color} />\n          ),\n        }}\n      />\n      {isAdmin && (\n        <Tab.Screen \n          name=\"AdminPanel\" \n          component={AdminPanelScreen}\n          options={{\n            title: 'Admin Panel',\n            tabBarLabel: 'Admin',\n            tabBarIcon: ({ color, size }) => (\n              <Feather name=\"settings\" size={size} color={color} />\n            ),\n          }}\n        />\n      )}\n    </Tab.Navigator>\n  );\n};\n\nconst MainNavigator = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"EventSelection\" \n        component={EventSelectionScreen}\n        options={{ title: 'Select Event' }}\n      />\n      <Stack.Screen \n        name=\"Main\" \n        component={MainTabs}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nexport default MainNavigator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}