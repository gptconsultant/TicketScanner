{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text, Switch, Divider, ActivityIndicator } from 'react-native-paper';\nimport { Feather } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AdminGateControl = function AdminGateControl(_ref) {\n  var gate = _ref.gate,\n    onToggle = _ref.onToggle,\n    _ref$isAdmin = _ref.isAdmin,\n    isAdmin = _ref$isAdmin === void 0 ? false : _ref$isAdmin;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isUpdating = _useState2[0],\n    setIsUpdating = _useState2[1];\n  var handleToggle = function () {\n    var _ref2 = _asyncToGenerator(function* (value) {\n      if (!isAdmin) return;\n      try {\n        setIsUpdating(true);\n        yield onToggle(value);\n      } catch (error) {\n        console.error(\"Error toggling gate status:\", error);\n      } finally {\n        setIsUpdating(false);\n      }\n    });\n    return function handleToggle(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.gateInfo,\n      children: [_jsx(Text, {\n        style: styles.gateName,\n        children: gate.name\n      }), _jsx(Text, {\n        style: styles.gateDescription,\n        children: gate.description || 'No description'\n      })]\n    }), _jsx(View, {\n      style: styles.controlContainer,\n      children: isUpdating ? _jsx(ActivityIndicator, {\n        size: \"small\",\n        color: \"#1E88E5\"\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: [styles.statusText, gate.isEnabled ? styles.enabledText : styles.disabledText],\n          children: gate.isEnabled ? 'Enabled' : 'Disabled'\n        }), _jsx(Switch, {\n          value: gate.isEnabled,\n          onValueChange: handleToggle,\n          disabled: !isAdmin || isUpdating,\n          color: \"#1E88E5\"\n        })]\n      })\n    }), _jsx(Divider, {\n      style: styles.divider\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 16\n  },\n  gateInfo: {\n    flex: 1,\n    marginBottom: 8\n  },\n  gateName: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  gateDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginTop: 2\n  },\n  controlContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    marginVertical: 8\n  },\n  statusText: {\n    marginRight: 12,\n    fontWeight: 'bold'\n  },\n  enabledText: {\n    color: '#4CAF50'\n  },\n  disabledText: {\n    color: '#F44336'\n  },\n  divider: {\n    marginTop: 8\n  }\n});\nexport default AdminGateControl;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","Switch","Divider","ActivityIndicator","Feather","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminGateControl","_ref","gate","onToggle","_ref$isAdmin","isAdmin","_useState","_useState2","_slicedToArray","isUpdating","setIsUpdating","handleToggle","_ref2","_asyncToGenerator","value","error","console","_x","apply","arguments","style","styles","container","children","gateInfo","gateName","name","gateDescription","description","controlContainer","size","color","statusText","isEnabled","enabledText","disabledText","onValueChange","disabled","divider","create","marginBottom","flex","fontSize","fontWeight","marginTop","flexDirection","alignItems","justifyContent","marginVertical","marginRight"],"sources":["/home/runner/workspace/src/components/AdminGateControl.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Text, Switch, Divider, ActivityIndicator } from 'react-native-paper';\nimport { Feather } from '@expo/vector-icons';\n\nconst AdminGateControl = ({ gate, onToggle, isAdmin = false }) => {\n  const [isUpdating, setIsUpdating] = useState(false);\n  \n  const handleToggle = async (value) => {\n    if (!isAdmin) return;\n    \n    try {\n      setIsUpdating(true);\n      await onToggle(value);\n    } catch (error) {\n      console.error(\"Error toggling gate status:\", error);\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n  \n  return (\n    <View style={styles.container}>\n      <View style={styles.gateInfo}>\n        <Text style={styles.gateName}>{gate.name}</Text>\n        <Text style={styles.gateDescription}>{gate.description || 'No description'}</Text>\n      </View>\n      <View style={styles.controlContainer}>\n        {isUpdating ? (\n          <ActivityIndicator size=\"small\" color=\"#1E88E5\" />\n        ) : (\n          <>\n            <Text style={[\n              styles.statusText,\n              gate.isEnabled ? styles.enabledText : styles.disabledText\n            ]}>\n              {gate.isEnabled ? 'Enabled' : 'Disabled'}\n            </Text>\n            <Switch\n              value={gate.isEnabled}\n              onValueChange={handleToggle}\n              disabled={!isAdmin || isUpdating}\n              color=\"#1E88E5\"\n            />\n          </>\n        )}\n      </View>\n      <Divider style={styles.divider} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n  },\n  gateInfo: {\n    flex: 1,\n    marginBottom: 8,\n  },\n  gateName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  gateDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginTop: 2,\n  },\n  controlContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    marginVertical: 8,\n  },\n  statusText: {\n    marginRight: 12,\n    fontWeight: 'bold',\n  },\n  enabledText: {\n    color: '#4CAF50',\n  },\n  disabledText: {\n    color: '#F44336',\n  },\n  divider: {\n    marginTop: 8,\n  },\n});\n\nexport default AdminGateControl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}