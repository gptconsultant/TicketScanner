{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _excluded = [\"password\"];\nvar mockUsers = [{\n  id: '1',\n  username: 'admin',\n  password: 'admin123',\n  name: 'Admin User',\n  role: 'Admin'\n}, {\n  id: '2',\n  username: 'staff',\n  password: 'staff123',\n  name: 'Staff Member',\n  role: 'Staff'\n}, {\n  id: '3',\n  username: 'volunteer',\n  password: 'volunteer123',\n  name: 'Event Volunteer',\n  role: 'Volunteer'\n}];\nexport var login = function () {\n  var _ref = _asyncToGenerator(function* (username, password) {\n    yield new Promise(function (resolve) {\n      return setTimeout(resolve, 1000);\n    });\n    var user = mockUsers.find(function (user) {\n      return user.username === username && user.password === password;\n    });\n    if (user) {\n      var _password = user.password,\n        userWithoutPassword = _objectWithoutProperties(user, _excluded);\n      return userWithoutPassword;\n    } else {\n      throw new Error('Invalid username or password');\n    }\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var logout = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    yield new Promise(function (resolve) {\n      return setTimeout(resolve, 500);\n    });\n    return true;\n  });\n  return function logout() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var validateToken = function () {\n  var _ref3 = _asyncToGenerator(function* (token) {\n    yield new Promise(function (resolve) {\n      return setTimeout(resolve, 500);\n    });\n    return true;\n  });\n  return function validateToken(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getUserPermissions = function () {\n  var _ref4 = _asyncToGenerator(function* (userId) {\n    yield new Promise(function (resolve) {\n      return setTimeout(resolve, 500);\n    });\n    var user = mockUsers.find(function (user) {\n      return user.id === userId;\n    });\n    if (!user) {\n      throw new Error('User not found');\n    }\n    switch (user.role) {\n      case 'Admin':\n        return {\n          canScanTickets: true,\n          canManageGates: true,\n          canViewReports: true\n        };\n      case 'Staff':\n        return {\n          canScanTickets: true,\n          canManageGates: true,\n          canViewReports: false\n        };\n      case 'Volunteer':\n        return {\n          canScanTickets: true,\n          canManageGates: false,\n          canViewReports: false\n        };\n      default:\n        return {\n          canScanTickets: false,\n          canManageGates: false,\n          canViewReports: false\n        };\n    }\n  });\n  return function getUserPermissions(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["mockUsers","id","username","password","name","role","login","_ref","_asyncToGenerator","Promise","resolve","setTimeout","user","find","userWithoutPassword","_objectWithoutProperties","_excluded","Error","_x","_x2","apply","arguments","logout","_ref2","validateToken","_ref3","token","_x3","getUserPermissions","_ref4","userId","canScanTickets","canManageGates","canViewReports","_x4"],"sources":["/home/runner/workspace/src/services/authService.js"],"sourcesContent":["// Mock authentication service for the event scanning app\n// This would be replaced with actual API calls in a production environment\n\n// Mock user data\nconst mockUsers = [\n  {\n    id: '1',\n    username: 'admin',\n    password: 'admin123',\n    name: 'Admin User',\n    role: 'Admin'\n  },\n  {\n    id: '2',\n    username: 'staff',\n    password: 'staff123',\n    name: 'Staff Member',\n    role: 'Staff'\n  },\n  {\n    id: '3',\n    username: 'volunteer',\n    password: 'volunteer123',\n    name: 'Event Volunteer',\n    role: 'Volunteer'\n  }\n];\n\n/**\n * Simulates a login request to authenticate a user\n * @param {string} username - The username\n * @param {string} password - The password\n * @returns {Promise<object>} - User data if authentication successful\n */\nexport const login = async (username, password) => {\n  // Simulate network request\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  \n  const user = mockUsers.find(\n    user => user.username === username && user.password === password\n  );\n  \n  if (user) {\n    // Don't include password in the returned user object\n    const { password, ...userWithoutPassword } = user;\n    return userWithoutPassword;\n  } else {\n    throw new Error('Invalid username or password');\n  }\n};\n\n/**\n * Simulates a logout request\n * @returns {Promise<void>}\n */\nexport const logout = async () => {\n  // Simulate network request\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  return true;\n};\n\n/**\n * Validate an authentication token\n * @param {string} token - Authentication token\n * @returns {Promise<boolean>} - True if token is valid\n */\nexport const validateToken = async (token) => {\n  // Simulate network request\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  // In a real implementation, this would validate the token with the server\n  return true;\n};\n\n/**\n * Get the user's permissions\n * @param {string} userId - User ID\n * @returns {Promise<object>} - User permissions\n */\nexport const getUserPermissions = async (userId) => {\n  // Simulate network request\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  const user = mockUsers.find(user => user.id === userId);\n  \n  if (!user) {\n    throw new Error('User not found');\n  }\n  \n  // Return different permissions based on role\n  switch (user.role) {\n    case 'Admin':\n      return {\n        canScanTickets: true,\n        canManageGates: true,\n        canViewReports: true\n      };\n    case 'Staff':\n      return {\n        canScanTickets: true,\n        canManageGates: true,\n        canViewReports: false\n      };\n    case 'Volunteer':\n      return {\n        canScanTickets: true,\n        canManageGates: false,\n        canViewReports: false\n      };\n    default:\n      return {\n        canScanTickets: false,\n        canManageGates: false,\n        canViewReports: false\n      };\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}