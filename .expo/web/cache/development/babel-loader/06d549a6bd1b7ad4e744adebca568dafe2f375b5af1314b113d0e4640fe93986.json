{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { getHeaderTitle, HeaderBackContext } from '@react-navigation/elements';\nimport { NavigationContext, NavigationRouteContext, useLinkBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { forNoAnimation, forSlideLeft, forSlideRight, forSlideUp } from \"../../TransitionConfigs/HeaderStyleInterpolators.js\";\nimport { Header } from \"./Header.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function HeaderContainer(_ref) {\n  var mode = _ref.mode,\n    scenes = _ref.scenes,\n    layout = _ref.layout,\n    getPreviousScene = _ref.getPreviousScene,\n    getFocusedRoute = _ref.getFocusedRoute,\n    onContentHeightChange = _ref.onContentHeightChange,\n    style = _ref.style;\n  var focusedRoute = getFocusedRoute();\n  var parentHeaderBack = React.useContext(HeaderBackContext);\n  var _useLinkBuilder = useLinkBuilder(),\n    buildHref = _useLinkBuilder.buildHref;\n  return _jsx(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: style,\n    children: scenes.slice(-3).map(function (scene, i, self) {\n      var _self, _self2;\n      if (mode === 'screen' && i !== self.length - 1 || !scene) {\n        return null;\n      }\n      var _scene$descriptor$opt = scene.descriptor.options,\n        header = _scene$descriptor$opt.header,\n        headerMode = _scene$descriptor$opt.headerMode,\n        _scene$descriptor$opt2 = _scene$descriptor$opt.headerShown,\n        headerShown = _scene$descriptor$opt2 === void 0 ? true : _scene$descriptor$opt2,\n        headerTransparent = _scene$descriptor$opt.headerTransparent,\n        headerStyleInterpolator = _scene$descriptor$opt.headerStyleInterpolator;\n      if (headerMode !== mode || !headerShown) {\n        return null;\n      }\n      var isFocused = focusedRoute.key === scene.descriptor.route.key;\n      var previousScene = getPreviousScene({\n        route: scene.descriptor.route\n      });\n      var headerBack = parentHeaderBack;\n      if (previousScene) {\n        var _previousScene$descri = previousScene.descriptor,\n          options = _previousScene$descri.options,\n          route = _previousScene$descri.route;\n        headerBack = previousScene ? {\n          title: getHeaderTitle(options, route.name),\n          href: buildHref(route.name, route.params)\n        } : parentHeaderBack;\n      }\n      var previousDescriptor = (_self = self[i - 1]) == null ? void 0 : _self.descriptor;\n      var nextDescriptor = (_self2 = self[i + 1]) == null ? void 0 : _self2.descriptor;\n      var _ref2 = (previousDescriptor == null ? void 0 : previousDescriptor.options) || {},\n        _ref2$headerShown = _ref2.headerShown,\n        previousHeaderShown = _ref2$headerShown === void 0 ? true : _ref2$headerShown,\n        previousHeaderMode = _ref2.headerMode;\n      var nextHeaderlessScene = self.slice(i + 1).find(function (scene) {\n        var _ref3 = (scene == null ? void 0 : scene.descriptor.options) || {},\n          _ref3$headerShown = _ref3.headerShown,\n          currentHeaderShown = _ref3$headerShown === void 0 ? true : _ref3$headerShown,\n          currentHeaderMode = _ref3.headerMode;\n        return currentHeaderShown === false || currentHeaderMode === 'screen';\n      });\n      var _ref4 = (nextHeaderlessScene == null ? void 0 : nextHeaderlessScene.descriptor.options) || {},\n        nextHeaderlessGestureDirection = _ref4.gestureDirection;\n      var isHeaderStatic = (previousHeaderShown === false || previousHeaderMode === 'screen') && !nextDescriptor || nextHeaderlessScene;\n      var props = {\n        layout: layout,\n        back: headerBack,\n        progress: scene.progress,\n        options: scene.descriptor.options,\n        route: scene.descriptor.route,\n        navigation: scene.descriptor.navigation,\n        styleInterpolator: mode === 'float' ? isHeaderStatic ? nextHeaderlessGestureDirection === 'vertical' || nextHeaderlessGestureDirection === 'vertical-inverted' ? forSlideUp : nextHeaderlessGestureDirection === 'horizontal-inverted' ? forSlideRight : forSlideLeft : headerStyleInterpolator : forNoAnimation\n      };\n      return _jsx(NavigationContext.Provider, {\n        value: scene.descriptor.navigation,\n        children: _jsx(NavigationRouteContext.Provider, {\n          value: scene.descriptor.route,\n          children: _jsx(View, {\n            onLayout: onContentHeightChange ? function (e) {\n              var height = e.nativeEvent.layout.height;\n              onContentHeightChange({\n                route: scene.descriptor.route,\n                height: height\n              });\n            } : undefined,\n            pointerEvents: isFocused ? 'box-none' : 'none',\n            accessibilityElementsHidden: !isFocused,\n            importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n            style: mode === 'float' && !isFocused || headerTransparent ? styles.header : null,\n            children: header !== undefined ? header(props) : _jsx(Header, _objectSpread({}, props))\n          })\n        })\n      }, scene.descriptor.route.key);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    start: 0,\n    end: 0\n  }\n});","map":{"version":3,"names":["getHeaderTitle","HeaderBackContext","NavigationContext","NavigationRouteContext","useLinkBuilder","React","Animated","StyleSheet","View","forNoAnimation","forSlideLeft","forSlideRight","forSlideUp","Header","jsx","_jsx","HeaderContainer","_ref","mode","scenes","layout","getPreviousScene","getFocusedRoute","onContentHeightChange","style","focusedRoute","parentHeaderBack","useContext","_useLinkBuilder","buildHref","pointerEvents","children","slice","map","scene","i","self","_self","_self2","length","_scene$descriptor$opt","descriptor","options","header","headerMode","_scene$descriptor$opt2","headerShown","headerTransparent","headerStyleInterpolator","isFocused","key","route","previousScene","headerBack","_previousScene$descri","title","name","href","params","previousDescriptor","nextDescriptor","_ref2","_ref2$headerShown","previousHeaderShown","previousHeaderMode","nextHeaderlessScene","find","_ref3","_ref3$headerShown","currentHeaderShown","currentHeaderMode","_ref4","nextHeaderlessGestureDirection","gestureDirection","isHeaderStatic","props","back","progress","navigation","styleInterpolator","Provider","value","onLayout","e","height","nativeEvent","undefined","accessibilityElementsHidden","importantForAccessibility","styles","_objectSpread","create","position","top","start","end"],"sources":["/home/runner/workspace/node_modules/@react-navigation/stack/src/views/Header/HeaderContainer.tsx"],"sourcesContent":["import { getHeaderTitle, HeaderBackContext } from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  type ParamListBase,\n  type Route,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  type StyleProp,\n  StyleSheet,\n  View,\n  type ViewStyle,\n} from 'react-native';\n\nimport {\n  forNoAnimation,\n  forSlideLeft,\n  forSlideRight,\n  forSlideUp,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport type {\n  Layout,\n  Scene,\n  StackHeaderMode,\n  StackHeaderProps,\n  StackNavigationProp,\n} from '../../types';\nimport { Header } from './Header';\n\nexport type Props = {\n  mode: StackHeaderMode;\n  layout: Layout;\n  scenes: (Scene | undefined)[];\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nexport function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n  const { buildHref } = useLinkBuilder();\n\n  return (\n    <Animated.View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const {\n          header,\n          headerMode,\n          headerShown = true,\n          headerTransparent,\n          headerStyleInterpolator,\n        } = scene.descriptor.options;\n\n        if (headerMode !== mode || !headerShown) {\n          return null;\n        }\n\n        const isFocused = focusedRoute.key === scene.descriptor.route.key;\n        const previousScene = getPreviousScene({\n          route: scene.descriptor.route,\n        });\n\n        let headerBack = parentHeaderBack;\n\n        if (previousScene) {\n          const { options, route } = previousScene.descriptor;\n\n          headerBack = previousScene\n            ? {\n                title: getHeaderTitle(options, route.name),\n                href: buildHref(route.name, route.params),\n              }\n            : parentHeaderBack;\n        }\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousDescriptor = self[i - 1]?.descriptor;\n        const nextDescriptor = self[i + 1]?.descriptor;\n\n        const {\n          headerShown: previousHeaderShown = true,\n          headerMode: previousHeaderMode,\n        } = previousDescriptor?.options || {};\n\n        // If any of the next screens don't have a header or header is part of the screen\n        // Then we need to move this header offscreen so that it doesn't cover it\n        const nextHeaderlessScene = self.slice(i + 1).find((scene) => {\n          const {\n            headerShown: currentHeaderShown = true,\n            headerMode: currentHeaderMode,\n          } = scene?.descriptor.options || {};\n\n          return currentHeaderShown === false || currentHeaderMode === 'screen';\n        });\n\n        const { gestureDirection: nextHeaderlessGestureDirection } =\n          nextHeaderlessScene?.descriptor.options || {};\n\n        const isHeaderStatic =\n          ((previousHeaderShown === false || previousHeaderMode === 'screen') &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextDescriptor) ||\n          nextHeaderlessScene;\n\n        const props: StackHeaderProps = {\n          layout,\n          back: headerBack,\n          progress: scene.progress,\n          options: scene.descriptor.options,\n          route: scene.descriptor.route,\n          navigation: scene.descriptor\n            .navigation as StackNavigationProp<ParamListBase>,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? nextHeaderlessGestureDirection === 'vertical' ||\n                  nextHeaderlessGestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : nextHeaderlessGestureDirection === 'horizontal-inverted'\n                    ? forSlideRight\n                    : forSlideLeft\n                : headerStyleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.descriptor.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <NavigationRouteContext.Provider value={scene.descriptor.route}>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) => {\n                        const { height } = e.nativeEvent.layout;\n\n                        onContentHeightChange({\n                          route: scene.descriptor.route,\n                          height,\n                        });\n                      }\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {header !== undefined ? header(props) : <Header {...props} />}\n              </View>\n            </NavigationRouteContext.Provider>\n          </NavigationContext.Provider>\n        );\n      })}\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    start: 0,\n    end: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}