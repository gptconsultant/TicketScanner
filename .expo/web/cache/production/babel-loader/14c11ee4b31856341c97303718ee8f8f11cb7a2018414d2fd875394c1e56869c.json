{"ast":null,"code":"\"use strict\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _excluded=[\"state\",\"descriptors\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}import{HeaderShownContext,SafeAreaProviderCompat}from'@react-navigation/elements';import{CommonActions,StackActions}from'@react-navigation/native';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{SafeAreaInsetsContext}from'react-native-safe-area-context';import{ModalPresentationContext}from\"../../utils/ModalPresentationContext.js\";import{GestureHandlerRootView}from\"../GestureHandler\";import{HeaderContainer}from\"../Header/HeaderContainer.js\";import{CardStack}from\"./CardStack.js\";import{jsx as _jsx}from\"react/jsx-runtime\";var GestureHandlerWrapper=GestureHandlerRootView!=null?GestureHandlerRootView:View;var isArrayEqual=function isArrayEqual(a,b){return a.length===b.length&&a.every(function(it,index){return it===b[index];});};export var StackView=function(_React$Component){function StackView(){var _this;_classCallCheck(this,StackView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_callSuper(this,StackView,[].concat(args));_this.state={routes:[],previousRoutes:[],previousDescriptors:{},openingRouteKeys:[],closingRouteKeys:[],replacingRouteKeys:[],descriptors:{}};_this.getPreviousRoute=function(_ref){var route=_ref.route;var _this$state=_this.state,closingRouteKeys=_this$state.closingRouteKeys,replacingRouteKeys=_this$state.replacingRouteKeys;var routes=_this.state.routes.filter(function(r){return r.key===route.key||!closingRouteKeys.includes(r.key)&&!replacingRouteKeys.includes(r.key);});var index=routes.findIndex(function(r){return r.key===route.key;});return routes[index-1];};_this.renderHeader=function(props){return _jsx(HeaderContainer,_objectSpread({},props));};_this.handleOpenRoute=function(_ref2){var route=_ref2.route;var _this$props=_this.props,state=_this$props.state,navigation=_this$props.navigation;var _this$state2=_this.state,closingRouteKeys=_this$state2.closingRouteKeys,replacingRouteKeys=_this$state2.replacingRouteKeys;if(closingRouteKeys.some(function(key){return key===route.key;})&&replacingRouteKeys.every(function(key){return key!==route.key;})&&state.routeNames.includes(route.name)&&!state.routes.some(function(r){return r.key===route.key;})){navigation.dispatch(function(state){var routes=[].concat(_toConsumableArray(state.routes.filter(function(r){return r.key!==route.key;})),[route]);return CommonActions.reset(_objectSpread(_objectSpread({},state),{},{routes:routes,index:routes.length-1}));});}else{_this.setState(function(state){return{routes:state.replacingRouteKeys.length?state.routes.filter(function(r){return!state.replacingRouteKeys.includes(r.key);}):state.routes,openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;}),replacingRouteKeys:[]};});}};_this.handleCloseRoute=function(_ref3){var route=_ref3.route;var _this$props2=_this.props,state=_this$props2.state,navigation=_this$props2.navigation;if(state.routes.some(function(r){return r.key===route.key;})){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.pop()),{},{source:route.key,target:state.key}));}else{_this.setState(function(state){return{routes:state.routes.filter(function(r){return r.key!==route.key;}),openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;})};});}};_this.handleTransitionStart=function(_ref4,closing){var route=_ref4.route;return _this.props.navigation.emit({type:'transitionStart',data:{closing:closing},target:route.key});};_this.handleTransitionEnd=function(_ref5,closing){var route=_ref5.route;return _this.props.navigation.emit({type:'transitionEnd',data:{closing:closing},target:route.key});};_this.handleGestureStart=function(_ref6){var route=_ref6.route;_this.props.navigation.emit({type:'gestureStart',target:route.key});};_this.handleGestureEnd=function(_ref7){var route=_ref7.route;_this.props.navigation.emit({type:'gestureEnd',target:route.key});};_this.handleGestureCancel=function(_ref8){var route=_ref8.route;_this.props.navigation.emit({type:'gestureCancel',target:route.key});};return _this;}_inherits(StackView,_React$Component);return _createClass(StackView,[{key:\"render\",value:function render(){var _this2=this;var _this$props3=this.props,state=_this$props3.state,_=_this$props3.descriptors,rest=_objectWithoutProperties(_this$props3,_excluded);var _this$state3=this.state,routes=_this$state3.routes,descriptors=_this$state3.descriptors,openingRouteKeys=_this$state3.openingRouteKeys,closingRouteKeys=_this$state3.closingRouteKeys;var preloadedDescriptors=state.preloadedRoutes.reduce(function(acc,route){acc[route.key]=acc[route.key]||_this2.props.describe(route,true);return acc;},{});return _jsx(GestureHandlerWrapper,{style:styles.container,children:_jsx(SafeAreaProviderCompat,{children:_jsx(SafeAreaInsetsContext.Consumer,{children:function children(insets){return _jsx(ModalPresentationContext.Consumer,{children:function children(isParentModal){return _jsx(HeaderShownContext.Consumer,{children:function children(isParentHeaderShown){return _jsx(CardStack,_objectSpread({insets:insets,isParentHeaderShown:isParentHeaderShown,isParentModal:isParentModal,getPreviousRoute:_this2.getPreviousRoute,routes:routes,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,onOpenRoute:_this2.handleOpenRoute,onCloseRoute:_this2.handleCloseRoute,onTransitionStart:_this2.handleTransitionStart,onTransitionEnd:_this2.handleTransitionEnd,renderHeader:_this2.renderHeader,state:state,descriptors:descriptors,onGestureStart:_this2.handleGestureStart,onGestureEnd:_this2.handleGestureEnd,onGestureCancel:_this2.handleGestureCancel,preloadedDescriptors:preloadedDescriptors},rest));}});}});}})})});}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if((props.state.routes===state.previousRoutes||isArrayEqual(props.state.routes.map(function(r){return r.key;}),state.previousRoutes.map(function(r){return r.key;})))&&state.routes.length){var _routes=state.routes;var _previousRoutes=state.previousRoutes;var _descriptors=props.descriptors;var previousDescriptors=state.previousDescriptors;if(props.descriptors!==state.previousDescriptors){_descriptors=state.routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});previousDescriptors=props.descriptors;}if(props.state.routes!==state.previousRoutes){var map=props.state.routes.reduce(function(acc,route){acc[route.key]=route;return acc;},{});_routes=state.routes.map(function(route){return map[route.key]||route;});_previousRoutes=props.state.routes;}return{routes:_routes,previousRoutes:_previousRoutes,descriptors:_descriptors,previousDescriptors:previousDescriptors};}var routes=props.state.index<props.state.routes.length-1?props.state.routes.slice(0,props.state.index+1):props.state.routes;var previousRoutes=state.previousRoutes;var openingRouteKeys=state.openingRouteKeys,closingRouteKeys=state.closingRouteKeys,replacingRouteKeys=state.replacingRouteKeys;var previousFocusedRoute=previousRoutes[previousRoutes.length-1];var nextFocusedRoute=routes[routes.length-1];var isAnimationEnabled=function isAnimationEnabled(key){var descriptor=props.descriptors[key]||state.descriptors[key];return descriptor?descriptor.options.animation!=='none':true;};var getAnimationTypeForReplace=function getAnimationTypeForReplace(key){var _descriptor$options$a;var descriptor=props.descriptors[key]||state.descriptors[key];return(_descriptor$options$a=descriptor.options.animationTypeForReplace)!=null?_descriptor$options$a:'push';};if(previousFocusedRoute&&previousFocusedRoute.key!==nextFocusedRoute.key){if(previousRoutes.some(function(r){return r.key===nextFocusedRoute.key;})&&!routes.some(function(r){return r.key===previousFocusedRoute.key;})){if(isAnimationEnabled(previousFocusedRoute.key)&&!closingRouteKeys.includes(previousFocusedRoute.key)){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}}else{if(isAnimationEnabled(nextFocusedRoute.key)&&!openingRouteKeys.includes(nextFocusedRoute.key)){openingRouteKeys=[].concat(_toConsumableArray(openingRouteKeys),[nextFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});if(getAnimationTypeForReplace(nextFocusedRoute.key)==='pop'){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}else{replacingRouteKeys=[].concat(_toConsumableArray(replacingRouteKeys),[previousFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=routes.slice();routes.splice(routes.length-1,0,previousFocusedRoute);}}}}}else if(replacingRouteKeys.length||closingRouteKeys.length){var _routes2;routes=routes.slice();(_routes2=routes).splice.apply(_routes2,[routes.length-1,0].concat(_toConsumableArray(state.routes.filter(function(_ref9){var key=_ref9.key;return isAnimationEnabled(key)?replacingRouteKeys.includes(key)||closingRouteKeys.includes(key):false;}))));}if(!routes.length){throw new Error('There should always be at least one route in the navigation state.');}var descriptors=routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});return{routes:routes,previousRoutes:props.state.routes,previousDescriptors:props.descriptors,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,replacingRouteKeys:replacingRouteKeys,descriptors:descriptors};}}]);}(React.Component);var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"names":["HeaderShownContext","SafeAreaProviderCompat","CommonActions","StackActions","React","StyleSheet","View","SafeAreaInsetsContext","ModalPresentationContext","GestureHandlerRootView","HeaderContainer","CardStack","jsx","_jsx","GestureHandlerWrapper","isArrayEqual","a","b","length","every","it","index","StackView","_React$Component","_this","_classCallCheck","_len","arguments","args","Array","_key","_callSuper","concat","state","routes","previousRoutes","previousDescriptors","openingRouteKeys","closingRouteKeys","replacingRouteKeys","descriptors","getPreviousRoute","_ref","route","_this$state","filter","r","key","includes","findIndex","renderHeader","props","_objectSpread","handleOpenRoute","_ref2","_this$props","navigation","_this$state2","some","routeNames","name","dispatch","_toConsumableArray","reset","setState","handleCloseRoute","_ref3","_this$props2","pop","source","target","handleTransitionStart","_ref4","closing","emit","type","data","handleTransitionEnd","_ref5","handleGestureStart","_ref6","handleGestureEnd","_ref7","handleGestureCancel","_ref8","_inherits","_createClass","value","render","_this2","_this$props3","_","rest","_objectWithoutProperties","_excluded","_this$state3","preloadedDescriptors","preloadedRoutes","reduce","acc","describe","style","styles","container","children","Consumer","insets","isParentModal","isParentHeaderShown","onOpenRoute","onCloseRoute","onTransitionStart","onTransitionEnd","onGestureStart","onGestureEnd","onGestureCancel","getDerivedStateFromProps","map","slice","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","descriptor","options","animation","getAnimationTypeForReplace","_descriptor$options$a","animationTypeForReplace","splice","_routes2","apply","_ref9","Error","Component","create","flex"],"sources":["/home/runner/workspace/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx"],"sourcesContent":["import {\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  CommonActions,\n  type LocaleDirection,\n  type ParamListBase,\n  type Route,\n  type RouteProp,\n  StackActions,\n  type StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport type {\n  StackDescriptor,\n  StackDescriptorMap,\n  StackNavigationConfig,\n  StackNavigationHelpers,\n} from '../../types';\nimport { ModalPresentationContext } from '../../utils/ModalPresentationContext';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport {\n  HeaderContainer,\n  type Props as HeaderContainerProps,\n} from '../Header/HeaderContainer';\nimport { CardStack } from './CardStack';\n\ntype Props = StackNavigationConfig & {\n  direction: LocaleDirection;\n  state: StackNavigationState<ParamListBase>;\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n  describe: (\n    route: RouteProp<ParamListBase>,\n    placeholder: boolean\n  ) => StackDescriptor;\n};\n\ntype State = {\n  // Local copy of the routes which are actually rendered\n  routes: Route<string>[];\n  // Previous routes, to compare whether routes have changed or not\n  previousRoutes: Route<string>[];\n  // Previous descriptors, to compare whether descriptors have changed or not\n  previousDescriptors: StackDescriptorMap;\n  // List of routes being opened, we need to animate pushing of these new routes\n  openingRouteKeys: string[];\n  // List of routes being closed, we need to animate popping of these routes\n  closingRouteKeys: string[];\n  // List of routes being replaced, we need to keep a copy until the new route animates in\n  replacingRouteKeys: string[];\n  // Since the local routes can vary from the routes from props, we need to keep the descriptors for old routes\n  // Otherwise we won't be able to access the options for routes that were removed\n  descriptors: StackDescriptorMap;\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a: any[], b: any[]) =>\n  a.length === b.length && a.every((it, index) => it === b[index]);\n\nexport class StackView extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Readonly<Props>,\n    state: Readonly<State>\n  ) {\n    // If there was no change in routes, we don't need to compute anything\n    if (\n      (props.state.routes === state.previousRoutes ||\n        isArrayEqual(\n          props.state.routes.map((r) => r.key),\n          state.previousRoutes.map((r) => r.key)\n        )) &&\n      state.routes.length\n    ) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce<StackDescriptorMap>((acc, route) => {\n          acc[route.key] =\n            props.descriptors[route.key] || state.descriptors[route.key];\n\n          return acc;\n        }, {});\n\n        previousDescriptors = props.descriptors;\n      }\n\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce<Record<string, Route<string>>>(\n          (acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          },\n          {}\n        );\n\n        routes = state.routes.map((route) => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors,\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes =\n      props.state.index < props.state.routes.length - 1\n        ? // Remove any extra routes from the state\n          // The last visible route should be the focused route, i.e. at current index\n          props.state.routes.slice(0, props.state.index + 1)\n        : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    const { previousRoutes } = state;\n\n    let { openingRouteKeys, closingRouteKeys, replacingRouteKeys } = state;\n\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1] as\n      | Route<string>\n      | undefined;\n    const nextFocusedRoute = routes[routes.length - 1];\n\n    const isAnimationEnabled = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor ? descriptor.options.animation !== 'none' : true;\n    };\n\n    const getAnimationTypeForReplace = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n\n    if (\n      previousFocusedRoute &&\n      previousFocusedRoute.key !== nextFocusedRoute.key\n    ) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (\n        previousRoutes.some((r) => r.key === nextFocusedRoute.key) &&\n        !routes.some((r) => r.key === previousFocusedRoute.key)\n      ) {\n        // The previously focused route was removed, and the new focused route was already present\n        // We treat this as a pop\n\n        if (\n          isAnimationEnabled(previousFocusedRoute.key) &&\n          !closingRouteKeys.includes(previousFocusedRoute.key)\n        ) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // A route has come to the focus, we treat this as a push\n        // A replace or rearranging can also trigger this\n        // The animation should look like push\n\n        if (\n          isAnimationEnabled(nextFocusedRoute.key) &&\n          !openingRouteKeys.includes(nextFocusedRoute.key)\n        ) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n\n          closingRouteKeys = closingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n\n          if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(\n              (key) => key !== previousFocusedRoute.key\n            );\n\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [\n                ...closingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(\n                (key) => key !== nextFocusedRoute.key\n              );\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [\n                ...replacingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              closingRouteKeys = closingRouteKeys.filter(\n                (key) => key !== previousFocusedRoute.key\n              );\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(\n        routes.length - 1,\n        0,\n        ...state.routes.filter(({ key }) =>\n          isAnimationEnabled(key)\n            ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key)\n            : false\n        )\n      );\n    }\n\n    if (!routes.length) {\n      throw new Error(\n        'There should always be at least one route in the navigation state.'\n      );\n    }\n\n    const descriptors = routes.reduce<StackDescriptorMap>((acc, route) => {\n      acc[route.key] =\n        props.descriptors[route.key] || state.descriptors[route.key];\n\n      return acc;\n    }, {});\n\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors,\n    };\n  }\n\n  state: State = {\n    routes: [],\n    previousRoutes: [],\n    previousDescriptors: {},\n    openingRouteKeys: [],\n    closingRouteKeys: [],\n    replacingRouteKeys: [],\n    descriptors: {},\n  };\n\n  private getPreviousRoute = ({ route }: { route: Route<string> }) => {\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n    const routes = this.state.routes.filter(\n      (r) =>\n        r.key === route.key ||\n        (!closingRouteKeys.includes(r.key) &&\n          !replacingRouteKeys.includes(r.key))\n    );\n\n    const index = routes.findIndex((r) => r.key === route.key);\n\n    return routes[index - 1];\n  };\n\n  private renderHeader = (props: HeaderContainerProps) => {\n    return <HeaderContainer {...props} />;\n  };\n\n  private handleOpenRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n\n    if (\n      closingRouteKeys.some((key) => key === route.key) &&\n      replacingRouteKeys.every((key) => key !== route.key) &&\n      state.routeNames.includes(route.name) &&\n      !state.routes.some((r) => r.key === route.key)\n    ) {\n      // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n      // So we need to add this route back to the state\n      navigation.dispatch((state) => {\n        const routes = [\n          ...state.routes.filter((r) => r.key !== route.key),\n          route,\n        ];\n\n        return CommonActions.reset({\n          ...state,\n          routes,\n          index: routes.length - 1,\n        });\n      });\n    } else {\n      this.setState((state) => ({\n        routes: state.replacingRouteKeys.length\n          ? state.routes.filter(\n              (r) => !state.replacingRouteKeys.includes(r.key)\n            )\n          : state.routes,\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        replacingRouteKeys: [],\n      }));\n    }\n  };\n\n  private handleCloseRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n\n    if (state.routes.some((r) => r.key === route.key)) {\n      // If a route exists in state, trigger a pop\n      // This will happen in when the route was closed from the card component\n      // e.g. When the close animation triggered from a gesture ends\n      navigation.dispatch({\n        ...StackActions.pop(),\n        source: route.key,\n        target: state.key,\n      });\n    } else {\n      // We need to clean up any state tracking the route and pop it immediately\n      this.setState((state) => ({\n        routes: state.routes.filter((r) => r.key !== route.key),\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n      }));\n    }\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionStart',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleTransitionEnd = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleGestureStart = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureStart',\n      target: route.key,\n    });\n  };\n\n  private handleGestureEnd = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureEnd',\n      target: route.key,\n    });\n  };\n\n  private handleGestureCancel = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureCancel',\n      target: route.key,\n    });\n  };\n\n  render() {\n    const {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n\n    const { routes, descriptors, openingRouteKeys, closingRouteKeys } =\n      this.state;\n\n    const preloadedDescriptors =\n      state.preloadedRoutes.reduce<StackDescriptorMap>((acc, route) => {\n        acc[route.key] = acc[route.key] || this.props.describe(route, true);\n        return acc;\n      }, {});\n\n    return (\n      <GestureHandlerWrapper style={styles.container}>\n        <SafeAreaProviderCompat>\n          <SafeAreaInsetsContext.Consumer>\n            {(insets) => (\n              <ModalPresentationContext.Consumer>\n                {(isParentModal) => (\n                  <HeaderShownContext.Consumer>\n                    {(isParentHeaderShown) => (\n                      <CardStack\n                        insets={insets!}\n                        isParentHeaderShown={isParentHeaderShown}\n                        isParentModal={isParentModal}\n                        getPreviousRoute={this.getPreviousRoute}\n                        routes={routes}\n                        openingRouteKeys={openingRouteKeys}\n                        closingRouteKeys={closingRouteKeys}\n                        onOpenRoute={this.handleOpenRoute}\n                        onCloseRoute={this.handleCloseRoute}\n                        onTransitionStart={this.handleTransitionStart}\n                        onTransitionEnd={this.handleTransitionEnd}\n                        renderHeader={this.renderHeader}\n                        state={state}\n                        descriptors={descriptors}\n                        onGestureStart={this.handleGestureStart}\n                        onGestureEnd={this.handleGestureEnd}\n                        onGestureCancel={this.handleGestureCancel}\n                        preloadedDescriptors={preloadedDescriptors}\n                        {...rest}\n                      />\n                    )}\n                  </HeaderShownContext.Consumer>\n                )}\n              </ModalPresentationContext.Consumer>\n            )}\n          </SafeAreaInsetsContext.Consumer>\n        </SafeAreaProviderCompat>\n      </GestureHandlerWrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}