{"ast":null,"code":"import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var InternetReachability=_createClass(function InternetReachability(configuration,listener){var _this=this;_classCallCheck(this,InternetReachability);_defineProperty(this,\"_configuration\",void 0);_defineProperty(this,\"_listener\",void 0);_defineProperty(this,\"_isInternetReachable\",undefined);_defineProperty(this,\"_currentInternetReachabilityCheckHandler\",null);_defineProperty(this,\"_currentTimeoutHandle\",null);_defineProperty(this,\"_setIsInternetReachable\",function(isInternetReachable){if(_this._isInternetReachable===isInternetReachable){return;}_this._isInternetReachable=isInternetReachable;_this._listener(_this._isInternetReachable);});_defineProperty(this,\"_setExpectsConnection\",function(expectsConnection){if(_this._currentInternetReachabilityCheckHandler!==null){_this._currentInternetReachabilityCheckHandler.cancel();_this._currentInternetReachabilityCheckHandler=null;}if(_this._currentTimeoutHandle!==null){clearTimeout(_this._currentTimeoutHandle);_this._currentTimeoutHandle=null;}if(expectsConnection&&_this._configuration.reachabilityShouldRun()){if(!_this._isInternetReachable){_this._setIsInternetReachable(null);}_this._currentInternetReachabilityCheckHandler=_this._checkInternetReachability();}else{_this._setIsInternetReachable(false);}});_defineProperty(this,\"_checkInternetReachability\",function(){var controller=new AbortController();var responsePromise=fetch(_this._configuration.reachabilityUrl,{headers:_this._configuration.reachabilityHeaders,method:_this._configuration.reachabilityMethod,cache:'no-cache',signal:controller.signal});var timeoutHandle;var timeoutPromise=new Promise(function(_,reject){timeoutHandle=setTimeout(function(){return reject('timedout');},_this._configuration.reachabilityRequestTimeout);});var cancel=function cancel(){};var cancelPromise=new Promise(function(_,reject){cancel=function cancel(){return reject('canceled');};});var promise=Promise.race([responsePromise,timeoutPromise,cancelPromise]).then(function(response){return _this._configuration.reachabilityTest(response);}).then(function(result){_this._setIsInternetReachable(result);var nextTimeoutInterval=_this._isInternetReachable?_this._configuration.reachabilityLongTimeout:_this._configuration.reachabilityShortTimeout;_this._currentTimeoutHandle=setTimeout(_this._checkInternetReachability,nextTimeoutInterval);}).catch(function(error){if('canceled'===error){controller.abort();}else{if('timedout'===error){controller.abort();}_this._setIsInternetReachable(false);_this._currentTimeoutHandle=setTimeout(_this._checkInternetReachability,_this._configuration.reachabilityShortTimeout);}}).then(function(){clearTimeout(timeoutHandle);},function(error){clearTimeout(timeoutHandle);throw error;});return{promise:promise,cancel:cancel};});_defineProperty(this,\"update\",function(state){if(typeof state.isInternetReachable==='boolean'&&_this._configuration.useNativeReachability){_this._setIsInternetReachable(state.isInternetReachable);}else{_this._setExpectsConnection(state.isConnected);}});_defineProperty(this,\"currentState\",function(){return _this._isInternetReachable;});_defineProperty(this,\"tearDown\",function(){if(_this._currentInternetReachabilityCheckHandler!==null){_this._currentInternetReachabilityCheckHandler.cancel();_this._currentInternetReachabilityCheckHandler=null;}if(_this._currentTimeoutHandle!==null){clearTimeout(_this._currentTimeoutHandle);_this._currentTimeoutHandle=null;}});this._configuration=configuration;this._listener=listener;});export{InternetReachability as default};","map":{"version":3,"names":["InternetReachability","_createClass","configuration","listener","_this","_classCallCheck","_defineProperty","undefined","isInternetReachable","_isInternetReachable","_listener","expectsConnection","_currentInternetReachabilityCheckHandler","cancel","_currentTimeoutHandle","clearTimeout","_configuration","reachabilityShouldRun","_setIsInternetReachable","_checkInternetReachability","controller","AbortController","responsePromise","fetch","reachabilityUrl","headers","reachabilityHeaders","method","reachabilityMethod","cache","signal","timeoutHandle","timeoutPromise","Promise","_","reject","setTimeout","reachabilityRequestTimeout","cancelPromise","promise","race","then","response","reachabilityTest","result","nextTimeoutInterval","reachabilityLongTimeout","reachabilityShortTimeout","catch","error","abort","state","useNativeReachability","_setExpectsConnection","isConnected","default"],"sources":["/home/runner/workspace/node_modules/@react-native-community/netinfo/lib/module/internal/internetReachability.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport * as PrivateTypes from './privateTypes';\nimport * as Types from './types';\n\ninterface InternetReachabilityCheckHandler {\n  promise: Promise<void>;\n  cancel: () => void;\n}\n\nexport default class InternetReachability {\n  private _configuration: Types.NetInfoConfiguration;\n  private _listener: PrivateTypes.NetInfoInternetReachabilityChangeListener;\n  private _isInternetReachable: boolean | null | undefined = undefined;\n  private _currentInternetReachabilityCheckHandler: InternetReachabilityCheckHandler | null = null;\n  private _currentTimeoutHandle: ReturnType<typeof setTimeout> | null = null;\n\n  constructor(\n    configuration: Types.NetInfoConfiguration,\n    listener: PrivateTypes.NetInfoInternetReachabilityChangeListener,\n  ) {\n    this._configuration = configuration;\n    this._listener = listener;\n  }\n\n  private _setIsInternetReachable = (\n    isInternetReachable: boolean | null,\n  ): void => {\n    if (this._isInternetReachable === isInternetReachable) {\n      return;\n    }\n\n    this._isInternetReachable = isInternetReachable;\n    this._listener(this._isInternetReachable);\n  };\n\n  private _setExpectsConnection = (expectsConnection: boolean | null): void => {\n    // Cancel any pending check\n    if (this._currentInternetReachabilityCheckHandler !== null) {\n      this._currentInternetReachabilityCheckHandler.cancel();\n      this._currentInternetReachabilityCheckHandler = null;\n    }\n    // Cancel any pending timeout\n    if (this._currentTimeoutHandle !== null) {\n      clearTimeout(this._currentTimeoutHandle);\n      this._currentTimeoutHandle = null;\n    }\n\n    if (expectsConnection && this._configuration.reachabilityShouldRun()) {\n      // If we expect a connection, start the process for finding if we have one\n      // Set the state to \"null\" if it was previously false\n      if (!this._isInternetReachable) {\n        this._setIsInternetReachable(null);\n      }\n      // Start a network request to check for internet\n      this._currentInternetReachabilityCheckHandler = this._checkInternetReachability();\n    } else {\n      // If we don't expect a connection or don't run reachability check, just change the state to \"false\"\n      this._setIsInternetReachable(false);\n    }\n  };\n\n  private _checkInternetReachability = (): InternetReachabilityCheckHandler => {\n    const controller = new AbortController();\n\n    const responsePromise = fetch(this._configuration.reachabilityUrl, {\n      headers: this._configuration.reachabilityHeaders,\n      method: this._configuration.reachabilityMethod,\n      cache: 'no-cache',\n      signal: controller.signal,\n    });\n\n    // Create promise that will reject after the request timeout has been reached\n    let timeoutHandle: ReturnType<typeof setTimeout>;\n    const timeoutPromise = new Promise<Response>((_, reject): void => {\n      timeoutHandle = setTimeout(\n        (): void => reject('timedout'),\n        this._configuration.reachabilityRequestTimeout,\n      );\n    });\n\n    // Create promise that makes it possible to cancel a pending request through a reject\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    let cancel: () => void = (): void => {};\n    const cancelPromise = new Promise<Response>((_, reject): void => {\n      cancel = (): void => reject('canceled');\n    });\n\n    const promise = Promise.race([\n      responsePromise,\n      timeoutPromise,\n      cancelPromise,\n    ])\n      .then(\n        (response): Promise<boolean> => {\n          return this._configuration.reachabilityTest(response);\n        },\n      )\n      .then(\n        (result): void => {\n          this._setIsInternetReachable(result);\n          const nextTimeoutInterval = this._isInternetReachable\n            ? this._configuration.reachabilityLongTimeout\n            : this._configuration.reachabilityShortTimeout;\n          this._currentTimeoutHandle = setTimeout(\n            this._checkInternetReachability,\n            nextTimeoutInterval,\n          );\n        },\n      )\n      .catch(\n        (error: Error | 'timedout' | 'canceled'): void => {\n          if ('canceled' === error) {\n            controller.abort();\n          } else {\n            if ('timedout' === error) {\n              controller.abort();\n            }\n            \n            this._setIsInternetReachable(false);\n            this._currentTimeoutHandle = setTimeout(\n              this._checkInternetReachability,\n              this._configuration.reachabilityShortTimeout,\n            );\n          }\n        },\n      )\n      // Clear request timeout and propagate any errors\n      .then(\n        (): void => {\n          clearTimeout(timeoutHandle);\n        },\n        (error: Error): void => {\n          clearTimeout(timeoutHandle);\n          throw error;\n        },\n      );\n\n    return {\n      promise,\n      cancel,\n    };\n  };\n\n  public update = (state: PrivateTypes.NetInfoNativeModuleState): void => {\n    if (\n      typeof state.isInternetReachable === 'boolean' &&\n      this._configuration.useNativeReachability\n    ) {\n      this._setIsInternetReachable(state.isInternetReachable);\n    } else {\n      this._setExpectsConnection(state.isConnected);\n    }\n  };\n\n  public currentState = (): boolean | null | undefined => {\n    return this._isInternetReachable;\n  };\n\n  public tearDown = (): void => {\n    // Cancel any pending check\n    if (this._currentInternetReachabilityCheckHandler !== null) {\n      this._currentInternetReachabilityCheckHandler.cancel();\n      this._currentInternetReachabilityCheckHandler = null;\n    }\n\n    // Cancel any pending timeout\n    if (this._currentTimeoutHandle !== null) {\n      clearTimeout(this._currentTimeoutHandle);\n      this._currentTimeoutHandle = null;\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}