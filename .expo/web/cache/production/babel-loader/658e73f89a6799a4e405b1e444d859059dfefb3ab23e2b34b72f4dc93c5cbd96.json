{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import AsyncStorage from'@react-native-async-storage/async-storage';var OFFLINE_CHECK_INS_KEY='@event_scanner:offline_check_ins';var CACHED_TICKETS_KEY='@event_scanner:cached_tickets';export var saveCheckInOffline=function(){var _ref=_asyncToGenerator(function*(checkInData){try{var existingCheckIns=yield getOfflineCheckIns();var newCheckIn=_objectSpread(_objectSpread({},checkInData),{},{offlineTimestamp:new Date().toISOString(),synced:false});yield AsyncStorage.setItem(OFFLINE_CHECK_INS_KEY,JSON.stringify([].concat(_toConsumableArray(existingCheckIns),[newCheckIn])));console.log('Check-in saved offline:',newCheckIn);}catch(error){console.error('Error saving check-in offline:',error);throw error;}});return function saveCheckInOffline(_x){return _ref.apply(this,arguments);};}();export var getOfflineCheckIns=function(){var _ref2=_asyncToGenerator(function*(){try{var checkInsJson=yield AsyncStorage.getItem(OFFLINE_CHECK_INS_KEY);return checkInsJson?JSON.parse(checkInsJson):[];}catch(error){console.error('Error getting offline check-ins:',error);return[];}});return function getOfflineCheckIns(){return _ref2.apply(this,arguments);};}();export var removeOfflineCheckIn=function(){var _ref3=_asyncToGenerator(function*(ticketId){try{var checkIns=yield getOfflineCheckIns();var updatedCheckIns=checkIns.filter(function(checkIn){return checkIn.ticketId!==ticketId;});yield AsyncStorage.setItem(OFFLINE_CHECK_INS_KEY,JSON.stringify(updatedCheckIns));}catch(error){console.error('Error removing offline check-in:',error);throw error;}});return function removeOfflineCheckIn(_x2){return _ref3.apply(this,arguments);};}();export var clearOfflineCheckIns=function(){var _ref4=_asyncToGenerator(function*(){try{yield AsyncStorage.removeItem(OFFLINE_CHECK_INS_KEY);}catch(error){console.error('Error clearing offline check-ins:',error);throw error;}});return function clearOfflineCheckIns(){return _ref4.apply(this,arguments);};}();export var cacheTicketOffline=function(){var _ref5=_asyncToGenerator(function*(ticket){try{var existingTickets=yield getCachedTickets();var ticketExists=existingTickets.some(function(t){return t.id===ticket.id;});if(!ticketExists){var cachedTicket=_objectSpread(_objectSpread({},ticket),{},{cached_at:new Date().toISOString(),used:false});yield AsyncStorage.setItem(CACHED_TICKETS_KEY,JSON.stringify([].concat(_toConsumableArray(existingTickets),[cachedTicket])));console.log('Ticket cached offline:',cachedTicket);}}catch(error){console.error('Error caching ticket offline:',error);throw error;}});return function cacheTicketOffline(_x3){return _ref5.apply(this,arguments);};}();export var getCachedTickets=function(){var _ref6=_asyncToGenerator(function*(){try{var ticketsJson=yield AsyncStorage.getItem(CACHED_TICKETS_KEY);return ticketsJson?JSON.parse(ticketsJson):[];}catch(error){console.error('Error getting cached tickets:',error);return[];}});return function getCachedTickets(){return _ref6.apply(this,arguments);};}();export var getCachedTicketById=function(){var _ref7=_asyncToGenerator(function*(ticketId){try{var tickets=yield getCachedTickets();return tickets.find(function(ticket){return ticket.id===ticketId;})||null;}catch(error){console.error('Error getting cached ticket by ID:',error);return null;}});return function getCachedTicketById(_x4){return _ref7.apply(this,arguments);};}();export var clearCachedTickets=function(){var _ref8=_asyncToGenerator(function*(){try{yield AsyncStorage.removeItem(CACHED_TICKETS_KEY);}catch(error){console.error('Error clearing cached tickets:',error);throw error;}});return function clearCachedTickets(){return _ref8.apply(this,arguments);};}();export var markCachedTicketAsUsed=function(){var _ref9=_asyncToGenerator(function*(ticketId){try{var tickets=yield getCachedTickets();var updatedTickets=tickets.map(function(ticket){if(ticket.id===ticketId){return _objectSpread(_objectSpread({},ticket),{},{used:true,used_at:new Date().toISOString()});}return ticket;});var ticketWasUpdated=tickets.some(function(ticket){return ticket.id===ticketId;});if(ticketWasUpdated){yield AsyncStorage.setItem(CACHED_TICKETS_KEY,JSON.stringify(updatedTickets));console.log('Ticket marked as used:',ticketId);return true;}return false;}catch(error){console.error('Error marking cached ticket as used:',error);return false;}});return function markCachedTicketAsUsed(_x5){return _ref9.apply(this,arguments);};}();","map":{"version":3,"names":["AsyncStorage","OFFLINE_CHECK_INS_KEY","CACHED_TICKETS_KEY","saveCheckInOffline","_ref","_asyncToGenerator","checkInData","existingCheckIns","getOfflineCheckIns","newCheckIn","_objectSpread","offlineTimestamp","Date","toISOString","synced","setItem","JSON","stringify","concat","_toConsumableArray","console","log","error","_x","apply","arguments","_ref2","checkInsJson","getItem","parse","removeOfflineCheckIn","_ref3","ticketId","checkIns","updatedCheckIns","filter","checkIn","_x2","clearOfflineCheckIns","_ref4","removeItem","cacheTicketOffline","_ref5","ticket","existingTickets","getCachedTickets","ticketExists","some","t","id","cachedTicket","cached_at","used","_x3","_ref6","ticketsJson","getCachedTicketById","_ref7","tickets","find","_x4","clearCachedTickets","_ref8","markCachedTicketAsUsed","_ref9","updatedTickets","map","used_at","ticketWasUpdated","_x5"],"sources":["/home/runner/workspace/src/services/offlineStorage.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Storage keys\nconst OFFLINE_CHECK_INS_KEY = '@event_scanner:offline_check_ins';\nconst CACHED_TICKETS_KEY = '@event_scanner:cached_tickets';\n\n/**\n * Save a check-in to offline storage\n * @param {Object} checkInData - The check-in data to save\n * @returns {Promise<void>}\n */\nexport const saveCheckInOffline = async (checkInData) => {\n  try {\n    // Get existing check-ins\n    const existingCheckIns = await getOfflineCheckIns();\n    \n    // Add new check-in with timestamp\n    const newCheckIn = {\n      ...checkInData,\n      offlineTimestamp: new Date().toISOString(),\n      synced: false,\n    };\n    \n    // Save updated array\n    await AsyncStorage.setItem(\n      OFFLINE_CHECK_INS_KEY,\n      JSON.stringify([...existingCheckIns, newCheckIn])\n    );\n    \n    console.log('Check-in saved offline:', newCheckIn);\n  } catch (error) {\n    console.error('Error saving check-in offline:', error);\n    throw error;\n  }\n};\n\n/**\n * Get all offline check-ins\n * @returns {Promise<Array>} - Array of offline check-ins\n */\nexport const getOfflineCheckIns = async () => {\n  try {\n    const checkInsJson = await AsyncStorage.getItem(OFFLINE_CHECK_INS_KEY);\n    return checkInsJson ? JSON.parse(checkInsJson) : [];\n  } catch (error) {\n    console.error('Error getting offline check-ins:', error);\n    return [];\n  }\n};\n\n/**\n * Remove a specific check-in from offline storage\n * @param {string} ticketId - ID of the ticket to remove\n * @returns {Promise<void>}\n */\nexport const removeOfflineCheckIn = async (ticketId) => {\n  try {\n    // Get existing check-ins\n    const checkIns = await getOfflineCheckIns();\n    \n    // Filter out the specific check-in\n    const updatedCheckIns = checkIns.filter(\n      checkIn => checkIn.ticketId !== ticketId\n    );\n    \n    // Save updated array\n    await AsyncStorage.setItem(\n      OFFLINE_CHECK_INS_KEY,\n      JSON.stringify(updatedCheckIns)\n    );\n  } catch (error) {\n    console.error('Error removing offline check-in:', error);\n    throw error;\n  }\n};\n\n/**\n * Clear all offline check-ins\n * @returns {Promise<void>}\n */\nexport const clearOfflineCheckIns = async () => {\n  try {\n    await AsyncStorage.removeItem(OFFLINE_CHECK_INS_KEY);\n  } catch (error) {\n    console.error('Error clearing offline check-ins:', error);\n    throw error;\n  }\n};\n\n/**\n * Cache a validated ticket for offline use\n * @param {Object} ticket - The ticket to cache\n * @returns {Promise<void>}\n */\nexport const cacheTicketOffline = async (ticket) => {\n  try {\n    // Get existing cached tickets\n    const existingTickets = await getCachedTickets();\n    \n    // Check if ticket already exists in cache\n    const ticketExists = existingTickets.some(t => t.id === ticket.id);\n    \n    if (!ticketExists) {\n      // Add new ticket with cache timestamp\n      const cachedTicket = {\n        ...ticket,\n        cached_at: new Date().toISOString(),\n        used: false,\n      };\n      \n      // Save updated array\n      await AsyncStorage.setItem(\n        CACHED_TICKETS_KEY,\n        JSON.stringify([...existingTickets, cachedTicket])\n      );\n      \n      console.log('Ticket cached offline:', cachedTicket);\n    }\n  } catch (error) {\n    console.error('Error caching ticket offline:', error);\n    throw error;\n  }\n};\n\n/**\n * Get all cached tickets\n * @returns {Promise<Array>} - Array of cached tickets\n */\nexport const getCachedTickets = async () => {\n  try {\n    const ticketsJson = await AsyncStorage.getItem(CACHED_TICKETS_KEY);\n    return ticketsJson ? JSON.parse(ticketsJson) : [];\n  } catch (error) {\n    console.error('Error getting cached tickets:', error);\n    return [];\n  }\n};\n\n/**\n * Get a cached ticket by ID\n * @param {string} ticketId - ID of the ticket to get\n * @returns {Promise<Object|null>} - The cached ticket or null if not found\n */\nexport const getCachedTicketById = async (ticketId) => {\n  try {\n    const tickets = await getCachedTickets();\n    return tickets.find(ticket => ticket.id === ticketId) || null;\n  } catch (error) {\n    console.error('Error getting cached ticket by ID:', error);\n    return null;\n  }\n};\n\n/**\n * Clear all cached tickets\n * @returns {Promise<void>}\n */\nexport const clearCachedTickets = async () => {\n  try {\n    await AsyncStorage.removeItem(CACHED_TICKETS_KEY);\n  } catch (error) {\n    console.error('Error clearing cached tickets:', error);\n    throw error;\n  }\n};\n\n/**\n * Mark a cached ticket as used\n * @param {string} ticketId - ID of the ticket to mark as used\n * @returns {Promise<boolean>} - Whether the operation was successful\n */\nexport const markCachedTicketAsUsed = async (ticketId) => {\n  try {\n    // Get existing cached tickets\n    const tickets = await getCachedTickets();\n    \n    // Find the ticket and update it\n    const updatedTickets = tickets.map(ticket => {\n      if (ticket.id === ticketId) {\n        return { ...ticket, used: true, used_at: new Date().toISOString() };\n      }\n      return ticket;\n    });\n    \n    // Check if any ticket was updated\n    const ticketWasUpdated = tickets.some(ticket => ticket.id === ticketId);\n    \n    if (ticketWasUpdated) {\n      // Save updated array\n      await AsyncStorage.setItem(\n        CACHED_TICKETS_KEY,\n        JSON.stringify(updatedTickets)\n      );\n      \n      console.log('Ticket marked as used:', ticketId);\n      return true;\n    }\n    \n    return false;\n  } catch (error) {\n    console.error('Error marking cached ticket as used:', error);\n    return false;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}