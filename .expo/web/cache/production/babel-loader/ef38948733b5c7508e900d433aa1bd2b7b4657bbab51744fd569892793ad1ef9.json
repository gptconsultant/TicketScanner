{"ast":null,"code":"import React from'react';import{createStackNavigator}from'@react-navigation/stack';import VolunteerScannerScreen from\"../screens/volunteer/VolunteerScannerScreen\";import VolunteerCheckoutScreen from\"../screens/volunteer/VolunteerCheckoutScreen\";import EventSelectionScreen from\"../screens/staff/EventSelectionScreen\";import GateSelectionScreen from\"../screens/staff/GateSelectionScreen\";import TicketDetailsScreen from\"../screens/staff/TicketDetailsScreen\";import LogoutScreen from\"../screens/auth/LogoutScreen\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var Stack=createStackNavigator();var VolunteerNavigator=function VolunteerNavigator(){return _jsxs(Stack.Navigator,{screenOptions:{headerStyle:{backgroundColor:'#2c3e50'},headerTintColor:'#fff',headerTitleStyle:{fontWeight:'bold'}},children:[_jsx(Stack.Screen,{name:\"EventSelection\",component:EventSelectionScreen,options:{title:'Select Event'}}),_jsx(Stack.Screen,{name:\"GateSelection\",component:GateSelectionScreen,options:{title:'Select Gate'}}),_jsx(Stack.Screen,{name:\"Scanner\",component:VolunteerScannerScreen,options:{title:'Volunteer Scanner'}}),_jsx(Stack.Screen,{name:\"TicketDetails\",component:TicketDetailsScreen,options:{title:'Ticket Information'}}),_jsx(Stack.Screen,{name:\"Checkout\",component:VolunteerCheckoutScreen,options:{title:'End Shift'}}),_jsx(Stack.Screen,{name:\"Logout\",component:LogoutScreen,options:{title:'Logging Out'}})]});};export default VolunteerNavigator;","map":{"version":3,"names":["React","createStackNavigator","VolunteerScannerScreen","VolunteerCheckoutScreen","EventSelectionScreen","GateSelectionScreen","TicketDetailsScreen","LogoutScreen","jsx","_jsx","jsxs","_jsxs","Stack","VolunteerNavigator","Navigator","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","children","Screen","name","component","options","title"],"sources":["/home/runner/workspace/src/navigation/VolunteerNavigator.js"],"sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport VolunteerScannerScreen from '../screens/volunteer/VolunteerScannerScreen';\nimport VolunteerCheckoutScreen from '../screens/volunteer/VolunteerCheckoutScreen';\nimport EventSelectionScreen from '../screens/staff/EventSelectionScreen';\nimport GateSelectionScreen from '../screens/staff/GateSelectionScreen';\nimport TicketDetailsScreen from '../screens/staff/TicketDetailsScreen';\nimport LogoutScreen from '../screens/auth/LogoutScreen';\n\nconst Stack = createStackNavigator();\n\nconst VolunteerNavigator = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#2c3e50',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n      <Stack.Screen \n        name=\"EventSelection\" \n        component={EventSelectionScreen} \n        options={{ title: 'Select Event' }} \n      />\n      <Stack.Screen \n        name=\"GateSelection\" \n        component={GateSelectionScreen} \n        options={{ title: 'Select Gate' }} \n      />\n      <Stack.Screen \n        name=\"Scanner\" \n        component={VolunteerScannerScreen} \n        options={{ title: 'Volunteer Scanner' }} \n      />\n      <Stack.Screen \n        name=\"TicketDetails\" \n        component={TicketDetailsScreen} \n        options={{ title: 'Ticket Information' }} \n      />\n      <Stack.Screen \n        name=\"Checkout\" \n        component={VolunteerCheckoutScreen} \n        options={{ title: 'End Shift' }} \n      />\n      <Stack.Screen \n        name=\"Logout\" \n        component={LogoutScreen} \n        options={{ title: 'Logging Out' }} \n      />\n    </Stack.Navigator>\n  );\n};\n\nexport default VolunteerNavigator;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,oBAAoB,KAAQ,yBAAyB,CAC9D,MAAO,CAAAC,sBAAsB,mDAC7B,MAAO,CAAAC,uBAAuB,oDAC9B,MAAO,CAAAC,oBAAoB,6CAC3B,MAAO,CAAAC,mBAAmB,4CAC1B,MAAO,CAAAC,mBAAmB,4CAC1B,MAAO,CAAAC,YAAY,oCAAqC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,GAAM,CAAAC,KAAK,CAAGX,oBAAoB,CAAC,CAAC,CAEpC,GAAM,CAAAY,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,CAAS,CAC/B,MACE,CAAAF,KAAA,CAACC,KAAK,CAACE,SAAS,EACdC,aAAa,CAAE,CACbC,WAAW,CAAE,CACXC,eAAe,CAAE,SACnB,CAAC,CACDC,eAAe,CAAE,MAAM,CACvBC,gBAAgB,CAAE,CAChBC,UAAU,CAAE,MACd,CACF,CAAE,CAAAC,QAAA,EAEFZ,IAAA,CAACG,KAAK,CAACU,MAAM,EACXC,IAAI,CAAC,gBAAgB,CACrBC,SAAS,CAAEpB,oBAAqB,CAChCqB,OAAO,CAAE,CAAEC,KAAK,CAAE,cAAe,CAAE,CACpC,CAAC,CACFjB,IAAA,CAACG,KAAK,CAACU,MAAM,EACXC,IAAI,CAAC,eAAe,CACpBC,SAAS,CAAEnB,mBAAoB,CAC/BoB,OAAO,CAAE,CAAEC,KAAK,CAAE,aAAc,CAAE,CACnC,CAAC,CACFjB,IAAA,CAACG,KAAK,CAACU,MAAM,EACXC,IAAI,CAAC,SAAS,CACdC,SAAS,CAAEtB,sBAAuB,CAClCuB,OAAO,CAAE,CAAEC,KAAK,CAAE,mBAAoB,CAAE,CACzC,CAAC,CACFjB,IAAA,CAACG,KAAK,CAACU,MAAM,EACXC,IAAI,CAAC,eAAe,CACpBC,SAAS,CAAElB,mBAAoB,CAC/BmB,OAAO,CAAE,CAAEC,KAAK,CAAE,oBAAqB,CAAE,CAC1C,CAAC,CACFjB,IAAA,CAACG,KAAK,CAACU,MAAM,EACXC,IAAI,CAAC,UAAU,CACfC,SAAS,CAAErB,uBAAwB,CACnCsB,OAAO,CAAE,CAAEC,KAAK,CAAE,WAAY,CAAE,CACjC,CAAC,CACFjB,IAAA,CAACG,KAAK,CAACU,MAAM,EACXC,IAAI,CAAC,QAAQ,CACbC,SAAS,CAAEjB,YAAa,CACxBkB,OAAO,CAAE,CAAEC,KAAK,CAAE,aAAc,CAAE,CACnC,CAAC,EACa,CAAC,CAEtB,CAAC,CAED,cAAe,CAAAb,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}