{"ast":null,"code":"import{useContext}from'react';import{EventContext}from\"../contexts/EventContext\";export var useEvent=function useEvent(){var context=useContext(EventContext);if(!context){throw new Error('useEvent must be used within an EventProvider');}return context;};","map":{"version":3,"names":["useContext","EventContext","useEvent","context","Error"],"sources":["/home/runner/workspace/src/hooks/useEvent.js"],"sourcesContent":["import { useContext } from 'react';\nimport { EventContext } from '../contexts/EventContext';\n\n/**\n * Hook to access the event context\n * @returns {Object} Event context methods and state\n */\nexport const useEvent = () => {\n  const context = useContext(EventContext);\n  \n  if (!context) {\n    throw new Error('useEvent must be used within an EventProvider');\n  }\n  \n  return context;\n};"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,YAAY,gCAMrB,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CAC5B,GAAM,CAAAC,OAAO,CAAGH,UAAU,CAACC,YAAY,CAAC,CAExC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,+CAA+C,CAAC,CAClE,CAEA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}