{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import{Snackbar}from'react-native-paper';import{Feather}from'@expo/vector-icons';import NetInfo from'@react-native-community/netinfo';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var NetworkStatus=function NetworkStatus(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isConnected=_useState2[0],setIsConnected=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showSnackbar=_useState4[0],setShowSnackbar=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),snackbarMessage=_useState6[0],setSnackbarMessage=_useState6[1];useEffect(function(){var unsubscribe=NetInfo.addEventListener(function(state){var newConnectionStatus=state.isConnected;if(newConnectionStatus!==isConnected){if(newConnectionStatus){setSnackbarMessage('Back online');}else{setSnackbarMessage('No internet connection. Working offline.');}setShowSnackbar(true);}setIsConnected(newConnectionStatus);});NetInfo.fetch().then(function(state){setIsConnected(state.isConnected);});return function(){unsubscribe();};},[isConnected]);if(isConnected&&!showSnackbar){return null;}return _jsx(Snackbar,{visible:showSnackbar,onDismiss:function onDismiss(){return setShowSnackbar(false);},duration:isConnected?3000:5000,style:[styles.snackbar,isConnected?styles.onlineSnackbar:styles.offlineSnackbar],children:_jsxs(View,{style:styles.snackbarContent,children:[_jsx(Feather,{name:isConnected?\"wifi\":\"wifi-off\",size:16,color:\"white\",style:styles.icon}),_jsx(Text,{style:styles.snackbarText,children:snackbarMessage})]})});};var styles=StyleSheet.create({snackbar:{position:'absolute',top:0,left:0,right:0,elevation:0},onlineSnackbar:{backgroundColor:'#2ecc71'},offlineSnackbar:{backgroundColor:'#e74c3c'},snackbarContent:{flexDirection:'row',alignItems:'center'},icon:{marginRight:8},snackbarText:{color:'white'}});export default NetworkStatus;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Text","Snackbar","Feather","NetInfo","jsx","_jsx","jsxs","_jsxs","NetworkStatus","_useState","_useState2","_slicedToArray","isConnected","setIsConnected","_useState3","_useState4","showSnackbar","setShowSnackbar","_useState5","_useState6","snackbarMessage","setSnackbarMessage","unsubscribe","addEventListener","state","newConnectionStatus","fetch","then","visible","onDismiss","duration","style","styles","snackbar","onlineSnackbar","offlineSnackbar","children","snackbarContent","name","size","color","icon","snackbarText","create","position","top","left","right","elevation","backgroundColor","flexDirection","alignItems","marginRight"],"sources":["/home/runner/workspace/src/components/NetworkStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Snackbar } from 'react-native-paper';\nimport { Feather } from '@expo/vector-icons';\nimport NetInfo from '@react-native-community/netinfo';\n\nconst NetworkStatus = () => {\n  const [isConnected, setIsConnected] = useState(true);\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  useEffect(() => {\n    // Subscribe to network status updates\n    const unsubscribe = NetInfo.addEventListener(state => {\n      const newConnectionStatus = state.isConnected;\n      \n      // If connection status changed, show appropriate message\n      if (newConnectionStatus !== isConnected) {\n        if (newConnectionStatus) {\n          setSnackbarMessage('Back online');\n        } else {\n          setSnackbarMessage('No internet connection. Working offline.');\n        }\n        setShowSnackbar(true);\n      }\n      \n      setIsConnected(newConnectionStatus);\n    });\n\n    // Check initial status\n    NetInfo.fetch().then(state => {\n      setIsConnected(state.isConnected);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [isConnected]);\n\n  // Don't show anything if connected\n  if (isConnected && !showSnackbar) {\n    return null;\n  }\n\n  return (\n    <Snackbar\n      visible={showSnackbar}\n      onDismiss={() => setShowSnackbar(false)}\n      duration={isConnected ? 3000 : 5000}\n      style={[\n        styles.snackbar,\n        isConnected ? styles.onlineSnackbar : styles.offlineSnackbar\n      ]}\n    >\n      <View style={styles.snackbarContent}>\n        <Feather \n          name={isConnected ? \"wifi\" : \"wifi-off\"} \n          size={16} \n          color=\"white\" \n          style={styles.icon}\n        />\n        <Text style={styles.snackbarText}>{snackbarMessage}</Text>\n      </View>\n    </Snackbar>\n  );\n};\n\nconst styles = StyleSheet.create({\n  snackbar: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    elevation: 0,\n  },\n  onlineSnackbar: {\n    backgroundColor: '#2ecc71',\n  },\n  offlineSnackbar: {\n    backgroundColor: '#e74c3c',\n  },\n  snackbarContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: 8,\n  },\n  snackbarText: {\n    color: 'white',\n  },\n});\n\nexport default NetworkStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}