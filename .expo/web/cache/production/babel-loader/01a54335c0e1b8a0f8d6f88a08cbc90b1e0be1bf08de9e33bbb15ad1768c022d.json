{"ast":null,"code":"\"use strict\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"enabled\"],_excluded2=[\"enabled\",\"active\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import{jsx as _jsx}from\"react/jsx-runtime\";var Screens;try{Screens=require('react-native-screens');}catch(e){}export var MaybeScreenContainer=function MaybeScreenContainer(_ref){var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,_excluded);if(Screens!=null){return _jsx(Screens.ScreenContainer,_objectSpread({enabled:enabled},rest));}return _jsx(View,_objectSpread({},rest));};export var MaybeScreen=function MaybeScreen(_ref2){var enabled=_ref2.enabled,active=_ref2.active,rest=_objectWithoutProperties(_ref2,_excluded2);if(Screens!=null){return _jsx(Screens.Screen,_objectSpread({enabled:enabled,activityState:active},rest));}return _jsx(View,_objectSpread({},rest));};","map":{"version":3,"names":["React","View","jsx","_jsx","Screens","require","e","MaybeScreenContainer","_ref","enabled","rest","_objectWithoutProperties","_excluded","ScreenContainer","_objectSpread","MaybeScreen","_ref2","active","_excluded2","Screen","activityState"],"sources":["/home/runner/workspace/node_modules/@react-navigation/stack/src/views/Screens.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, type ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens != null) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | Animated.AnimatedInterpolation<0 | 1>;\n  children: React.ReactNode;\n  freezeOnBlur?: boolean;\n  shouldFreeze: boolean;\n  homeIndicatorHidden?: boolean;\n}) => {\n  if (Screens != null) {\n    return (\n      <Screens.Screen enabled={enabled} activityState={active} {...rest} />\n    );\n  }\n\n  return <View {...rest} />;\n};\n"],"mappings":"20BAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,IAAA,0CACgC,OAAAC,GAAA,IAAAC,IAAA,yBAE9D,GAAI,CAAAC,OAA0D,CAE9D,GAAI,CACFA,OAAO,CAAGC,OAAO,CAAC,sBAAsB,CAAC,CAC3C,CAAE,MAAOC,CAAC,CAAE,CACV,CAGF,MAAO,IAAM,CAAAC,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAAC,IAAA,CAM3B,IALJ,CAAAC,OAAO,CAAAD,IAAA,CAAPC,OAAO,CACJC,IAAA,CAAAC,wBAAA,CAAAH,IAAA,CAAAI,SAAA,EAKH,GAAIR,OAAO,EAAI,IAAI,CAAE,CACnB,MAAO,CAAAD,IAAA,CAACC,OAAO,CAACS,eAAe,CAAAC,aAAA,EAACL,OAAO,CAAEA,OAAQ,EAAKC,IAAA,CAAO,CAAC,CAChE,CAEA,MAAO,CAAAP,IAAA,CAACF,IAAI,CAAAa,aAAA,IAAKJ,IAAA,CAAO,CAAC,CAC3B,CAAC,CAED,MAAO,IAAM,CAAAK,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAAC,KAAA,CAWlB,IAVJ,CAAAP,OAAO,CAAAO,KAAA,CAAPP,OAAO,CACPQ,MAAM,CAAAD,KAAA,CAANC,MAAM,CACHP,IAAA,CAAAC,wBAAA,CAAAK,KAAA,CAAAE,UAAA,EASH,GAAId,OAAO,EAAI,IAAI,CAAE,CACnB,MACE,CAAAD,IAAA,CAACC,OAAO,CAACe,MAAM,CAAAL,aAAA,EAACL,OAAO,CAAEA,OAAQ,CAACW,aAAa,CAAEH,MAAO,EAAKP,IAAA,CAAO,CAAC,CAEzE,CAEA,MAAO,CAAAP,IAAA,CAACF,IAAI,CAAAa,aAAA,IAAKJ,IAAA,CAAO,CAAC,CAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}