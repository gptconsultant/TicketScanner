{"ast":null,"code":"\"use strict\";export var getModalRouteKeys=function getModalRouteKeys(routes,descriptors){return routes.reduce(function(acc,route){var _descriptors$route$ke,_descriptors$route$ke2;var _ref=(_descriptors$route$ke=(_descriptors$route$ke2=descriptors[route.key])==null?void 0:_descriptors$route$ke2.options)!=null?_descriptors$route$ke:{},presentation=_ref.presentation;if(acc.length&&!presentation||presentation==='modal'||presentation==='transparentModal'){acc.push(route.key);}return acc;},[]);};","map":{"version":3,"names":["getModalRouteKeys","routes","descriptors","reduce","acc","route","_descriptors$route$ke","_descriptors$route$ke2","_ref","key","options","presentation","length","push"],"sources":["/home/runner/workspace/node_modules/@react-navigation/stack/src/utils/getModalRoutesKeys.ts"],"sourcesContent":["import type { Route } from '@react-navigation/native';\n\nimport type { StackDescriptorMap } from '../types';\n\nexport const getModalRouteKeys = (\n  routes: Route<string>[],\n  descriptors: StackDescriptorMap\n) =>\n  routes.reduce<string[]>((acc, route) => {\n    const { presentation } = descriptors[route.key]?.options ?? {};\n\n    if (\n      (acc.length && !presentation) ||\n      presentation === 'modal' ||\n      presentation === 'transparentModal'\n    ) {\n      acc.push(route.key);\n    }\n\n    return acc;\n  }, []);\n"],"mappings":"aAIA,MAAO,IAAM,CAAAA,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAC5BC,MAAuB,CACvBC,WAA+B,QAE/B,CAAAD,MAAM,CAACE,MAAM,CAAW,SAACC,GAAG,CAAEC,KAAK,CAAK,KAAAC,qBAAA,CAAAC,sBAAA,CACtC,IAAAC,IAAA,EAAAF,qBAAA,EAAAC,sBAAA,CAAyBL,WAAW,CAACG,KAAK,CAACI,GAAG,CAAC,eAAtBF,sBAAA,CAAwBG,OAAO,QAAAJ,qBAAA,CAAI,CAAC,CAAC,CAAtDK,YAAA,CAAAH,IAAA,CAAAG,YAAA,CAER,GACGP,GAAG,CAACQ,MAAM,EAAI,CAACD,YAAY,EAC5BA,YAAY,GAAK,OAAO,EACxBA,YAAY,GAAK,kBAAkB,CACnC,CACAP,GAAG,CAACS,IAAI,CAACR,KAAK,CAACI,GAAG,CAAC,CACrB,CAEA,MAAO,CAAAL,GAAG,CACZ,CAAC,CAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}