{"ast":null,"code":"import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useNetwork}from\"../contexts/NetworkContext\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var OfflineAlert=function OfflineAlert(){var _useNetwork=useNetwork(),isConnected=_useNetwork.isConnected,apiIsReachable=_useNetwork.apiIsReachable,lastOnlineTime=_useNetwork.lastOnlineTime;if(isConnected&&apiIsReachable){return null;}var formatLastOnline=function formatLastOnline(){if(!lastOnlineTime)return'Never';var now=new Date();var diff=now-lastOnlineTime;if(diff<60000){return'Just now';}else if(diff<3600000){var minutes=Math.floor(diff/60000);return`${minutes} ${minutes===1?'minute':'minutes'} ago`;}else if(diff<86400000){var hours=Math.floor(diff/3600000);return`${hours} ${hours===1?'hour':'hours'} ago`;}else{var days=Math.floor(diff/86400000);return`${days} ${days===1?'day':'days'} ago`;}};return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.text,children:!isConnected?'No internet connection. Working offline.':'Server connection lost. Using offline mode.'}),lastOnlineTime&&_jsxs(Text,{style:styles.lastOnlineText,children:[\"Last online: \",formatLastOnline()]})]});};var styles=StyleSheet.create({container:{backgroundColor:'#f8d7da',paddingVertical:8,paddingHorizontal:12,borderBottomWidth:1,borderBottomColor:'#f5c6cb'},text:{color:'#721c24',fontSize:14,fontWeight:'500',textAlign:'center'},lastOnlineText:{color:'#721c24',fontSize:12,textAlign:'center',marginTop:2}});export default OfflineAlert;","map":{"version":3,"names":["React","View","Text","StyleSheet","useNetwork","jsx","_jsx","jsxs","_jsxs","OfflineAlert","_useNetwork","isConnected","apiIsReachable","lastOnlineTime","formatLastOnline","now","Date","diff","minutes","Math","floor","hours","days","style","styles","container","children","text","lastOnlineText","create","backgroundColor","paddingVertical","paddingHorizontal","borderBottomWidth","borderBottomColor","color","fontSize","fontWeight","textAlign","marginTop"],"sources":["/home/runner/workspace/src/components/OfflineAlert.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { useNetwork } from '../contexts/NetworkContext';\n\nconst OfflineAlert = () => {\n  const { isConnected, apiIsReachable, lastOnlineTime } = useNetwork();\n  \n  // If connected and API is reachable, don't show the alert\n  if (isConnected && apiIsReachable) {\n    return null;\n  }\n  \n  // Format last online time\n  const formatLastOnline = () => {\n    if (!lastOnlineTime) return 'Never';\n    \n    const now = new Date();\n    const diff = now - lastOnlineTime;\n    \n    if (diff < 60000) {\n      // Less than a minute\n      return 'Just now';\n    } else if (diff < 3600000) {\n      // Less than an hour\n      const minutes = Math.floor(diff / 60000);\n      return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`;\n    } else if (diff < 86400000) {\n      // Less than a day\n      const hours = Math.floor(diff / 3600000);\n      return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`;\n    } else {\n      // More than a day\n      const days = Math.floor(diff / 86400000);\n      return `${days} ${days === 1 ? 'day' : 'days'} ago`;\n    }\n  };\n  \n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>\n        {!isConnected\n          ? 'No internet connection. Working offline.'\n          : 'Server connection lost. Using offline mode.'}\n      </Text>\n      {lastOnlineTime && (\n        <Text style={styles.lastOnlineText}>\n          Last online: {formatLastOnline()}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f8d7da',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f5c6cb',\n  },\n  text: {\n    color: '#721c24',\n    fontSize: 14,\n    fontWeight: '500',\n    textAlign: 'center',\n  },\n  lastOnlineText: {\n    color: '#721c24',\n    fontSize: 12,\n    textAlign: 'center',\n    marginTop: 2,\n  },\n});\n\nexport default OfflineAlert;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,IAAA,iDAAAC,IAAA,iDAAAC,UAAA,gDAE1B,OAASC,UAAU,kCAAqC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,IAAAC,WAAA,CAAwDN,UAAU,CAAC,CAAC,CAA5DO,WAAW,CAAAD,WAAA,CAAXC,WAAW,CAAEC,cAAc,CAAAF,WAAA,CAAdE,cAAc,CAAEC,cAAc,CAAAH,WAAA,CAAdG,cAAc,CAGnD,GAAIF,WAAW,EAAIC,cAAc,CAAE,CACjC,MAAO,KAAI,CACb,CAGA,GAAM,CAAAE,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CAC7B,GAAI,CAACD,cAAc,CAAE,MAAO,OAAO,CAEnC,GAAM,CAAAE,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,GAAM,CAAAC,IAAI,CAAGF,GAAG,CAAGF,cAAc,CAEjC,GAAII,IAAI,CAAG,KAAK,CAAE,CAEhB,MAAO,UAAU,CACnB,CAAC,IAAM,IAAIA,IAAI,CAAG,OAAO,CAAE,CAEzB,GAAM,CAAAC,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAG,KAAK,CAAC,CACxC,MAAO,GAAGC,OAAO,IAAIA,OAAO,GAAK,CAAC,CAAG,QAAQ,CAAG,SAAS,MAAM,CACjE,CAAC,IAAM,IAAID,IAAI,CAAG,QAAQ,CAAE,CAE1B,GAAM,CAAAI,KAAK,CAAGF,IAAI,CAACC,KAAK,CAACH,IAAI,CAAG,OAAO,CAAC,CACxC,MAAO,GAAGI,KAAK,IAAIA,KAAK,GAAK,CAAC,CAAG,MAAM,CAAG,OAAO,MAAM,CACzD,CAAC,IAAM,CAEL,GAAM,CAAAC,IAAI,CAAGH,IAAI,CAACC,KAAK,CAACH,IAAI,CAAG,QAAQ,CAAC,CACxC,MAAO,GAAGK,IAAI,IAAIA,IAAI,GAAK,CAAC,CAAG,KAAK,CAAG,MAAM,MAAM,CACrD,CACF,CAAC,CAED,MACE,CAAAd,KAAA,CAACP,IAAI,EAACsB,KAAK,CAAEC,MAAM,CAACC,SAAU,CAAAC,QAAA,EAC5BpB,IAAA,CAACJ,IAAI,EAACqB,KAAK,CAAEC,MAAM,CAACG,IAAK,CAAAD,QAAA,CACtB,CAACf,WAAW,CACT,0CAA0C,CAC1C,6CAA6C,CAC7C,CAAC,CACNE,cAAc,EACbL,KAAA,CAACN,IAAI,EAACqB,KAAK,CAAEC,MAAM,CAACI,cAAe,CAAAF,QAAA,EAAC,eACrB,CAACZ,gBAAgB,CAAC,CAAC,EAC5B,CACP,EACG,CAAC,CAEX,CAAC,CAED,GAAM,CAAAU,MAAM,CAAGrB,UAAU,CAAC0B,MAAM,CAAC,CAC/BJ,SAAS,CAAE,CACTK,eAAe,CAAE,SAAS,CAC1BC,eAAe,CAAE,CAAC,CAClBC,iBAAiB,CAAE,EAAE,CACrBC,iBAAiB,CAAE,CAAC,CACpBC,iBAAiB,CAAE,SACrB,CAAC,CACDP,IAAI,CAAE,CACJQ,KAAK,CAAE,SAAS,CAChBC,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,KAAK,CACjBC,SAAS,CAAE,QACb,CAAC,CACDV,cAAc,CAAE,CACdO,KAAK,CAAE,SAAS,CAChBC,QAAQ,CAAE,EAAE,CACZE,SAAS,CAAE,QAAQ,CACnBC,SAAS,CAAE,CACb,CACF,CAAC,CAAC,CAEF,cAAe,CAAA9B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}