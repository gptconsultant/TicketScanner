{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{isAPIReachable}from\"../utils/networkUtils\";var API_BASE_URL='https://api.example.com';export var fetchFromAPI=function(){var _ref=_asyncToGenerator(function*(endpoint){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var authToken=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{var isReachable=yield isAPIReachable();if(!isReachable){throw new Error('API is not reachable. Please check your internet connection.');}var headers=_objectSpread({},options.headers||{});if(authToken){headers['Authorization']=`Bearer ${authToken}`;}var response=yield fetch(`${API_BASE_URL}${endpoint}`,_objectSpread(_objectSpread({},options),{},{headers:headers}));var data=yield response.json();if(!response.ok){throw new Error(data.message||`API error: ${response.status}`);}return data;}catch(error){console.error(`API Error (${endpoint}):`,error);throw error;}});return function fetchFromAPI(_x){return _ref.apply(this,arguments);};}();export var checkApiConnection=function(){var _ref2=_asyncToGenerator(function*(){try{var controller=new AbortController();var timeoutId=setTimeout(function(){return controller.abort();},5000);var response=yield fetch(`${API_BASE_URL}/health`,{method:'GET',signal:controller.signal});clearTimeout(timeoutId);return response.ok;}catch(error){console.log('API connection check failed:',error.message);return false;}});return function checkApiConnection(){return _ref2.apply(this,arguments);};}();","map":{"version":3,"names":["isAPIReachable","API_BASE_URL","fetchFromAPI","_ref","_asyncToGenerator","endpoint","options","arguments","length","undefined","authToken","isReachable","Error","headers","_objectSpread","response","fetch","data","json","ok","message","status","error","console","_x","apply","checkApiConnection","_ref2","controller","AbortController","timeoutId","setTimeout","abort","method","signal","clearTimeout","log"],"sources":["/home/runner/workspace/src/services/api.js"],"sourcesContent":["import { isAPIReachable } from '../utils/networkUtils';\n\n// Base API URL - would point to your backend in production\nconst API_BASE_URL = 'https://api.example.com';\n\n/**\n * Generic fetch wrapper with authentication and error handling\n * @param {string} endpoint - API endpoint\n * @param {Object} options - Fetch options\n * @param {string} authToken - Authentication token\n * @returns {Promise<Object>} - Response data\n */\nexport const fetchFromAPI = async (endpoint, options = {}, authToken = null) => {\n  try {\n    // Check if API is reachable\n    const isReachable = await isAPIReachable();\n    if (!isReachable) {\n      throw new Error('API is not reachable. Please check your internet connection.');\n    }\n\n    // Prepare headers\n    const headers = {\n      ...(options.headers || {}),\n    };\n\n    // Add auth token if provided\n    if (authToken) {\n      headers['Authorization'] = `Bearer ${authToken}`;\n    }\n\n    // Make the request\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      ...options,\n      headers,\n    });\n\n    // Parse response\n    const data = await response.json();\n\n    // Check for error\n    if (!response.ok) {\n      throw new Error(data.message || `API error: ${response.status}`);\n    }\n\n    return data;\n  } catch (error) {\n    console.error(`API Error (${endpoint}):`, error);\n    throw error;\n  }\n};\n\n/**\n * Check if the API server is reachable\n * @returns {Promise<boolean>} - Whether the API is reachable\n */\nexport const checkApiConnection = async () => {\n  try {\n    // Use a timeout to avoid hanging\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 5000);\n\n    const response = await fetch(`${API_BASE_URL}/health`, {\n      method: 'GET',\n      signal: controller.signal,\n    });\n\n    clearTimeout(timeoutId);\n    return response.ok;\n  } catch (error) {\n    console.log('API connection check failed:', error.message);\n    return false;\n  }\n};"],"mappings":"svBAAA,OAASA,cAAc,6BAGvB,GAAM,CAAAC,YAAY,CAAG,yBAAyB,CAS9C,MAAO,IAAM,CAAAC,YAAY,gBAAAC,IAAA,CAAAC,iBAAA,CAAG,UAAOC,QAAQ,CAAqC,IAAnC,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,IAAE,CAAAG,SAAS,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACzE,GAAI,CAEF,GAAM,CAAAI,WAAW,MAAS,CAAAX,cAAc,CAAC,CAAC,CAC1C,GAAI,CAACW,WAAW,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,8DAA8D,CAAC,CACjF,CAGA,GAAM,CAAAC,OAAO,CAAAC,aAAA,IACPR,OAAO,CAACO,OAAO,EAAI,CAAC,CAAC,CAC1B,CAGD,GAAIH,SAAS,CAAE,CACbG,OAAO,CAAC,eAAe,CAAC,CAAG,UAAUH,SAAS,EAAE,CAClD,CAGA,GAAM,CAAAK,QAAQ,MAAS,CAAAC,KAAK,CAAC,GAAGf,YAAY,GAAGI,QAAQ,EAAE,CAAAS,aAAA,CAAAA,aAAA,IACpDR,OAAO,MACVO,OAAO,CAAPA,OAAO,EACR,CAAC,CAGF,GAAM,CAAAI,IAAI,MAAS,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAGlC,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAP,KAAK,CAACK,IAAI,CAACG,OAAO,EAAI,cAAcL,QAAQ,CAACM,MAAM,EAAE,CAAC,CAClE,CAEA,MAAO,CAAAJ,IAAI,CACb,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAcjB,QAAQ,IAAI,CAAEiB,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,iBArCY,CAAApB,YAAYA,CAAAsB,EAAA,SAAArB,IAAA,CAAAsB,KAAA,MAAAlB,SAAA,OAqCxB,CAMD,MAAO,IAAM,CAAAmB,kBAAkB,gBAAAC,KAAA,CAAAvB,iBAAA,CAAG,WAAY,CAC5C,GAAI,CAEF,GAAM,CAAAwB,UAAU,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACxC,GAAM,CAAAC,SAAS,CAAGC,UAAU,CAAC,iBAAM,CAAAH,UAAU,CAACI,KAAK,CAAC,CAAC,GAAE,IAAI,CAAC,CAE5D,GAAM,CAAAjB,QAAQ,MAAS,CAAAC,KAAK,CAAC,GAAGf,YAAY,SAAS,CAAE,CACrDgC,MAAM,CAAE,KAAK,CACbC,MAAM,CAAEN,UAAU,CAACM,MACrB,CAAC,CAAC,CAEFC,YAAY,CAACL,SAAS,CAAC,CACvB,MAAO,CAAAf,QAAQ,CAACI,EAAE,CACpB,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACa,GAAG,CAAC,8BAA8B,CAAEd,KAAK,CAACF,OAAO,CAAC,CAC1D,MAAO,MAAK,CACd,CACF,CAAC,iBAjBY,CAAAM,kBAAkBA,CAAA,SAAAC,KAAA,CAAAF,KAAA,MAAAlB,SAAA,OAiB9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}