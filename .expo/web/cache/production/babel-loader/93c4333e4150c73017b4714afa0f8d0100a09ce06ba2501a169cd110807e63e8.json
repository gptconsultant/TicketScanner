{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{createContext,useState,useEffect}from'react';import AsyncStorage from'@react-native-async-storage/async-storage';import*as authService from\"../services/authService\";import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=createContext();export var AuthProvider=function AuthProvider(_ref){var children=_ref.children;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),userToken=_useState4[0],setUserToken=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),userInfo=_useState6[0],setUserInfo=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),userRole=_useState8[0],setUserRole=_useState8[1];useEffect(function(){var bootstrapAsync=function(){var _ref2=_asyncToGenerator(function*(){try{var token=yield AsyncStorage.getItem('userToken');var userInfoStr=yield AsyncStorage.getItem('userInfo');var role=yield AsyncStorage.getItem('userRole');if(token&&userInfoStr&&role){setUserToken(token);setUserInfo(JSON.parse(userInfoStr));setUserRole(role);}}catch(e){console.error('Failed to load auth data from storage:',e);}finally{setIsLoading(false);}});return function bootstrapAsync(){return _ref2.apply(this,arguments);};}();bootstrapAsync();},[]);var login=function(){var _ref3=_asyncToGenerator(function*(userData){try{setIsLoading(true);var username=userData.username,role=userData.role;var mockToken=`mock-token-${role}-${Date.now()}`;var mockUserInfo={id:role==='admin'?1:role==='staff'?2:3,username:username,name:`${role.charAt(0).toUpperCase()+role.slice(1)} User`,email:`${username}@example.com`};yield AsyncStorage.setItem('userToken',mockToken);yield AsyncStorage.setItem('userInfo',JSON.stringify(mockUserInfo));yield AsyncStorage.setItem('userRole',role);setUserToken(mockToken);setUserInfo(mockUserInfo);setUserRole(role);return{success:true};}catch(error){throw new Error(error.message||'Login failed');}finally{setIsLoading(false);}});return function login(_x){return _ref3.apply(this,arguments);};}();var logout=function(){var _ref4=_asyncToGenerator(function*(){try{setIsLoading(true);yield AsyncStorage.removeItem('userToken');yield AsyncStorage.removeItem('userInfo');yield AsyncStorage.removeItem('userRole');setUserToken(null);setUserInfo(null);setUserRole(null);}catch(error){console.error('Logout error:',error);}finally{setIsLoading(false);}});return function logout(){return _ref4.apply(this,arguments);};}();return _jsx(AuthContext.Provider,{value:{isLoading:isLoading,userToken:userToken,userInfo:userInfo,userRole:userRole,login:login,logout:logout,isAuthenticated:!!userToken},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","AsyncStorage","authService","jsx","_jsx","AuthContext","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","userToken","setUserToken","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","userRole","setUserRole","bootstrapAsync","_ref2","_asyncToGenerator","token","getItem","userInfoStr","role","JSON","parse","e","console","error","apply","arguments","login","_ref3","userData","username","mockToken","Date","now","mockUserInfo","id","name","charAt","toUpperCase","slice","email","setItem","stringify","success","Error","message","_x","logout","_ref4","removeItem","Provider","value","isAuthenticated"],"sources":["/home/runner/workspace/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as authService from '../services/authService';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [userToken, setUserToken] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n\n  // Load token and user info from storage on mount\n  useEffect(() => {\n    const bootstrapAsync = async () => {\n      try {\n        const token = await AsyncStorage.getItem('userToken');\n        const userInfoStr = await AsyncStorage.getItem('userInfo');\n        const role = await AsyncStorage.getItem('userRole');\n        \n        if (token && userInfoStr && role) {\n          setUserToken(token);\n          setUserInfo(JSON.parse(userInfoStr));\n          setUserRole(role);\n        }\n      } catch (e) {\n        console.error('Failed to load auth data from storage:', e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    bootstrapAsync();\n  }, []);\n\n  const login = async (userData) => {\n    try {\n      setIsLoading(true);\n      \n      // In a real app, this would call an API\n      // Here we're just setting mock data for demo\n      const { username, role } = userData;\n      \n      // Simulate API call\n      // const response = await authService.login(username, password);\n      const mockToken = `mock-token-${role}-${Date.now()}`;\n      const mockUserInfo = {\n        id: role === 'admin' ? 1 : role === 'staff' ? 2 : 3,\n        username,\n        name: `${role.charAt(0).toUpperCase() + role.slice(1)} User`,\n        email: `${username}@example.com`\n      };\n      \n      // Store auth data\n      await AsyncStorage.setItem('userToken', mockToken);\n      await AsyncStorage.setItem('userInfo', JSON.stringify(mockUserInfo));\n      await AsyncStorage.setItem('userRole', role);\n      \n      // Update state\n      setUserToken(mockToken);\n      setUserInfo(mockUserInfo);\n      setUserRole(role);\n      \n      return { success: true };\n    } catch (error) {\n      throw new Error(error.message || 'Login failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setIsLoading(true);\n      \n      // In a real app, call logout API\n      // await authService.logout(userToken);\n      \n      // Clear storage\n      await AsyncStorage.removeItem('userToken');\n      await AsyncStorage.removeItem('userInfo');\n      await AsyncStorage.removeItem('userRole');\n      \n      // Reset state\n      setUserToken(null);\n      setUserInfo(null);\n      setUserRole(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoading,\n        userToken,\n        userInfo,\n        userRole,\n        login,\n        logout,\n        isAuthenticated: !!userToken,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}