{"ast":null,"code":"\"use strict\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}import{getDefaultHeaderHeight,SafeAreaProviderCompat}from'@react-navigation/elements';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{forModalPresentationIOS,forNoAnimation as forNoAnimationCard}from\"../../TransitionConfigs/CardStyleInterpolators.js\";import{BottomSheetAndroid,DefaultTransition,FadeFromBottomAndroid,FadeFromRightAndroid,ModalFadeTransition,ModalSlideFromBottomIOS,ModalTransition,RevealFromBottomAndroid,ScaleFromCenterAndroid,SlideFromLeftIOS,SlideFromRightIOS}from\"../../TransitionConfigs/TransitionPresets.js\";import{findLastIndex}from\"../../utils/findLastIndex.js\";import{getDistanceForDirection}from\"../../utils/getDistanceForDirection.js\";import{getModalRouteKeys}from\"../../utils/getModalRoutesKeys.js\";import{MaybeScreen,MaybeScreenContainer}from\"../Screens.js\";import{CardContainer}from\"./CardContainer.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var NAMED_TRANSITIONS_PRESETS={default:DefaultTransition,fade:ModalFadeTransition,fade_from_bottom:FadeFromBottomAndroid,fade_from_right:FadeFromRightAndroid,none:DefaultTransition,reveal_from_bottom:RevealFromBottomAndroid,scale_from_center:ScaleFromCenterAndroid,slide_from_left:SlideFromLeftIOS,slide_from_right:SlideFromRightIOS,slide_from_bottom:Platform.select({ios:ModalSlideFromBottomIOS,default:BottomSheetAndroid})};var EPSILON=1e-5;var STATE_INACTIVE=0;var STATE_TRANSITIONING_OR_BELOW_TOP=1;var STATE_ON_TOP=2;var FALLBACK_DESCRIPTOR=Object.freeze({options:{}});var getInterpolationIndex=function getInterpolationIndex(scenes,index){var cardStyleInterpolator=scenes[index].descriptor.options.cardStyleInterpolator;var interpolationIndex=0;for(var i=index-1;i>=0;i--){var _scenes$i;var cardStyleInterpolatorCurrent=(_scenes$i=scenes[i])==null?void 0:_scenes$i.descriptor.options.cardStyleInterpolator;if(cardStyleInterpolatorCurrent!==cardStyleInterpolator){break;}interpolationIndex++;}return interpolationIndex;};var getIsModalPresentation=function getIsModalPresentation(cardStyleInterpolator){return cardStyleInterpolator===forModalPresentationIOS||cardStyleInterpolator.name==='forModalPresentationIOS';};var getIsModal=function getIsModal(scene,interpolationIndex,isParentModal){if(isParentModal){return true;}var cardStyleInterpolator=scene.descriptor.options.cardStyleInterpolator;var isModalPresentation=getIsModalPresentation(cardStyleInterpolator);var isModal=isModalPresentation&&interpolationIndex!==0;return isModal;};var getHeaderHeights=function getHeaderHeights(scenes,insets,isParentHeaderShown,isParentModal,layout,previous){return scenes.reduce(function(acc,curr,index){var _curr$descriptor$opti=curr.descriptor.options,_curr$descriptor$opti2=_curr$descriptor$opti.headerStatusBarHeight,headerStatusBarHeight=_curr$descriptor$opti2===void 0?isParentHeaderShown?0:insets.top:_curr$descriptor$opti2,headerStyle=_curr$descriptor$opti.headerStyle;var style=StyleSheet.flatten(headerStyle||{});var height='height'in style&&typeof style.height==='number'?style.height:previous[curr.route.key];var interpolationIndex=getInterpolationIndex(scenes,index);var isModal=getIsModal(curr,interpolationIndex,isParentModal);acc[curr.route.key]=typeof height==='number'?height:getDefaultHeaderHeight(layout,isModal,headerStatusBarHeight);return acc;},{});};var getDistanceFromOptions=function getDistanceFromOptions(layout,descriptor,isRTL){var _NAMED_TRANSITIONS_PR;if(descriptor!=null&&descriptor.options.gestureDirection){return getDistanceForDirection(layout,descriptor==null?void 0:descriptor.options.gestureDirection,isRTL);}var defaultGestureDirection=(descriptor==null?void 0:descriptor.options.presentation)==='modal'?ModalTransition.gestureDirection:DefaultTransition.gestureDirection;var gestureDirection=descriptor!=null&&descriptor.options.animation?(_NAMED_TRANSITIONS_PR=NAMED_TRANSITIONS_PRESETS[descriptor==null?void 0:descriptor.options.animation])==null?void 0:_NAMED_TRANSITIONS_PR.gestureDirection:defaultGestureDirection;return getDistanceForDirection(layout,gestureDirection,isRTL);};var getProgressFromGesture=function getProgressFromGesture(gesture,layout,descriptor,isRTL){var distance=getDistanceFromOptions({width:Math.max(1,layout.width),height:Math.max(1,layout.height)},descriptor,isRTL);if(distance>0){return gesture.interpolate({inputRange:[0,distance],outputRange:[1,0]});}return gesture.interpolate({inputRange:[distance,0],outputRange:[0,1]});};export var CardStack=function(_React$Component){function CardStack(_props){var _this;_classCallCheck(this,CardStack);_this=_callSuper(this,CardStack,[_props]);_this.handleLayout=function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;var layout={width:width,height:height};_this.setState(function(state,props){if(height===state.layout.height&&width===state.layout.width){return null;}return{layout:layout,headerHeights:getHeaderHeights(state.scenes,props.insets,props.isParentHeaderShown,props.isParentModal,layout,state.headerHeights)};});};_this.handleHeaderLayout=function(_ref){var route=_ref.route,height=_ref.height;_this.setState(function(_ref2){var headerHeights=_ref2.headerHeights;var previousHeight=headerHeights[route.key];if(previousHeight===height){return null;}return{headerHeights:_objectSpread(_objectSpread({},headerHeights),{},_defineProperty({},route.key,height))};});};_this.getFocusedRoute=function(){var state=_this.props.state;return state.routes[state.index];};_this.getPreviousScene=function(_ref3){var route=_ref3.route;var getPreviousRoute=_this.props.getPreviousRoute;var scenes=_this.state.scenes;var previousRoute=getPreviousRoute({route:route});if(previousRoute){var previousScene=scenes.find(function(scene){return scene.descriptor.route.key===previousRoute.key;});return previousScene;}return undefined;};_this.state={routes:[],scenes:[],gestures:{},layout:SafeAreaProviderCompat.initialMetrics.frame,descriptors:_this.props.descriptors,headerHeights:{}};return _this;}_inherits(CardStack,_React$Component);return _createClass(CardStack,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,insets=_this$props.insets,state=_this$props.state,routes=_this$props.routes,openingRouteKeys=_this$props.openingRouteKeys,closingRouteKeys=_this$props.closingRouteKeys,onOpenRoute=_this$props.onOpenRoute,onCloseRoute=_this$props.onCloseRoute,renderHeader=_this$props.renderHeader,isParentHeaderShown=_this$props.isParentHeaderShown,isParentModal=_this$props.isParentModal,onTransitionStart=_this$props.onTransitionStart,onTransitionEnd=_this$props.onTransitionEnd,onGestureStart=_this$props.onGestureStart,onGestureEnd=_this$props.onGestureEnd,onGestureCancel=_this$props.onGestureCancel,_this$props$detachIna=_this$props.detachInactiveScreens,detachInactiveScreens=_this$props$detachIna===void 0?Platform.OS==='web'||Platform.OS==='android'||Platform.OS==='ios':_this$props$detachIna;var _this$state=this.state,scenes=_this$state.scenes,layout=_this$state.layout,gestures=_this$state.gestures,headerHeights=_this$state.headerHeights;var focusedRoute=state.routes[state.index];var focusedHeaderHeight=headerHeights[focusedRoute.key];var isFloatHeaderAbsolute=this.state.scenes.slice(-2).some(function(scene){var _scene$descriptor$opt;var options=(_scene$descriptor$opt=scene.descriptor.options)!=null?_scene$descriptor$opt:{};var headerMode=options.headerMode,headerTransparent=options.headerTransparent,_options$headerShown=options.headerShown,headerShown=_options$headerShown===void 0?true:_options$headerShown;if(headerTransparent||headerShown===false||headerMode==='screen'){return true;}return false;});var activeScreensLimit=1;for(var i=scenes.length-1;i>=0;i--){var options=scenes[i].descriptor.options;var _options$detachPrevio=options.detachPreviousScreen,detachPreviousScreen=_options$detachPrevio===void 0?options.presentation==='transparentModal'?false:getIsModalPresentation(options.cardStyleInterpolator)?i!==findLastIndex(scenes,function(scene){var cardStyleInterpolator=scene.descriptor.options.cardStyleInterpolator;return cardStyleInterpolator===forModalPresentationIOS||(cardStyleInterpolator==null?void 0:cardStyleInterpolator.name)==='forModalPresentationIOS';}):true:_options$detachPrevio;if(detachPreviousScreen===false){activeScreensLimit++;}else{if(i<=scenes.length-2){break;}}}var floatingHeader=_jsx(React.Fragment,{children:renderHeader({mode:'float',layout:layout,scenes:scenes,getPreviousScene:this.getPreviousScene,getFocusedRoute:this.getFocusedRoute,onContentHeightChange:this.handleHeaderLayout,style:[styles.floating,isFloatHeaderAbsolute&&[{height:focusedHeaderHeight},styles.absolute]]})},\"header\");return _jsxs(View,{style:styles.container,children:[isFloatHeaderAbsolute?null:floatingHeader,_jsx(MaybeScreenContainer,{enabled:detachInactiveScreens,style:styles.container,onLayout:this.handleLayout,children:[].concat(_toConsumableArray(routes),_toConsumableArray(state.preloadedRoutes)).map(function(route,index){var _scenes,_scenes2;var focused=focusedRoute.key===route.key;var gesture=gestures[route.key];var scene=scenes[index];var isPreloaded=state.preloadedRoutes.includes(route)&&!routes.includes(route);if(state.preloadedRoutes.includes(route)&&routes.includes(route)&&index>=routes.length){return null;}var isScreenActive=1;if(index<routes.length-activeScreensLimit-1||isPreloaded){isScreenActive=STATE_INACTIVE;}else{var sceneForActivity=scenes[routes.length-1];var outputValue=index===routes.length-1?STATE_ON_TOP:index>=routes.length-activeScreensLimit?STATE_TRANSITIONING_OR_BELOW_TOP:STATE_INACTIVE;isScreenActive=sceneForActivity?sceneForActivity.progress.current.interpolate({inputRange:[0,1-EPSILON,1],outputRange:[1,1,outputValue],extrapolate:'clamp'}):STATE_TRANSITIONING_OR_BELOW_TOP;}var _scene$descriptor$opt2=scene.descriptor.options,_scene$descriptor$opt3=_scene$descriptor$opt2.headerShown,headerShown=_scene$descriptor$opt3===void 0?true:_scene$descriptor$opt3,headerTransparent=_scene$descriptor$opt2.headerTransparent,freezeOnBlur=_scene$descriptor$opt2.freezeOnBlur,autoHideHomeIndicator=_scene$descriptor$opt2.autoHideHomeIndicator;var safeAreaInsetTop=insets.top;var safeAreaInsetRight=insets.right;var safeAreaInsetBottom=insets.bottom;var safeAreaInsetLeft=insets.left;var headerHeight=headerShown!==false?headerHeights[route.key]:0;var interpolationIndex=getInterpolationIndex(scenes,index);var isModal=getIsModal(scene,interpolationIndex,isParentModal);var isNextScreenTransparent=((_scenes=scenes[index+1])==null?void 0:_scenes.descriptor.options.presentation)==='transparentModal';var detachCurrentScreen=((_scenes2=scenes[index+1])==null?void 0:_scenes2.descriptor.options.detachPreviousScreen)!==false;return _jsx(MaybeScreen,{style:[StyleSheet.absoluteFill],enabled:detachInactiveScreens,active:isScreenActive,freezeOnBlur:freezeOnBlur,shouldFreeze:isScreenActive===STATE_INACTIVE&&!isPreloaded,homeIndicatorHidden:autoHideHomeIndicator,pointerEvents:\"box-none\",children:_jsx(CardContainer,{index:index,interpolationIndex:interpolationIndex,modal:isModal,active:index===routes.length-1,focused:focused,opening:openingRouteKeys.includes(route.key),closing:closingRouteKeys.includes(route.key),layout:layout,gesture:gesture,scene:scene,safeAreaInsetTop:safeAreaInsetTop,safeAreaInsetRight:safeAreaInsetRight,safeAreaInsetBottom:safeAreaInsetBottom,safeAreaInsetLeft:safeAreaInsetLeft,onGestureStart:onGestureStart,onGestureCancel:onGestureCancel,onGestureEnd:onGestureEnd,headerHeight:headerHeight,isParentHeaderShown:isParentHeaderShown,onHeaderHeightChange:_this2.handleHeaderLayout,getPreviousScene:_this2.getPreviousScene,getFocusedRoute:_this2.getFocusedRoute,hasAbsoluteFloatHeader:isFloatHeaderAbsolute&&!headerTransparent,renderHeader:renderHeader,onOpenRoute:onOpenRoute,onCloseRoute:onCloseRoute,onTransitionStart:onTransitionStart,onTransitionEnd:onTransitionEnd,isNextScreenTransparent:isNextScreenTransparent,detachCurrentScreen:detachCurrentScreen,preloaded:isPreloaded})},route.key);})}),isFloatHeaderAbsolute?floatingHeader:null]});}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.routes===state.routes&&props.descriptors===state.descriptors){return null;}var gestures=[].concat(_toConsumableArray(props.routes),_toConsumableArray(props.state.preloadedRoutes)).reduce(function(acc,curr){var descriptor=props.descriptors[curr.key]||props.preloadedDescriptors[curr.key];var _ref4=(descriptor==null?void 0:descriptor.options)||{},animation=_ref4.animation;acc[curr.key]=state.gestures[curr.key]||new Animated.Value(props.openingRouteKeys.includes(curr.key)&&animation!=='none'||props.state.preloadedRoutes.includes(curr)?getDistanceFromOptions(state.layout,descriptor,props.direction==='rtl'):0);return acc;},{});var modalRouteKeys=getModalRouteKeys([].concat(_toConsumableArray(props.routes),_toConsumableArray(props.state.preloadedRoutes)),_objectSpread(_objectSpread({},props.descriptors),props.preloadedDescriptors));var scenes=[].concat(_toConsumableArray(props.routes),_toConsumableArray(props.state.preloadedRoutes)).map(function(route,index,self){var _optionsForTransition,_descriptor$options$h;var isPreloaded=props.state.preloadedRoutes.includes(route);var previousRoute=isPreloaded?undefined:self[index-1];var nextRoute=isPreloaded?undefined:self[index+1];var oldScene=state.scenes[index];var currentGesture=gestures[route.key];var previousGesture=previousRoute?gestures[previousRoute.key]:undefined;var nextGesture=nextRoute?gestures[nextRoute.key]:undefined;var descriptor=(isPreloaded?props.preloadedDescriptors:props.descriptors)[route.key]||state.descriptors[route.key]||(oldScene?oldScene.descriptor:FALLBACK_DESCRIPTOR);var nextDescriptor=nextRoute&&(props.descriptors[nextRoute==null?void 0:nextRoute.key]||state.descriptors[nextRoute==null?void 0:nextRoute.key]);var previousDescriptor=previousRoute&&(props.descriptors[previousRoute==null?void 0:previousRoute.key]||state.descriptors[previousRoute==null?void 0:previousRoute.key]);var optionsForTransitionConfig=index!==self.length-1&&nextDescriptor&&nextDescriptor.options.presentation!=='transparentModal'?nextDescriptor.options:descriptor.options;var isModal=modalRouteKeys.includes(route.key);var excludedPlatforms=Platform.OS!=='web'&&Platform.OS!=='windows'&&Platform.OS!=='macos';var animation=(_optionsForTransition=optionsForTransitionConfig.animation)!=null?_optionsForTransition:excludedPlatforms?'default':'none';var isAnimationEnabled=animation!=='none';var transitionPreset=animation!=='default'?NAMED_TRANSITIONS_PRESETS[animation]:isModal||optionsForTransitionConfig.presentation==='modal'?ModalTransition:optionsForTransitionConfig.presentation==='transparentModal'?ModalFadeTransition:DefaultTransition;var _optionsForTransition2=optionsForTransitionConfig.gestureEnabled,gestureEnabled=_optionsForTransition2===void 0?Platform.OS==='ios'&&isAnimationEnabled:_optionsForTransition2,_optionsForTransition3=optionsForTransitionConfig.gestureDirection,gestureDirection=_optionsForTransition3===void 0?transitionPreset.gestureDirection:_optionsForTransition3,_optionsForTransition4=optionsForTransitionConfig.transitionSpec,transitionSpec=_optionsForTransition4===void 0?transitionPreset.transitionSpec:_optionsForTransition4,_optionsForTransition5=optionsForTransitionConfig.cardStyleInterpolator,cardStyleInterpolator=_optionsForTransition5===void 0?isAnimationEnabled?transitionPreset.cardStyleInterpolator:forNoAnimationCard:_optionsForTransition5,_optionsForTransition6=optionsForTransitionConfig.headerStyleInterpolator,headerStyleInterpolator=_optionsForTransition6===void 0?transitionPreset.headerStyleInterpolator:_optionsForTransition6,_optionsForTransition7=optionsForTransitionConfig.cardOverlayEnabled,cardOverlayEnabled=_optionsForTransition7===void 0?Platform.OS!=='ios'&&optionsForTransitionConfig.presentation!=='transparentModal'||getIsModalPresentation(cardStyleInterpolator):_optionsForTransition7;var headerMode=(_descriptor$options$h=descriptor.options.headerMode)!=null?_descriptor$options$h:!(optionsForTransitionConfig.presentation==='modal'||optionsForTransitionConfig.presentation==='transparentModal'||(nextDescriptor==null?void 0:nextDescriptor.options.presentation)==='modal'||(nextDescriptor==null?void 0:nextDescriptor.options.presentation)==='transparentModal'||getIsModalPresentation(cardStyleInterpolator))&&Platform.OS==='ios'&&descriptor.options.header===undefined?'float':'screen';var isRTL=props.direction==='rtl';var scene={route:route,descriptor:_objectSpread(_objectSpread({},descriptor),{},{options:_objectSpread(_objectSpread({},descriptor.options),{},{animation:animation,cardOverlayEnabled:cardOverlayEnabled,cardStyleInterpolator:cardStyleInterpolator,gestureDirection:gestureDirection,gestureEnabled:gestureEnabled,headerStyleInterpolator:headerStyleInterpolator,transitionSpec:transitionSpec,headerMode:headerMode})}),progress:{current:getProgressFromGesture(currentGesture,state.layout,descriptor,isRTL),next:nextGesture&&(nextDescriptor==null?void 0:nextDescriptor.options.presentation)!=='transparentModal'?getProgressFromGesture(nextGesture,state.layout,nextDescriptor,isRTL):undefined,previous:previousGesture?getProgressFromGesture(previousGesture,state.layout,previousDescriptor,isRTL):undefined},__memo:[state.layout,descriptor,nextDescriptor,previousDescriptor,currentGesture,nextGesture,previousGesture]};if(oldScene&&scene.__memo.every(function(it,i){return oldScene.__memo[i]===it;})){return oldScene;}return scene;});return{routes:props.routes,scenes:scenes,gestures:gestures,descriptors:props.descriptors,headerHeights:getHeaderHeights(scenes,props.insets,props.isParentHeaderShown,props.isParentModal,state.layout,state.headerHeights)};}}]);}(React.Component);var styles=StyleSheet.create({container:{flex:1},absolute:{position:'absolute',top:0,start:0,end:0},floating:{zIndex:1}});","map":{"version":3,"names":["getDefaultHeaderHeight","SafeAreaProviderCompat","React","Animated","Platform","StyleSheet","View","forModalPresentationIOS","forNoAnimation","forNoAnimationCard","BottomSheetAndroid","DefaultTransition","FadeFromBottomAndroid","FadeFromRightAndroid","ModalFadeTransition","ModalSlideFromBottomIOS","ModalTransition","RevealFromBottomAndroid","ScaleFromCenterAndroid","SlideFromLeftIOS","SlideFromRightIOS","findLastIndex","getDistanceForDirection","getModalRouteKeys","MaybeScreen","MaybeScreenContainer","CardContainer","jsx","_jsx","jsxs","_jsxs","NAMED_TRANSITIONS_PRESETS","default","fade","fade_from_bottom","fade_from_right","none","reveal_from_bottom","scale_from_center","slide_from_left","slide_from_right","slide_from_bottom","select","ios","EPSILON","STATE_INACTIVE","STATE_TRANSITIONING_OR_BELOW_TOP","STATE_ON_TOP","FALLBACK_DESCRIPTOR","Object","freeze","options","getInterpolationIndex","scenes","index","cardStyleInterpolator","descriptor","interpolationIndex","i","_scenes$i","cardStyleInterpolatorCurrent","getIsModalPresentation","name","getIsModal","scene","isParentModal","isModalPresentation","isModal","getHeaderHeights","insets","isParentHeaderShown","layout","previous","reduce","acc","curr","_curr$descriptor$opti","_curr$descriptor$opti2","headerStatusBarHeight","top","headerStyle","style","flatten","height","route","key","getDistanceFromOptions","isRTL","_NAMED_TRANSITIONS_PR","gestureDirection","defaultGestureDirection","presentation","animation","getProgressFromGesture","gesture","distance","width","Math","max","interpolate","inputRange","outputRange","CardStack","_React$Component","props","_this","_classCallCheck","_callSuper","handleLayout","e","_e$nativeEvent$layout","nativeEvent","setState","state","headerHeights","handleHeaderLayout","_ref","_ref2","previousHeight","_objectSpread","_defineProperty","getFocusedRoute","routes","getPreviousScene","_ref3","getPreviousRoute","previousRoute","previousScene","find","undefined","gestures","initialMetrics","frame","descriptors","_inherits","_createClass","value","render","_this2","_this$props","openingRouteKeys","closingRouteKeys","onOpenRoute","onCloseRoute","renderHeader","onTransitionStart","onTransitionEnd","onGestureStart","onGestureEnd","onGestureCancel","_this$props$detachIna","detachInactiveScreens","OS","_this$state","focusedRoute","focusedHeaderHeight","isFloatHeaderAbsolute","slice","some","_scene$descriptor$opt","headerMode","headerTransparent","_options$headerShown","headerShown","activeScreensLimit","length","_options$detachPrevio","detachPreviousScreen","floatingHeader","Fragment","children","mode","onContentHeightChange","styles","floating","absolute","container","enabled","onLayout","concat","_toConsumableArray","preloadedRoutes","map","_scenes","_scenes2","focused","isPreloaded","includes","isScreenActive","sceneForActivity","outputValue","progress","current","extrapolate","_scene$descriptor$opt2","_scene$descriptor$opt3","freezeOnBlur","autoHideHomeIndicator","safeAreaInsetTop","safeAreaInsetRight","right","safeAreaInsetBottom","bottom","safeAreaInsetLeft","left","headerHeight","isNextScreenTransparent","detachCurrentScreen","absoluteFill","active","shouldFreeze","homeIndicatorHidden","pointerEvents","modal","opening","closing","onHeaderHeightChange","hasAbsoluteFloatHeader","preloaded","getDerivedStateFromProps","preloadedDescriptors","_ref4","Value","direction","modalRouteKeys","self","_optionsForTransition","_descriptor$options$h","nextRoute","oldScene","currentGesture","previousGesture","nextGesture","nextDescriptor","previousDescriptor","optionsForTransitionConfig","excludedPlatforms","isAnimationEnabled","transitionPreset","_optionsForTransition2","gestureEnabled","_optionsForTransition3","_optionsForTransition4","transitionSpec","_optionsForTransition5","_optionsForTransition6","headerStyleInterpolator","_optionsForTransition7","cardOverlayEnabled","header","next","__memo","every","it","Component","create","flex","position","start","end","zIndex"],"sources":["/home/runner/workspace/node_modules/@react-navigation/stack/src/views/Stack/CardStack.tsx"],"sourcesContent":["import {\n  getDefaultHeaderHeight,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport type {\n  LocaleDirection,\n  ParamListBase,\n  Route,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  type LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport {\n  forModalPresentationIOS,\n  forNoAnimation as forNoAnimationCard,\n} from '../../TransitionConfigs/CardStyleInterpolators';\nimport {\n  BottomSheetAndroid,\n  DefaultTransition,\n  FadeFromBottomAndroid,\n  FadeFromRightAndroid,\n  ModalFadeTransition,\n  ModalSlideFromBottomIOS,\n  ModalTransition,\n  RevealFromBottomAndroid,\n  ScaleFromCenterAndroid,\n  SlideFromLeftIOS,\n  SlideFromRightIOS,\n} from '../../TransitionConfigs/TransitionPresets';\nimport type {\n  Layout,\n  Scene,\n  StackAnimationName,\n  StackCardStyleInterpolator,\n  StackDescriptor,\n  StackDescriptorMap,\n  StackHeaderMode,\n  TransitionPreset,\n} from '../../types';\nimport { findLastIndex } from '../../utils/findLastIndex';\nimport { getDistanceForDirection } from '../../utils/getDistanceForDirection';\nimport { getModalRouteKeys } from '../../utils/getModalRoutesKeys';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport { MaybeScreen, MaybeScreenContainer } from '../Screens';\nimport { CardContainer } from './CardContainer';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  direction: LocaleDirection;\n  insets: EdgeInsets;\n  state: StackNavigationState<ParamListBase>;\n  descriptors: StackDescriptorMap;\n  preloadedDescriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  isParentHeaderShown: boolean;\n  isParentModal: boolean;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onGestureStart: (props: { route: Route<string> }) => void;\n  onGestureEnd: (props: { route: Route<string> }) => void;\n  onGestureCancel: (props: { route: Route<string> }) => void;\n  detachInactiveScreens?: boolean;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst NAMED_TRANSITIONS_PRESETS = {\n  default: DefaultTransition,\n  fade: ModalFadeTransition,\n  fade_from_bottom: FadeFromBottomAndroid,\n  fade_from_right: FadeFromRightAndroid,\n  none: DefaultTransition,\n  reveal_from_bottom: RevealFromBottomAndroid,\n  scale_from_center: ScaleFromCenterAndroid,\n  slide_from_left: SlideFromLeftIOS,\n  slide_from_right: SlideFromRightIOS,\n  slide_from_bottom: Platform.select({\n    ios: ModalSlideFromBottomIOS,\n    default: BottomSheetAndroid,\n  }),\n} as const satisfies Record<StackAnimationName, TransitionPreset>;\n\nconst EPSILON = 1e-5;\n\nconst STATE_INACTIVE = 0;\nconst STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nconst STATE_ON_TOP = 2;\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getInterpolationIndex = (scenes: Scene[], index: number) => {\n  const { cardStyleInterpolator } = scenes[index].descriptor.options;\n\n  // Start from current card and count backwards the number of cards with same interpolation\n  let interpolationIndex = 0;\n\n  for (let i = index - 1; i >= 0; i--) {\n    const cardStyleInterpolatorCurrent =\n      scenes[i]?.descriptor.options.cardStyleInterpolator;\n\n    if (cardStyleInterpolatorCurrent !== cardStyleInterpolator) {\n      break;\n    }\n\n    interpolationIndex++;\n  }\n\n  return interpolationIndex;\n};\n\nconst getIsModalPresentation = (\n  cardStyleInterpolator: StackCardStyleInterpolator\n) => {\n  return (\n    cardStyleInterpolator === forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\n  );\n};\n\nconst getIsModal = (\n  scene: Scene,\n  interpolationIndex: number,\n  isParentModal: boolean\n) => {\n  if (isParentModal) {\n    return true;\n  }\n\n  const { cardStyleInterpolator } = scene.descriptor.options;\n  const isModalPresentation = getIsModalPresentation(cardStyleInterpolator);\n  const isModal = isModalPresentation && interpolationIndex !== 0;\n\n  return isModal;\n};\n\nconst getHeaderHeights = (\n  scenes: Scene[],\n  insets: EdgeInsets,\n  isParentHeaderShown: boolean,\n  isParentModal: boolean,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return scenes.reduce<Record<string, number>>((acc, curr, index) => {\n    const {\n      headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n      headerStyle,\n    } = curr.descriptor.options;\n\n    const style = StyleSheet.flatten(headerStyle || {});\n\n    const height =\n      'height' in style && typeof style.height === 'number'\n        ? style.height\n        : previous[curr.route.key];\n\n    const interpolationIndex = getInterpolationIndex(scenes, index);\n    const isModal = getIsModal(curr, interpolationIndex, isParentModal);\n\n    acc[curr.route.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, isModal, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  layout: Layout,\n  descriptor: StackDescriptor | undefined,\n  isRTL: boolean\n) => {\n  if (descriptor?.options.gestureDirection) {\n    return getDistanceForDirection(\n      layout,\n      descriptor?.options.gestureDirection,\n      isRTL\n    );\n  }\n\n  const defaultGestureDirection =\n    descriptor?.options.presentation === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection;\n\n  const gestureDirection = descriptor?.options.animation\n    ? NAMED_TRANSITIONS_PRESETS[descriptor?.options.animation]?.gestureDirection\n    : defaultGestureDirection;\n\n  return getDistanceForDirection(layout, gestureDirection, isRTL);\n};\n\nconst getProgressFromGesture = (\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor: StackDescriptor | undefined,\n  isRTL: boolean\n) => {\n  const distance = getDistanceFromOptions(\n    {\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n      // This causes blank screen on web if it was previously inside container with display: none\n      width: Math.max(1, layout.width),\n      height: Math.max(1, layout.height),\n    },\n    descriptor,\n    isRTL\n  );\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Props,\n    state: State\n  ): Partial<State> | null {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = [\n      ...props.routes,\n      ...props.state.preloadedRoutes,\n    ].reduce<GestureValues>((acc, curr) => {\n      const descriptor =\n        props.descriptors[curr.key] || props.preloadedDescriptors[curr.key];\n      const { animation } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          (props.openingRouteKeys.includes(curr.key) && animation !== 'none') ||\n          props.state.preloadedRoutes.includes(curr)\n            ? getDistanceFromOptions(\n                state.layout,\n                descriptor,\n                props.direction === 'rtl'\n              )\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    const modalRouteKeys = getModalRouteKeys(\n      [...props.routes, ...props.state.preloadedRoutes],\n      {\n        ...props.descriptors,\n        ...props.preloadedDescriptors,\n      }\n    );\n\n    const scenes = [...props.routes, ...props.state.preloadedRoutes].map(\n      (route, index, self) => {\n        // For preloaded screens, we don't care about the previous and the next screen\n        const isPreloaded = props.state.preloadedRoutes.includes(route);\n        const previousRoute = isPreloaded ? undefined : self[index - 1];\n        const nextRoute = isPreloaded ? undefined : self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          (isPreloaded ? props.preloadedDescriptors : props.descriptors)[\n            route.key\n          ] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          nextRoute &&\n          (props.descriptors[nextRoute?.key] ||\n            state.descriptors[nextRoute?.key]);\n\n        const previousDescriptor =\n          previousRoute &&\n          (props.descriptors[previousRoute?.key] ||\n            state.descriptors[previousRoute?.key]);\n\n        // When a screen is not the last, it should use next screen's transition config\n        // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n        // For example combining a slide and a modal transition would look wrong otherwise\n        // With this approach, combining different transition styles in the same navigator mostly looks right\n        // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n        // but the majority of the transitions look alright\n        const optionsForTransitionConfig =\n          index !== self.length - 1 &&\n          nextDescriptor &&\n          nextDescriptor.options.presentation !== 'transparentModal'\n            ? nextDescriptor.options\n            : descriptor.options;\n\n        // Assume modal if there are already modal screens in the stack\n        // or current screen is a modal when no presentation is specified\n        const isModal = modalRouteKeys.includes(route.key);\n\n        // Disable screen transition animation by default on web, windows and macos to match the native behavior\n        const excludedPlatforms =\n          Platform.OS !== 'web' &&\n          Platform.OS !== 'windows' &&\n          Platform.OS !== 'macos';\n\n        const animation =\n          optionsForTransitionConfig.animation ??\n          (excludedPlatforms ? 'default' : 'none');\n        const isAnimationEnabled = animation !== 'none';\n\n        const transitionPreset =\n          animation !== 'default'\n            ? NAMED_TRANSITIONS_PRESETS[animation]\n            : isModal || optionsForTransitionConfig.presentation === 'modal'\n              ? ModalTransition\n              : optionsForTransitionConfig.presentation === 'transparentModal'\n                ? ModalFadeTransition\n                : DefaultTransition;\n\n        const {\n          gestureEnabled = Platform.OS === 'ios' && isAnimationEnabled,\n          gestureDirection = transitionPreset.gestureDirection,\n          transitionSpec = transitionPreset.transitionSpec,\n          cardStyleInterpolator = isAnimationEnabled\n            ? transitionPreset.cardStyleInterpolator\n            : forNoAnimationCard,\n          headerStyleInterpolator = transitionPreset.headerStyleInterpolator,\n          cardOverlayEnabled = (Platform.OS !== 'ios' &&\n            optionsForTransitionConfig.presentation !== 'transparentModal') ||\n            getIsModalPresentation(cardStyleInterpolator),\n        } = optionsForTransitionConfig;\n\n        const headerMode: StackHeaderMode =\n          descriptor.options.headerMode ??\n          (!(\n            optionsForTransitionConfig.presentation === 'modal' ||\n            optionsForTransitionConfig.presentation === 'transparentModal' ||\n            nextDescriptor?.options.presentation === 'modal' ||\n            nextDescriptor?.options.presentation === 'transparentModal' ||\n            getIsModalPresentation(cardStyleInterpolator)\n          ) &&\n          Platform.OS === 'ios' &&\n          descriptor.options.header === undefined\n            ? 'float'\n            : 'screen');\n\n        const isRTL = props.direction === 'rtl';\n\n        const scene = {\n          route,\n          descriptor: {\n            ...descriptor,\n            options: {\n              ...descriptor.options,\n              animation,\n              cardOverlayEnabled,\n              cardStyleInterpolator,\n              gestureDirection,\n              gestureEnabled,\n              headerStyleInterpolator,\n              transitionSpec,\n              headerMode,\n            },\n          },\n          progress: {\n            current: getProgressFromGesture(\n              currentGesture,\n              state.layout,\n              descriptor,\n              isRTL\n            ),\n            next:\n              nextGesture &&\n              nextDescriptor?.options.presentation !== 'transparentModal'\n                ? getProgressFromGesture(\n                    nextGesture,\n                    state.layout,\n                    nextDescriptor,\n                    isRTL\n                  )\n                : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor,\n                  isRTL\n                )\n              : undefined,\n          },\n          __memo: [\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }\n    );\n\n    return {\n      routes: props.routes,\n      scenes,\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        scenes,\n        props.insets,\n        props.isParentHeaderShown,\n        props.isParentModal,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: SafeAreaProviderCompat.initialMetrics.frame,\n      descriptors: this.props.descriptors,\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      headerHeights: {},\n    };\n  }\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          state.scenes,\n          props.insets,\n          props.isParentHeaderShown,\n          props.isParentModal,\n          layout,\n          state.headerHeights\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  private getFocusedRoute = () => {\n    const { state } = this.props;\n\n    return state.routes[state.index];\n  };\n\n  private getPreviousScene = ({ route }: { route: Route<string> }) => {\n    const { getPreviousRoute } = this.props;\n    const { scenes } = this.state;\n\n    const previousRoute = getPreviousRoute({ route });\n\n    if (previousRoute) {\n      const previousScene = scenes.find(\n        (scene) => scene.descriptor.route.key === previousRoute.key\n      );\n\n      return previousScene;\n    }\n\n    return undefined;\n  };\n\n  render() {\n    const {\n      insets,\n      state,\n      routes,\n      openingRouteKeys,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      renderHeader,\n      isParentHeaderShown,\n      isParentModal,\n      onTransitionStart,\n      onTransitionEnd,\n      onGestureStart,\n      onGestureEnd,\n      onGestureCancel,\n      detachInactiveScreens = Platform.OS === 'web' ||\n        Platform.OS === 'android' ||\n        Platform.OS === 'ios',\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedHeaderHeight = headerHeights[focusedRoute.key];\n\n    const isFloatHeaderAbsolute = this.state.scenes.slice(-2).some((scene) => {\n      const options = scene.descriptor.options ?? {};\n      const { headerMode, headerTransparent, headerShown = true } = options;\n\n      if (\n        headerTransparent ||\n        headerShown === false ||\n        headerMode === 'screen'\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n\n    let activeScreensLimit = 1;\n\n    for (let i = scenes.length - 1; i >= 0; i--) {\n      const { options } = scenes[i].descriptor;\n      const {\n        // By default, we don't want to detach the previous screen of the active one for modals\n        detachPreviousScreen = options.presentation === 'transparentModal'\n          ? false\n          : getIsModalPresentation(options.cardStyleInterpolator)\n            ? i !==\n              findLastIndex(scenes, (scene) => {\n                const { cardStyleInterpolator } = scene.descriptor.options;\n\n                return (\n                  cardStyleInterpolator === forModalPresentationIOS ||\n                  cardStyleInterpolator?.name === 'forModalPresentationIOS'\n                );\n              })\n            : true,\n      } = options;\n\n      if (detachPreviousScreen === false) {\n        activeScreensLimit++;\n      } else {\n        // Check at least last 2 screens before stopping\n        // This will make sure that screen isn't detached when another screen is animating on top of the transparent one\n        // For example, (Opaque -> Transparent -> Opaque)\n        if (i <= scenes.length - 2) {\n          break;\n        }\n      }\n    }\n\n    const floatingHeader = (\n      <React.Fragment key=\"header\">\n        {renderHeader({\n          mode: 'float',\n          layout,\n          scenes,\n          getPreviousScene: this.getPreviousScene,\n          getFocusedRoute: this.getFocusedRoute,\n          onContentHeightChange: this.handleHeaderLayout,\n          style: [\n            styles.floating,\n            isFloatHeaderAbsolute && [\n              // Without this, the header buttons won't be touchable on Android when headerTransparent: true\n              { height: focusedHeaderHeight },\n              styles.absolute,\n            ],\n          ],\n        })}\n      </React.Fragment>\n    );\n\n    return (\n      <View style={styles.container}>\n        {isFloatHeaderAbsolute ? null : floatingHeader}\n        <MaybeScreenContainer\n          enabled={detachInactiveScreens}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {[...routes, ...state.preloadedRoutes].map((route, index) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n            // It is possible that for a short period the route appears in both arrays.\n            // Particularly, if the screen is removed with `retain`, then it needs a moment to execute the animation.\n            // However, due to the router action, it immediately populates the `preloadedRoutes` array.\n            // Practically, the logic below takes care that it is rendered only once.\n            const isPreloaded =\n              state.preloadedRoutes.includes(route) && !routes.includes(route);\n            if (\n              state.preloadedRoutes.includes(route) &&\n              routes.includes(route) &&\n              index >= routes.length\n            ) {\n              return null;\n            }\n\n            // For the screens that shouldn't be active, the value is 0\n            // For those that should be active, but are not the top screen, the value is 1\n            // For those on top of the stack and with interaction enabled, the value is 2\n            // For the old implementation, it stays the same it was\n            let isScreenActive:\n              | Animated.AnimatedInterpolation<0 | 1 | 2>\n              | 0\n              | 1\n              | 2 = 1;\n\n            if (index < routes.length - activeScreensLimit - 1 || isPreloaded) {\n              // screen should be inactive because it is too deep in the stack\n              isScreenActive = STATE_INACTIVE;\n            } else {\n              const sceneForActivity = scenes[routes.length - 1];\n              const outputValue =\n                index === routes.length - 1\n                  ? STATE_ON_TOP // the screen is on top after the transition\n                  : index >= routes.length - activeScreensLimit\n                    ? STATE_TRANSITIONING_OR_BELOW_TOP // the screen should stay active after the transition, it is not on top but is in activeLimit\n                    : STATE_INACTIVE; // the screen should be active only during the transition, it is at the edge of activeLimit\n              isScreenActive = sceneForActivity\n                ? sceneForActivity.progress.current.interpolate({\n                    inputRange: [0, 1 - EPSILON, 1],\n                    outputRange: [1, 1, outputValue],\n                    extrapolate: 'clamp',\n                  })\n                : STATE_TRANSITIONING_OR_BELOW_TOP;\n            }\n\n            const {\n              headerShown = true,\n              headerTransparent,\n              freezeOnBlur,\n              autoHideHomeIndicator,\n            } = scene.descriptor.options;\n\n            const safeAreaInsetTop = insets.top;\n            const safeAreaInsetRight = insets.right;\n            const safeAreaInsetBottom = insets.bottom;\n            const safeAreaInsetLeft = insets.left;\n\n            const headerHeight =\n              headerShown !== false ? headerHeights[route.key] : 0;\n\n            // Start from current card and count backwards the number of cards with same interpolation\n            const interpolationIndex = getInterpolationIndex(scenes, index);\n            const isModal = getIsModal(\n              scene,\n              interpolationIndex,\n              isParentModal\n            );\n\n            const isNextScreenTransparent =\n              scenes[index + 1]?.descriptor.options.presentation ===\n              'transparentModal';\n\n            const detachCurrentScreen =\n              scenes[index + 1]?.descriptor.options.detachPreviousScreen !==\n              false;\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={[StyleSheet.absoluteFill]}\n                enabled={detachInactiveScreens}\n                active={isScreenActive}\n                freezeOnBlur={freezeOnBlur}\n                shouldFreeze={isScreenActive === STATE_INACTIVE && !isPreloaded}\n                homeIndicatorHidden={autoHideHomeIndicator}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  interpolationIndex={interpolationIndex}\n                  modal={isModal}\n                  active={index === routes.length - 1}\n                  focused={focused}\n                  opening={openingRouteKeys.includes(route.key)}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  onGestureStart={onGestureStart}\n                  onGestureCancel={onGestureCancel}\n                  onGestureEnd={onGestureEnd}\n                  headerHeight={headerHeight}\n                  isParentHeaderShown={isParentHeaderShown}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousScene={this.getPreviousScene}\n                  getFocusedRoute={this.getFocusedRoute}\n                  hasAbsoluteFloatHeader={\n                    isFloatHeaderAbsolute && !headerTransparent\n                  }\n                  renderHeader={renderHeader}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  isNextScreenTransparent={isNextScreenTransparent}\n                  detachCurrentScreen={detachCurrentScreen}\n                  preloaded={isPreloaded}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {isFloatHeaderAbsolute ? floatingHeader : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    start: 0,\n    end: 0,\n  },\n  floating: {\n    zIndex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}