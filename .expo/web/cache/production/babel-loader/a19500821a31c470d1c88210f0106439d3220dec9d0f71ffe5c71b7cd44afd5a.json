{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{createContext,useState,useEffect}from'react';import AsyncStorage from'@react-native-async-storage/async-storage';import*as eventService from\"../services/eventService\";import{jsx as _jsx}from\"react/jsx-runtime\";export var EventContext=createContext();export var EventProvider=function EventProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),events=_useState2[0],setEvents=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedEvent=_useState4[0],setSelectedEvent=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedGate=_useState6[0],setSelectedGate=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),gates=_useState8[0],setGates=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),rules=_useState10[0],setRules=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isLoading=_useState12[0],setIsLoading=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),error=_useState14[0],setError=_useState14[1];useEffect(function(){var loadSelectedEvent=function(){var _ref2=_asyncToGenerator(function*(){try{var eventJson=yield AsyncStorage.getItem('selectedEvent');var gateJson=yield AsyncStorage.getItem('selectedGate');if(eventJson){setSelectedEvent(JSON.parse(eventJson));}if(gateJson){setSelectedGate(JSON.parse(gateJson));}}catch(e){console.error('Failed to load event/gate from storage:',e);}});return function loadSelectedEvent(){return _ref2.apply(this,arguments);};}();loadSelectedEvent();},[]);var fetchEvents=function(){var _ref3=_asyncToGenerator(function*(){setIsLoading(true);setError(null);try{var eventsData=yield eventService.fetchEvents();setEvents(eventsData);return eventsData;}catch(err){setError('Failed to fetch events');console.error(err);return[];}finally{setIsLoading(false);}});return function fetchEvents(){return _ref3.apply(this,arguments);};}();var fetchGates=function(){var _ref4=_asyncToGenerator(function*(eventId){setIsLoading(true);setError(null);try{var gatesData=yield eventService.fetchGates(eventId);setGates(gatesData);return gatesData;}catch(err){setError('Failed to fetch gates');console.error(err);return[];}finally{setIsLoading(false);}});return function fetchGates(_x){return _ref4.apply(this,arguments);};}();var fetchRules=function(){var _ref5=_asyncToGenerator(function*(eventId){setIsLoading(true);setError(null);try{var rulesData=yield eventService.fetchEventRules(eventId);setRules(rulesData);return rulesData;}catch(err){setError('Failed to fetch rules');console.error(err);return[];}finally{setIsLoading(false);}});return function fetchRules(_x2){return _ref5.apply(this,arguments);};}();var selectEvent=function(){var _ref6=_asyncToGenerator(function*(event){setSelectedEvent(event);setSelectedGate(null);try{yield AsyncStorage.setItem('selectedEvent',JSON.stringify(event));yield AsyncStorage.removeItem('selectedGate');if(event){yield fetchGates(event.id);yield fetchRules(event.id);}}catch(e){console.error('Failed to save selected event to storage:',e);}});return function selectEvent(_x3){return _ref6.apply(this,arguments);};}();var selectGate=function(){var _ref7=_asyncToGenerator(function*(gate){setSelectedGate(gate);try{yield AsyncStorage.setItem('selectedGate',JSON.stringify(gate));}catch(e){console.error('Failed to save selected gate to storage:',e);}});return function selectGate(_x4){return _ref7.apply(this,arguments);};}();return _jsx(EventContext.Provider,{value:{events:events,selectedEvent:selectedEvent,selectedGate:selectedGate,gates:gates,rules:rules,isLoading:isLoading,error:error,fetchEvents:fetchEvents,fetchGates:fetchGates,fetchRules:fetchRules,selectEvent:selectEvent,selectGate:selectGate},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","AsyncStorage","eventService","jsx","_jsx","EventContext","EventProvider","_ref","children","_useState","_useState2","_slicedToArray","events","setEvents","_useState3","_useState4","selectedEvent","setSelectedEvent","_useState5","_useState6","selectedGate","setSelectedGate","_useState7","_useState8","gates","setGates","_useState9","_useState10","rules","setRules","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","error","setError","loadSelectedEvent","_ref2","_asyncToGenerator","eventJson","getItem","gateJson","JSON","parse","e","console","apply","arguments","fetchEvents","_ref3","eventsData","err","fetchGates","_ref4","eventId","gatesData","_x","fetchRules","_ref5","rulesData","fetchEventRules","_x2","selectEvent","_ref6","event","setItem","stringify","removeItem","id","_x3","selectGate","_ref7","gate","_x4","Provider","value"],"sources":["/home/runner/workspace/src/contexts/EventContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as eventService from '../services/eventService';\n\nexport const EventContext = createContext();\n\nexport const EventProvider = ({ children }) => {\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [selectedGate, setSelectedGate] = useState(null);\n  const [gates, setGates] = useState([]);\n  const [rules, setRules] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load selected event from storage on mount\n  useEffect(() => {\n    const loadSelectedEvent = async () => {\n      try {\n        const eventJson = await AsyncStorage.getItem('selectedEvent');\n        const gateJson = await AsyncStorage.getItem('selectedGate');\n        \n        if (eventJson) {\n          setSelectedEvent(JSON.parse(eventJson));\n        }\n        \n        if (gateJson) {\n          setSelectedGate(JSON.parse(gateJson));\n        }\n      } catch (e) {\n        console.error('Failed to load event/gate from storage:', e);\n      }\n    };\n\n    loadSelectedEvent();\n  }, []);\n\n  // Fetch events from API or use mock data\n  const fetchEvents = async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const eventsData = await eventService.fetchEvents();\n      setEvents(eventsData);\n      return eventsData;\n    } catch (err) {\n      setError('Failed to fetch events');\n      console.error(err);\n      return [];\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch gates for selected event\n  const fetchGates = async (eventId) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const gatesData = await eventService.fetchGates(eventId);\n      setGates(gatesData);\n      return gatesData;\n    } catch (err) {\n      setError('Failed to fetch gates');\n      console.error(err);\n      return [];\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch rules for selected event\n  const fetchRules = async (eventId) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const rulesData = await eventService.fetchEventRules(eventId);\n      setRules(rulesData);\n      return rulesData;\n    } catch (err) {\n      setError('Failed to fetch rules');\n      console.error(err);\n      return [];\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Select an event and save to storage\n  const selectEvent = async (event) => {\n    setSelectedEvent(event);\n    setSelectedGate(null); // Reset gate when event changes\n    \n    try {\n      await AsyncStorage.setItem('selectedEvent', JSON.stringify(event));\n      await AsyncStorage.removeItem('selectedGate');\n      \n      // Fetch gates for this event\n      if (event) {\n        await fetchGates(event.id);\n        await fetchRules(event.id);\n      }\n    } catch (e) {\n      console.error('Failed to save selected event to storage:', e);\n    }\n  };\n\n  // Select a gate and save to storage\n  const selectGate = async (gate) => {\n    setSelectedGate(gate);\n    \n    try {\n      await AsyncStorage.setItem('selectedGate', JSON.stringify(gate));\n    } catch (e) {\n      console.error('Failed to save selected gate to storage:', e);\n    }\n  };\n\n  return (\n    <EventContext.Provider\n      value={{\n        events,\n        selectedEvent,\n        selectedGate,\n        gates,\n        rules,\n        isLoading,\n        error,\n        fetchEvents,\n        fetchGates,\n        fetchRules,\n        selectEvent,\n        selectGate,\n      }}\n    >\n      {children}\n    </EventContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}