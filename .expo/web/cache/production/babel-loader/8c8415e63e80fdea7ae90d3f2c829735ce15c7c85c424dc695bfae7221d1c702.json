{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as React from'react';import*as Utils from\"./WebCameraUtils\";import{FacingModeToCameraType}from\"./WebConstants\";var VALID_SETTINGS_KEYS=['autoFocus','flashMode','exposureCompensation','colorTemperature','iso','brightness','contrast','saturation','sharpness','focusDistance','whiteBalance','zoom'];function useLoadedVideo(video,onLoaded){React.useEffect(function(){if(video){video.addEventListener('loadedmetadata',function(){requestAnimationFrame(function(){onLoaded();});});}},[video]);}export function useWebCameraStream(video,preferredType,settings,_ref){var onCameraReady=_ref.onCameraReady,onMountError=_ref.onMountError;var isStartingCamera=React.useRef(false);var activeStreams=React.useRef([]);var capabilities=React.useRef({autoFocus:'continuous',flashMode:'off',whiteBalance:'continuous',zoom:1});var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),stream=_React$useState2[0],setStream=_React$useState2[1];var mediaTrackSettings=React.useMemo(function(){return stream?stream.getTracks()[0].getSettings():null;},[stream]);var type=React.useMemo(function(){if(!mediaTrackSettings){return null;}var _mediaTrackSettings$f=mediaTrackSettings.facingMode,facingMode=_mediaTrackSettings$f===void 0?'user':_mediaTrackSettings$f;return FacingModeToCameraType[facingMode];},[mediaTrackSettings]);var getStreamDeviceAsync=React.useCallback(_asyncToGenerator(function*(){try{return yield Utils.getPreferredStreamDevice(preferredType);}catch(nativeEvent){if(__DEV__){console.warn(`Error requesting UserMedia for type \"${preferredType}\":`,nativeEvent);}if(onMountError){onMountError({nativeEvent:nativeEvent});}return null;}}),[preferredType,onMountError]);var resumeAsync=React.useCallback(_asyncToGenerator(function*(){var nextStream=yield getStreamDeviceAsync();if(Utils.compareStreams(nextStream,stream)){return false;}if(!activeStreams.current.some(function(value){return value.id===(nextStream==null?void 0:nextStream.id);})){activeStreams.current.push(nextStream);}setStream(nextStream);if(onCameraReady){onCameraReady();}return false;}),[getStreamDeviceAsync,setStream,onCameraReady,stream,activeStreams.current]);React.useEffect(function(){if(isStartingCamera.current){return;}isStartingCamera.current=true;resumeAsync().then(function(isStarting){isStartingCamera.current=isStarting;}).catch(function(){isStartingCamera.current=false;});},[preferredType]);React.useEffect(function(){var changes={};for(var key of Object.keys(settings)){if(!VALID_SETTINGS_KEYS.includes(key)){continue;}var nextValue=settings[key];if(nextValue!==capabilities.current[key]){changes[key]=nextValue;}}var hasChanges=!!Object.keys(changes).length;var nextWebCameraSettings=_objectSpread(_objectSpread({},capabilities.current),changes);if(hasChanges){Utils.syncTrackCapabilities(preferredType,stream,changes);}capabilities.current=nextWebCameraSettings;},[settings.autoFocus,settings.flashMode,settings.exposureCompensation,settings.colorTemperature,settings.iso,settings.brightness,settings.contrast,settings.saturation,settings.sharpness,settings.focusDistance,settings.whiteBalance,settings.zoom]);React.useEffect(function(){if(!video.current){return;}Utils.setVideoSource(video.current,stream);},[video.current,stream]);React.useEffect(function(){return function(){for(var _stream of activeStreams.current){Utils.stopMediaStream(_stream);}if(video.current){Utils.setVideoSource(video.current,stream);}};},[]);useLoadedVideo(video.current,function(){Utils.syncTrackCapabilities(preferredType,stream,capabilities.current);});return{type:type,mediaTrackSettings:mediaTrackSettings};}","map":{"version":3,"names":["React","Utils","FacingModeToCameraType","VALID_SETTINGS_KEYS","useLoadedVideo","video","onLoaded","useEffect","addEventListener","requestAnimationFrame","useWebCameraStream","preferredType","settings","_ref","onCameraReady","onMountError","isStartingCamera","useRef","activeStreams","capabilities","autoFocus","flashMode","whiteBalance","zoom","_React$useState","useState","_React$useState2","_slicedToArray","stream","setStream","mediaTrackSettings","useMemo","getTracks","getSettings","type","_mediaTrackSettings$f","facingMode","getStreamDeviceAsync","useCallback","_asyncToGenerator","getPreferredStreamDevice","nativeEvent","__DEV__","console","warn","resumeAsync","nextStream","compareStreams","current","some","value","id","push","then","isStarting","catch","changes","key","Object","keys","includes","nextValue","hasChanges","length","nextWebCameraSettings","_objectSpread","syncTrackCapabilities","exposureCompensation","colorTemperature","iso","brightness","contrast","saturation","sharpness","focusDistance","setVideoSource","stopMediaStream"],"sources":["/home/runner/workspace/node_modules/expo-camera/src/web/useWebCameraStream.ts"],"sourcesContent":["/* eslint-env browser */\nimport * as React from 'react';\n\nimport * as Utils from './WebCameraUtils';\nimport { FacingModeToCameraType } from './WebConstants';\nimport {\n  CameraReadyListener,\n  CameraType,\n  MountErrorListener,\n  WebCameraSettings,\n} from '../Camera.types';\n\nconst VALID_SETTINGS_KEYS = [\n  'autoFocus',\n  'flashMode',\n  'exposureCompensation',\n  'colorTemperature',\n  'iso',\n  'brightness',\n  'contrast',\n  'saturation',\n  'sharpness',\n  'focusDistance',\n  'whiteBalance',\n  'zoom',\n];\n\nfunction useLoadedVideo(video: HTMLVideoElement | null, onLoaded: () => void) {\n  React.useEffect(() => {\n    if (video) {\n      video.addEventListener('loadedmetadata', () => {\n        // without this async block the constraints aren't properly applied to the camera,\n        // this means that if you were to turn on the torch and swap to the front camera,\n        // then swap back to the rear camera the torch setting wouldn't be applied.\n        requestAnimationFrame(() => {\n          onLoaded();\n        });\n      });\n    }\n  }, [video]);\n}\n\nexport function useWebCameraStream(\n  video: React.MutableRefObject<HTMLVideoElement | null>,\n  preferredType: CameraType,\n  settings: Record<string, any>,\n  {\n    onCameraReady,\n    onMountError,\n  }: { onCameraReady?: CameraReadyListener; onMountError?: MountErrorListener }\n): {\n  type: CameraType | null;\n  mediaTrackSettings: MediaTrackSettings | null;\n} {\n  const isStartingCamera = React.useRef<boolean | null>(false);\n  const activeStreams = React.useRef<MediaStream[]>([]);\n  const capabilities = React.useRef<WebCameraSettings>({\n    autoFocus: 'continuous',\n    flashMode: 'off',\n    whiteBalance: 'continuous',\n    zoom: 1,\n  });\n  const [stream, setStream] = React.useState<MediaStream | null>(null);\n\n  const mediaTrackSettings = React.useMemo(() => {\n    return stream ? stream.getTracks()[0].getSettings() : null;\n  }, [stream]);\n\n  // The actual camera type - this can be different from the incoming camera type.\n  const type = React.useMemo(() => {\n    if (!mediaTrackSettings) {\n      return null;\n    }\n    // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n    const { facingMode = 'user' } = mediaTrackSettings;\n    return FacingModeToCameraType[facingMode];\n  }, [mediaTrackSettings]);\n\n  const getStreamDeviceAsync = React.useCallback(async (): Promise<MediaStream | null> => {\n    try {\n      return await Utils.getPreferredStreamDevice(preferredType);\n    } catch (nativeEvent) {\n      if (__DEV__) {\n        console.warn(`Error requesting UserMedia for type \"${preferredType}\":`, nativeEvent);\n      }\n      if (onMountError) {\n        onMountError({ nativeEvent });\n      }\n      return null;\n    }\n  }, [preferredType, onMountError]);\n\n  const resumeAsync = React.useCallback(async (): Promise<boolean> => {\n    const nextStream = await getStreamDeviceAsync();\n    if (Utils.compareStreams(nextStream, stream)) {\n      // Do nothing if the streams are the same.\n      // This happens when the device only supports one camera (i.e. desktop) and the mode was toggled between front/back while already active.\n      // Without this check there is a screen flash while the video switches.\n      return false;\n    }\n\n    // Save a history of all active streams (usually 2+) so we can close them later.\n    // Keeping them open makes swapping camera types much faster.\n    if (!activeStreams.current.some((value) => value.id === nextStream?.id)) {\n      activeStreams.current.push(nextStream!);\n    }\n\n    // Set the new stream -> update the video, settings, and actual camera type.\n    setStream(nextStream);\n    if (onCameraReady) {\n      onCameraReady();\n    }\n    return false;\n  }, [getStreamDeviceAsync, setStream, onCameraReady, stream, activeStreams.current]);\n\n  React.useEffect(() => {\n    // Restart the camera and guard concurrent actions.\n    if (isStartingCamera.current) {\n      return;\n    }\n    isStartingCamera.current = true;\n\n    resumeAsync()\n      .then((isStarting) => {\n        isStartingCamera.current = isStarting;\n      })\n      .catch(() => {\n        // ensure the camera can be started again.\n        isStartingCamera.current = false;\n      });\n  }, [preferredType]);\n\n  // Update the native camera with any custom capabilities.\n  React.useEffect(() => {\n    const changes: WebCameraSettings = {};\n\n    for (const key of Object.keys(settings)) {\n      if (!VALID_SETTINGS_KEYS.includes(key)) {\n        continue;\n      }\n      const nextValue = settings[key];\n      if (nextValue !== capabilities.current[key]) {\n        changes[key] = nextValue;\n      }\n    }\n\n    // Only update the native camera if changes were found\n    const hasChanges = !!Object.keys(changes).length;\n\n    const nextWebCameraSettings = { ...capabilities.current, ...changes };\n    if (hasChanges) {\n      Utils.syncTrackCapabilities(preferredType, stream, changes);\n    }\n\n    capabilities.current = nextWebCameraSettings;\n  }, [\n    settings.autoFocus,\n    settings.flashMode,\n    settings.exposureCompensation,\n    settings.colorTemperature,\n    settings.iso,\n    settings.brightness,\n    settings.contrast,\n    settings.saturation,\n    settings.sharpness,\n    settings.focusDistance,\n    settings.whiteBalance,\n    settings.zoom,\n  ]);\n\n  React.useEffect(() => {\n    // set or unset the video source.\n    if (!video.current) {\n      return;\n    }\n    Utils.setVideoSource(video.current, stream);\n  }, [video.current, stream]);\n\n  React.useEffect(() => {\n    return () => {\n      // Clean up on dismount, this is important for making sure the camera light goes off when the component is removed.\n      for (const stream of activeStreams.current) {\n        // Close all open streams.\n        Utils.stopMediaStream(stream);\n      }\n      if (video.current) {\n        // Invalidate the video source.\n        Utils.setVideoSource(video.current, stream);\n      }\n    };\n  }, []);\n\n  // Update props when the video loads.\n  useLoadedVideo(video.current, () => {\n    Utils.syncTrackCapabilities(preferredType, stream, capabilities.current);\n  });\n\n  return {\n    type,\n    mediaTrackSettings,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}