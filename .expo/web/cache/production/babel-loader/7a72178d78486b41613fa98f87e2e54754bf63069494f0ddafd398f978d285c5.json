{"ast":null,"code":"\"use strict\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _excluded=[\"styleInterpolator\",\"interpolationIndex\",\"current\",\"gesture\",\"next\",\"layout\",\"insets\",\"overlay\",\"overlayEnabled\",\"shadowEnabled\",\"gestureEnabled\",\"gestureDirection\",\"pageOverflowEnabled\",\"children\",\"containerStyle\",\"contentStyle\",\"closing\",\"direction\",\"gestureResponseDistance\",\"gestureVelocityImpact\",\"onClose\",\"onGestureBegin\",\"onGestureCanceled\",\"onGestureEnd\",\"onOpen\",\"onTransition\",\"transitionSpec\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}import Color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{CardAnimationContext}from\"../../utils/CardAnimationContext.js\";import{getDistanceForDirection}from\"../../utils/getDistanceForDirection.js\";import{getInvertedMultiplier}from\"../../utils/getInvertedMultiplier.js\";import{getShadowStyle}from\"../../utils/getShadowStyle.js\";import{memoize}from\"../../utils/memoize.js\";import{GestureState,PanGestureHandler}from\"../GestureHandler\";import{CardSheet}from\"./CardSheet.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var GESTURE_VELOCITY_IMPACT=0.3;var TRUE=1;var FALSE=0;var GESTURE_RESPONSE_DISTANCE_HORIZONTAL=50;var GESTURE_RESPONSE_DISTANCE_VERTICAL=135;var useNativeDriver=Platform.OS!=='web';var hasOpacityStyle=function hasOpacityStyle(style){if(style){var flattenedStyle=StyleSheet.flatten(style);return flattenedStyle.opacity!=null;}return false;};export var Card=function(_React$Component){function Card(){var _this;_classCallCheck(this,Card);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_callSuper(this,Card,[].concat(args));_this.isCurrentlyMounted=false;_this.isClosing=new Animated.Value(FALSE);_this.inverted=new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection,_this.props.direction==='rtl'));_this.layout={width:new Animated.Value(_this.props.layout.width),height:new Animated.Value(_this.props.layout.height)};_this.isSwiping=new Animated.Value(FALSE);_this.animate=function(_ref){var closing=_ref.closing,velocity=_ref.velocity;var _this$props=_this.props,transitionSpec=_this$props.transitionSpec,onOpen=_this$props.onOpen,onClose=_this$props.onClose,onTransition=_this$props.onTransition,gesture=_this$props.gesture;var toValue=_this.getAnimateToValue(_objectSpread(_objectSpread({},_this.props),{},{closing:closing}));_this.lastToValue=toValue;_this.isClosing.setValue(closing?TRUE:FALSE);var spec=closing?transitionSpec.close:transitionSpec.open;var animation=spec.animation==='spring'?Animated.spring:Animated.timing;_this.setPointerEventsEnabled(!closing);_this.handleStartInteraction();clearTimeout(_this.pendingGestureCallback);onTransition==null?void 0:onTransition({closing:closing,gesture:velocity!==undefined});animation(gesture,_objectSpread(_objectSpread({},spec.config),{},{velocity:velocity,toValue:toValue,useNativeDriver:useNativeDriver,isInteraction:false})).start(function(_ref2){var finished=_ref2.finished;_this.handleEndInteraction();clearTimeout(_this.pendingGestureCallback);if(finished){if(closing){onClose();}else{onOpen();}if(_this.isCurrentlyMounted){_this.forceUpdate();}}});};_this.getAnimateToValue=function(_ref3){var closing=_ref3.closing,layout=_ref3.layout,gestureDirection=_ref3.gestureDirection,direction=_ref3.direction,preloaded=_ref3.preloaded;if(!closing&&!preloaded){return 0;}return getDistanceForDirection(layout,gestureDirection,direction==='rtl');};_this.setPointerEventsEnabled=function(enabled){var _this$ref$current;var pointerEvents=enabled?'box-none':'none';(_this$ref$current=_this.ref.current)==null?void 0:_this$ref$current.setPointerEvents(pointerEvents);};_this.handleStartInteraction=function(){if(_this.interactionHandle===undefined){_this.interactionHandle=InteractionManager.createInteractionHandle();}};_this.handleEndInteraction=function(){if(_this.interactionHandle!==undefined){InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=undefined;}};_this.handleGestureStateChange=function(_ref4){var nativeEvent=_ref4.nativeEvent;var _this$props2=_this.props,direction=_this$props2.direction,layout=_this$props2.layout,onClose=_this$props2.onClose,onGestureBegin=_this$props2.onGestureBegin,onGestureCanceled=_this$props2.onGestureCanceled,onGestureEnd=_this$props2.onGestureEnd,gestureDirection=_this$props2.gestureDirection,gestureVelocityImpact=_this$props2.gestureVelocityImpact;switch(nativeEvent.state){case GestureState.ACTIVE:_this.isSwiping.setValue(TRUE);_this.handleStartInteraction();onGestureBegin==null?void 0:onGestureBegin();break;case GestureState.CANCELLED:case GestureState.FAILED:{_this.isSwiping.setValue(FALSE);_this.handleEndInteraction();var velocity=gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?nativeEvent.velocityY:nativeEvent.velocityX;_this.animate({closing:_this.props.closing,velocity:velocity});onGestureCanceled==null?void 0:onGestureCanceled();break;}case GestureState.END:{_this.isSwiping.setValue(FALSE);var distance;var translation;var _velocity;if(gestureDirection==='vertical'||gestureDirection==='vertical-inverted'){distance=layout.height;translation=nativeEvent.translationY;_velocity=nativeEvent.velocityY;}else{distance=layout.width;translation=nativeEvent.translationX;_velocity=nativeEvent.velocityX;}var closing=(translation+_velocity*gestureVelocityImpact)*getInvertedMultiplier(gestureDirection,direction==='rtl')>distance/2?_velocity!==0||translation!==0:_this.props.closing;_this.animate({closing:closing,velocity:_velocity});if(closing){_this.pendingGestureCallback=setTimeout(function(){onClose();_this.forceUpdate();},32);}onGestureEnd==null?void 0:onGestureEnd();break;}}};_this.getInterpolatedStyle=memoize(function(styleInterpolator,animation){return styleInterpolator(animation);});_this.getCardAnimation=memoize(function(interpolationIndex,current,next,layout,insetTop,insetRight,insetBottom,insetLeft){return{index:interpolationIndex,current:{progress:current},next:next&&{progress:next},closing:_this.isClosing,swiping:_this.isSwiping,inverted:_this.inverted,layouts:{screen:layout},insets:{top:insetTop,right:insetRight,bottom:insetBottom,left:insetLeft}};});_this.ref=React.createRef();return _this;}_inherits(Card,_React$Component);return _createClass(Card,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.props.preloaded){this.animate({closing:this.props.closing});}this.isCurrentlyMounted=true;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props3=this.props,gesture=_this$props3.gesture,direction=_this$props3.direction,layout=_this$props3.layout,gestureDirection=_this$props3.gestureDirection,opening=_this$props3.opening,closing=_this$props3.closing;var width=layout.width,height=layout.height;if(width!==prevProps.layout.width){this.layout.width.setValue(width);}if(height!==prevProps.layout.height){this.layout.height.setValue(height);}if(gestureDirection!==prevProps.gestureDirection){this.inverted.setValue(getInvertedMultiplier(gestureDirection,direction==='rtl'));}var toValue=this.getAnimateToValue(this.props);if(this.getAnimateToValue(prevProps)!==toValue||this.lastToValue!==toValue){this.animate({closing:closing});}else if(opening&&!prevProps.opening){gesture.setValue(getDistanceForDirection(layout,gestureDirection,direction==='rtl'));this.animate({closing:closing});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var _this$props$gesture;(_this$props$gesture=this.props.gesture)==null?void 0:_this$props$gesture.stopAnimation();this.isCurrentlyMounted=false;this.handleEndInteraction();}},{key:\"gestureActivationCriteria\",value:function gestureActivationCriteria(){var _this$props4=this.props,direction=_this$props4.direction,layout=_this$props4.layout,gestureDirection=_this$props4.gestureDirection,gestureResponseDistance=_this$props4.gestureResponseDistance;var enableTrackpadTwoFingerGesture=true;var distance=gestureResponseDistance!==undefined?gestureResponseDistance:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?GESTURE_RESPONSE_DISTANCE_VERTICAL:GESTURE_RESPONSE_DISTANCE_HORIZONTAL;if(gestureDirection==='vertical'){return{maxDeltaX:15,minOffsetY:5,hitSlop:{bottom:-layout.height+distance},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}else if(gestureDirection==='vertical-inverted'){return{maxDeltaX:15,minOffsetY:-5,hitSlop:{top:-layout.height+distance},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}else{var hitSlop=-layout.width+distance;var invertedMultiplier=getInvertedMultiplier(gestureDirection,direction==='rtl');if(invertedMultiplier===1){return{minOffsetX:5,maxDeltaY:20,hitSlop:{right:hitSlop},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}else{return{minOffsetX:-5,maxDeltaY:20,hitSlop:{left:hitSlop},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}}}},{key:\"render\",value:function render(){var _this$props5=this.props,styleInterpolator=_this$props5.styleInterpolator,interpolationIndex=_this$props5.interpolationIndex,current=_this$props5.current,gesture=_this$props5.gesture,next=_this$props5.next,layout=_this$props5.layout,insets=_this$props5.insets,overlay=_this$props5.overlay,overlayEnabled=_this$props5.overlayEnabled,shadowEnabled=_this$props5.shadowEnabled,gestureEnabled=_this$props5.gestureEnabled,gestureDirection=_this$props5.gestureDirection,pageOverflowEnabled=_this$props5.pageOverflowEnabled,children=_this$props5.children,customContainerStyle=_this$props5.containerStyle,contentStyle=_this$props5.contentStyle,closing=_this$props5.closing,direction=_this$props5.direction,gestureResponseDistance=_this$props5.gestureResponseDistance,gestureVelocityImpact=_this$props5.gestureVelocityImpact,onClose=_this$props5.onClose,onGestureBegin=_this$props5.onGestureBegin,onGestureCanceled=_this$props5.onGestureCanceled,onGestureEnd=_this$props5.onGestureEnd,onOpen=_this$props5.onOpen,onTransition=_this$props5.onTransition,transitionSpec=_this$props5.transitionSpec,rest=_objectWithoutProperties(_this$props5,_excluded);var interpolationProps=this.getCardAnimation(interpolationIndex,current,next,layout,insets.top,insets.right,insets.bottom,insets.left);var interpolatedStyle=this.getInterpolatedStyle(styleInterpolator,interpolationProps);var containerStyle=interpolatedStyle.containerStyle,cardStyle=interpolatedStyle.cardStyle,overlayStyle=interpolatedStyle.overlayStyle,shadowStyle=interpolatedStyle.shadowStyle;var handleGestureEvent=gestureEnabled?Animated.event([{nativeEvent:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?{translationY:gesture}:{translationX:gesture}}],{useNativeDriver:useNativeDriver}):undefined;var _StyleSheet$flatten=StyleSheet.flatten(contentStyle||{}),backgroundColor=_StyleSheet$flatten.backgroundColor;var isTransparent=typeof backgroundColor==='string'?Color(backgroundColor).alpha()===0:false;return _jsxs(CardAnimationContext.Provider,{value:interpolationProps,children:[_jsx(Animated.View,{style:{opacity:current},collapsable:false}),_jsxs(View,_objectSpread(_objectSpread({pointerEvents:\"box-none\",collapsable:false},rest),{},{children:[overlayEnabled?_jsx(View,{pointerEvents:\"box-none\",style:StyleSheet.absoluteFill,children:overlay({style:overlayStyle})}):null,_jsx(Animated.View,{style:[styles.container,containerStyle,customContainerStyle],pointerEvents:\"box-none\",children:_jsx(PanGestureHandler,_objectSpread(_objectSpread({enabled:layout.width!==0&&gestureEnabled,onGestureEvent:handleGestureEvent,onHandlerStateChange:this.handleGestureStateChange},this.gestureActivationCriteria()),{},{children:_jsxs(Animated.View,{needsOffscreenAlphaCompositing:hasOpacityStyle(cardStyle),style:[styles.container,cardStyle],children:[shadowEnabled&&shadowStyle&&!isTransparent?_jsx(Animated.View,{style:[styles.shadow,gestureDirection==='horizontal'?[styles.shadowHorizontal,styles.shadowStart]:gestureDirection==='horizontal-inverted'?[styles.shadowHorizontal,styles.shadowEnd]:gestureDirection==='vertical'?[styles.shadowVertical,styles.shadowTop]:[styles.shadowVertical,styles.shadowBottom],{backgroundColor:backgroundColor},shadowStyle],pointerEvents:\"none\"}):null,_jsx(CardSheet,{ref:this.ref,enabled:pageOverflowEnabled,layout:layout,style:contentStyle,children:children})]})}))})]}))]});}}]);}(React.Component);Card.defaultProps={shadowEnabled:false,gestureEnabled:true,gestureVelocityImpact:GESTURE_VELOCITY_IMPACT,overlay:function overlay(_ref5){var style=_ref5.style;return style?_jsx(Animated.View,{pointerEvents:\"none\",style:[styles.overlay,style]}):null;}};var styles=StyleSheet.create({container:{flex:1},overlay:{flex:1,backgroundColor:'#000'},shadow:{position:'absolute'},shadowHorizontal:_objectSpread({top:0,bottom:0,width:3},getShadowStyle({offset:{width:-1,height:1},radius:5,opacity:0.3})),shadowStart:{start:0},shadowEnd:{end:0},shadowVertical:_objectSpread({start:0,end:0,height:3},getShadowStyle({offset:{width:1,height:-1},radius:5,opacity:0.3})),shadowTop:{top:0},shadowBottom:{bottom:0}});","map":{"version":3,"names":["Color","React","Animated","InteractionManager","Platform","StyleSheet","View","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","getShadowStyle","memoize","GestureState","PanGestureHandler","CardSheet","jsx","_jsx","jsxs","_jsxs","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","OS","hasOpacityStyle","style","flattenedStyle","flatten","opacity","Card","_React$Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","isCurrentlyMounted","isClosing","Value","inverted","props","gestureDirection","direction","layout","width","height","isSwiping","animate","_ref","closing","velocity","_this$props","transitionSpec","onOpen","onClose","onTransition","gesture","toValue","getAnimateToValue","_objectSpread","lastToValue","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","_ref2","finished","handleEndInteraction","forceUpdate","_ref3","preloaded","enabled","_this$ref$current","pointerEvents","ref","current","setPointerEvents","interactionHandle","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","_ref4","nativeEvent","_this$props2","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","ACTIVE","CANCELLED","FAILED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","getInterpolatedStyle","styleInterpolator","getCardAnimation","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","createRef","_inherits","_createClass","key","value","componentDidMount","componentDidUpdate","prevProps","_this$props3","opening","componentWillUnmount","_this$props$gesture","stopAnimation","gestureActivationCriteria","_this$props4","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","_this$props5","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","children","customContainerStyle","containerStyle","contentStyle","rest","_objectWithoutProperties","_excluded","interpolationProps","interpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","_StyleSheet$flatten","backgroundColor","isTransparent","alpha","Provider","collapsable","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowStart","shadowEnd","shadowVertical","shadowTop","shadowBottom","Component","defaultProps","_ref5","create","flex","position","offset","radius","end"],"sources":["/home/runner/workspace/node_modules/@react-navigation/stack/src/views/Stack/Card.tsx"],"sourcesContent":["import type { LocaleDirection } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  type StyleProp,\n  StyleSheet,\n  View,\n  type ViewProps,\n  type ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport { CardAnimationContext } from '../../utils/CardAnimationContext';\nimport { getDistanceForDirection } from '../../utils/getDistanceForDirection';\nimport { getInvertedMultiplier } from '../../utils/getInvertedMultiplier';\nimport { getShadowStyle } from '../../utils/getShadowStyle';\nimport { memoize } from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  type PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport { CardSheet, type CardSheetRef } from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  opening: boolean;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation<number>;\n  current: Animated.AnimatedInterpolation<number>;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  direction: LocaleDirection;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  preloaded: boolean;\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    if (!this.props.preloaded) {\n      this.animate({\n        closing: this.props.closing,\n      });\n    }\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { gesture, direction, layout, gestureDirection, opening, closing } =\n      this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(\n        getInvertedMultiplier(gestureDirection, direction === 'rtl')\n      );\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // The route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    } else if (opening && !prevProps.opening) {\n      // This can happen when screen somewhere below in the stack comes into focus via rearranging\n      // Also reset the animated value to make sure that the animation starts from the beginning\n      gesture.setValue(\n        getDistanceForDirection(layout, gestureDirection, direction === 'rtl')\n      );\n\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture?.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(\n      this.props.gestureDirection,\n      this.props.direction === 'rtl'\n    )\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { transitionSpec, onOpen, onClose, onTransition, gesture } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n    direction,\n    preloaded,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n    direction: LocaleDirection;\n    preloaded: boolean;\n  }) => {\n    if (!closing && !preloaded) {\n      return 0;\n    }\n\n    return getDistanceForDirection(\n      layout,\n      gestureDirection,\n      direction === 'rtl'\n    );\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.ref.current?.setPointerEvents(pointerEvents);\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      direction,\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED:\n      case GestureState.FAILED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({\n          closing: this.props.closing,\n          velocity,\n        });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection, direction === 'rtl') >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation<number>,\n      next: Animated.AnimatedInterpolation<number> | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { direction, layout, gestureDirection, gestureResponseDistance } =\n      this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n            gestureDirection === 'vertical-inverted'\n          ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n          : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(\n        gestureDirection,\n        direction === 'rtl'\n      );\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private ref = React.createRef<CardSheetRef>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      closing,\n      direction,\n      gestureResponseDistance,\n      gestureVelocityImpact,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      onOpen,\n      onTransition,\n      transitionSpec,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View\n          pointerEvents=\"box-none\"\n          // Make sure this view is not removed on the new architecture, as it causes focus loss during navigation on Android.\n          // This can happen when the view flattening results in different trees - due to `overflow` style changing in a parent.\n          collapsable={false}\n          {...rest}\n        >\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowStart]\n                        : gestureDirection === 'horizontal-inverted'\n                          ? [styles.shadowHorizontal, styles.shadowEnd]\n                          : gestureDirection === 'vertical'\n                            ? [styles.shadowVertical, styles.shadowTop]\n                            : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.ref}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    ...getShadowStyle({\n      offset: {\n        width: -1,\n        height: 1,\n      },\n      radius: 5,\n      opacity: 0.3,\n    }),\n  },\n  shadowStart: {\n    start: 0,\n  },\n  shadowEnd: {\n    end: 0,\n  },\n  shadowVertical: {\n    start: 0,\n    end: 0,\n    height: 3,\n    ...getShadowStyle({\n      offset: {\n        width: 1,\n        height: -1,\n      },\n      radius: 5,\n      opacity: 0.3,\n    }),\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}